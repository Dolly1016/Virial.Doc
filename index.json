{
  "api/Virial.Accessibility.OverlayHolder.html": {
    "href": "api/Virial.Accessibility.OverlayHolder.html",
    "title": "Interface OverlayHolder | Virial",
    "summary": "Interface OverlayHolder Namespace Virial.Accessibility 緊急会議中、画面上部に表示されるオーバーレイを展開するアイコンを管理します。 public interface OverlayHolder Methods RegisterOverlay(GUIWidgetSupplier, Image, Color) オーバーレイを登録します。 void RegisterOverlay(GUIWidgetSupplier overlay, Image icon, Color color) Parameters overlay GUIWidgetSupplier オーバーレイのGUIウィジェット。 icon Image アイコン。 color Color アイコンの色。"
  },
  "api/Virial.Accessibility.html": {
    "href": "api/Virial.Accessibility.html",
    "title": "Namespace Virial.Accessibility | Virial",
    "summary": "Namespace Virial.Accessibility Interfaces OverlayHolder 緊急会議中、画面上部に表示されるオーバーレイを展開するアイコンを管理します。"
  },
  "api/Virial.Assignable.AllocationParameters.ExtraAssignment.html": {
    "href": "api/Virial.Assignable.AllocationParameters.ExtraAssignment.html",
    "title": "Delegate AllocationParameters.ExtraAssignment | Virial",
    "summary": "Delegate AllocationParameters.ExtraAssignment Namespace Virial.Assignable public delegate (DefinedRole role, int[]? argument) AllocationParameters.ExtraAssignment(DefinedRole assignable, int playerId) Parameters assignable DefinedRole playerId int Returns (DefinedRole role, int[] argument)"
  },
  "api/Virial.Assignable.AllocationParameters.ExtraAssignmentInfo.html": {
    "href": "api/Virial.Assignable.AllocationParameters.ExtraAssignmentInfo.html",
    "title": "Class AllocationParameters.ExtraAssignmentInfo | Virial",
    "summary": "Class AllocationParameters.ExtraAssignmentInfo Namespace Virial.Assignable 付随役職の割り当てを表します。 public record AllocationParameters.ExtraAssignmentInfo : IEquatable<AllocationParameters.ExtraAssignmentInfo> Inheritance object AllocationParameters.ExtraAssignmentInfo Implements IEquatable<AllocationParameters.ExtraAssignmentInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExtraAssignmentInfo(ExtraAssignment, RoleCategory) 付随役職の割り当てを表します。 public ExtraAssignmentInfo(AllocationParameters.ExtraAssignment Assigner, RoleCategory Category) Parameters Assigner AllocationParameters.ExtraAssignment Category RoleCategory Properties Assigner public AllocationParameters.ExtraAssignment Assigner { get; init; } Property Value AllocationParameters.ExtraAssignment Category public RoleCategory Category { get; init; } Property Value RoleCategory"
  },
  "api/Virial.Assignable.AllocationParameters.html": {
    "href": "api/Virial.Assignable.AllocationParameters.html",
    "title": "Interface AllocationParameters | Virial",
    "summary": "Interface AllocationParameters Namespace Virial.Assignable 割り当てパラメータを表します。 このパラメータの値は通常、オプションによって変更されます。 public interface AllocationParameters Properties Configurations 関係するすべてのコンフィグを返します。 IEnumerable<IConfiguration> Configurations { get; } Property Value IEnumerable<IConfiguration> HasExtraAssignment 追加割り当てを持つ場合、trueを返します。 bool HasExtraAssignment { get; } Property Value bool OtherCost 残り陣営への割り当てに必要なコストです。 int OtherCost { get; } Property Value int OthersAssignment 別陣営への追加割り当てです。 AllocationParameters.ExtraAssignmentInfo[] OthersAssignment { get; } Property Value ExtraAssignmentInfo[] RoleCount100 100%割り当て数です。 int RoleCount100 { get; } Property Value int RoleCountRandom 確率的な割り当て数です。 int RoleCountRandom { get; } Property Value int RoleCountSum 割り当て数の総和です。 int RoleCountSum { get; } Property Value int TeamAssignment 同陣営への追加割り当てです。 AllocationParameters.ExtraAssignmentInfo[] TeamAssignment { get; } Property Value ExtraAssignmentInfo[] TeamCost 同陣営への割り当てに必要なコストです。 int TeamCost { get; } Property Value int Methods GetRoleChance(int) count人目のプレイヤーの割り当て確率を0～100の値で取得します。 int GetRoleChance(int count) Parameters count int 何人目のプレイヤーかを表す1以上の値 Returns int GetRoleCountWhich(bool) 割り当て数を取得します。100%か確率的な割り当てか真偽値で選択できます。 int GetRoleCountWhich(bool get100) Parameters get100 bool Returns int"
  },
  "api/Virial.Assignable.AssignableFilterHolder.html": {
    "href": "api/Virial.Assignable.AssignableFilterHolder.html",
    "title": "Interface AssignableFilterHolder | Virial",
    "summary": "Interface AssignableFilterHolder Namespace Virial.Assignable モディファイアおよび幽霊役職の割り当てフィルタを持つ対象を表します。 public interface AssignableFilterHolder Properties GhostRoleFilter 付与されうる幽霊役職を制限するフィルタ。 DefinedGhostRoleのRoleFilterと同期しています。 GhostRoleFilter? GhostRoleFilter { get; } Property Value GhostRoleFilter ModifierFilter 付与されうるモディファイアを制限するフィルタです。 AllocatableDefinedModifierのRoleFilterと同期しています。 ModifierFilter? ModifierFilter { get; } Property Value ModifierFilter Methods CanLoad(DefinedAssignable) 幽霊役職/モディファイアを割り当てられるかどうか返します。 bool CanLoad(DefinedAssignable assignable) Parameters assignable DefinedAssignable 調べる対象の役職定義 Returns bool 割り当てられうる場合、true CanLoadDefault(DefinedAssignable) デフォルト設定で幽霊役職/モディファイアを割り当てられるかどうか返します。 bool CanLoadDefault(DefinedAssignable assignable) Parameters assignable DefinedAssignable 調べる対象の役職定義 Returns bool 割り当てられうる場合、true"
  },
  "api/Virial.Assignable.ByCategoryAllocatorOptions.CategoryOption.html": {
    "href": "api/Virial.Assignable.ByCategoryAllocatorOptions.CategoryOption.html",
    "title": "Class ByCategoryAllocatorOptions.CategoryOption | Virial",
    "summary": "Class ByCategoryAllocatorOptions.CategoryOption Namespace Virial.Assignable public record ByCategoryAllocatorOptions.CategoryOption : IEquatable<ByCategoryAllocatorOptions.CategoryOption> Inheritance object ByCategoryAllocatorOptions.CategoryOption Implements IEquatable<ByCategoryAllocatorOptions.CategoryOption> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryOption(int, string, string, IConfigurationHolder) public CategoryOption(int max, string categoryName, string internalName, IConfigurationHolder holder) Parameters max int categoryName string internalName string holder IConfigurationHolder CategoryOption(IOrderedSharableVariable<int>, IOrderedSharableVariable<int>, IOrderedSharableVariable<int>) public CategoryOption(IOrderedSharableVariable<int> Assignment, IOrderedSharableVariable<int> RandomAssignment, IOrderedSharableVariable<int> Chance) Parameters Assignment IOrderedSharableVariable<int> RandomAssignment IOrderedSharableVariable<int> Chance IOrderedSharableVariable<int> Properties Assignment public IOrderedSharableVariable<int> Assignment { get; init; } Property Value IOrderedSharableVariable<int> CalcedRandomAssignment public int CalcedRandomAssignment { get; } Property Value int Chance public IOrderedSharableVariable<int> Chance { get; init; } Property Value IOrderedSharableVariable<int> RandomAssignment public IOrderedSharableVariable<int> RandomAssignment { get; init; } Property Value IOrderedSharableVariable<int>"
  },
  "api/Virial.Assignable.ByCategoryAllocatorOptions.html": {
    "href": "api/Virial.Assignable.ByCategoryAllocatorOptions.html",
    "title": "Class ByCategoryAllocatorOptions | Virial",
    "summary": "Class ByCategoryAllocatorOptions Namespace Virial.Assignable public class ByCategoryAllocatorOptions : IAssignToCategorizedRole Inheritance object ByCategoryAllocatorOptions Implements IAssignToCategorizedRole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ByCategoryAllocatorOptions(string, IConfigurationHolder, bool, bool, bool) public ByCategoryAllocatorOptions(string internalName, IConfigurationHolder holder, bool canAssignToCrewmate, bool canAssignToImpostor, bool canAssignToNeutral) Parameters internalName string holder IConfigurationHolder canAssignToCrewmate bool canAssignToImpostor bool canAssignToNeutral bool Properties MaxCount public int MaxCount { get; } Property Value int Methods CanAssignOnThisGameByConfiguration(RoleCategory) public bool CanAssignOnThisGameByConfiguration(RoleCategory category) Parameters category RoleCategory Returns bool GetDisplayState() public ConfigurationHolderState GetDisplayState() Returns ConfigurationHolderState GetOptions(RoleCategory) 指定カテゴリーのオプションを返します。 標準の設定で指定カテゴリーで割り当てがなされない場合、nullが返ります。 public ByCategoryAllocatorOptions.CategoryOption? GetOptions(RoleCategory roleCategory) Parameters roleCategory RoleCategory Returns ByCategoryAllocatorOptions.CategoryOption"
  },
  "api/Virial.Assignable.Citation.html": {
    "href": "api/Virial.Assignable.Citation.html",
    "title": "Class Citation | Virial",
    "summary": "Class Citation Namespace Virial.Assignable 他Modからの引用情報を表します。 public class Citation Inheritance object Citation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Citation(string, Image?, TextComponent, string?) public Citation(string id, Image? logo, TextComponent name, string? relatedUrl) Parameters id string 引用のID。 logo Image 引用元Modのロゴ画像。 name TextComponent 引用元Modの表示名。 relatedUrl string 引用元ModのURL。適切なURLを指定してください。 Properties LogoImage 引用元Modのロゴ画像。 public Image? LogoImage { get; } Property Value Image Name 引用元Modの表示名。翻訳テキストを使用する場合は言語パックに適切な翻訳が含まれている必要があります。 public TextComponent Name { get; } Property Value TextComponent RelatedUrl 引用元ModのURL。 public string? RelatedUrl { get; } Property Value string Methods TryGetCitation(string, out Citation) IDから引用を取得します。 public static bool TryGetCitation(string id, out Citation citation) Parameters id string 引用のID。 citation Citation 引用が存在する場合は引用を取得します。 Returns bool"
  },
  "api/Virial.Assignable.DefinedAllocatableModifier.html": {
    "href": "api/Virial.Assignable.DefinedAllocatableModifier.html",
    "title": "Interface DefinedAllocatableModifier | Virial",
    "summary": "Interface DefinedAllocatableModifier Namespace Virial.Assignable ゲーム開始時に割り当てられるモディファイアの役職定義を表します。 public interface DefinedAllocatableModifier : DefinedModifier, DefinedAssignable, IRoleID, RuntimeAssignableGenerator<RuntimeModifier>, ICodeName, HasRoleFilter, HasAssignmentRoutine, ISpawnable, IAssignToCategorizedRole Inherited Members DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id RuntimeAssignableGenerator<RuntimeModifier>.CreateInstance(Player, int[]) ICodeName.CodeName HasRoleFilter.RoleFilter HasAssignmentRoutine.AssignPriority HasAssignmentRoutine.TryAssign(IRoleTable) ISpawnable.IsSpawnable IAssignToCategorizedRole.GetAssignProperties(RoleCategory, out int, out int, out int)"
  },
  "api/Virial.Assignable.DefinedAllocatableModifierTemplate.html": {
    "href": "api/Virial.Assignable.DefinedAllocatableModifierTemplate.html",
    "title": "Class DefinedAllocatableModifierTemplate | Virial",
    "summary": "Class DefinedAllocatableModifierTemplate Namespace Virial.Assignable public class DefinedAllocatableModifierTemplate : DefinedModifierTemplate, DefinedAssignable, IRoleID, HasAssignmentRoutine, RoleFilter, AssignableFilter<DefinedRole>, HasRoleFilter, ICodeName, ISpawnable, IAssignToCategorizedRole Inheritance object DefinedAssignableTemplate DefinedModifierTemplate DefinedAllocatableModifierTemplate Implements DefinedAssignable IRoleID HasAssignmentRoutine RoleFilter AssignableFilter<DefinedRole> HasRoleFilter ICodeName ISpawnable IAssignToCategorizedRole Inherited Members DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedAllocatableModifierTemplate(string, string, Color, IEnumerable<IConfiguration>?, bool, bool, bool) public DefinedAllocatableModifierTemplate(string localizedName, string codeName, Color color, IEnumerable<IConfiguration>? configurations = null, bool allocateToCrewmate = true, bool allocateToImpostor = true, bool allocateToNeutral = true) Parameters localizedName string codeName string color Color configurations IEnumerable<IConfiguration> allocateToCrewmate bool allocateToImpostor bool allocateToNeutral bool Methods CanAssignOnThisGameByConfiguration(RoleCategory) 今のゲームで、オプションの都合に依って割り当てられるかどうか調べます。 public bool CanAssignOnThisGameByConfiguration(RoleCategory category) Parameters category RoleCategory Returns bool GetAssignProperties(RoleCategory, out int, out int, out int) カテゴリごとの割り当てパラメータを取得します。 public void GetAssignProperties(RoleCategory category, out int assign100, out int assignRandom, out int assignChance) Parameters category RoleCategory カテゴリ。 assign100 int 100%割り当て数。 assignRandom int ランダム割り当て数。 assignChance int ランダム割り当ての割り当て確率。 SetModifier(IRoleTable, byte) protected virtual void SetModifier(IRoleTable roleTable, byte playerId) Parameters roleTable IRoleTable playerId byte"
  },
  "api/Virial.Assignable.DefinedAssignable.html": {
    "href": "api/Virial.Assignable.DefinedAssignable.html",
    "title": "Interface DefinedAssignable | Virial",
    "summary": "Interface DefinedAssignable Namespace Virial.Assignable プレイヤーに割り当てられる役職および追加役職の定義を表します。 public interface DefinedAssignable : IRoleID Inherited Members IRoleID.Id Properties AchievementGroups ヘルプ画面で表示する称号のグループです。 このグループに含まれるすべての役職の称号が表示されます。 IEnumerable<DefinedAssignable> AchievementGroups { get; } Property Value IEnumerable<DefinedAssignable> Color 役職の色です。 Color Color { get; } Property Value Color ConfigurationHolder 自身の役職の設定ホルダです。設定ホルダを持たない場合、nullを返します。 IConfigurationHolder? ConfigurationHolder { get; } Property Value IConfigurationHolder DisplayColoredName 役職の表示名です。リッチテキストタグを用いて色を付けています。 string DisplayColoredName { get; } Property Value string DisplayName 役職の表示名です。 string DisplayName { get; } Property Value string GeneralBlurb 一般的な二つ名テキストです。 string GeneralBlurb { get; } Property Value string GeneralColoredBlurb 一般的な二つ名テキストです。リッチテキストタグを用いて色を付けています。 string GeneralColoredBlurb { get; } Property Value string InternalName 役職の内部名です。 string InternalName { get; } Property Value string LocalizedName 役職の翻訳用の名称です。 string LocalizedName { get; } Property Value string ShowOnFreeplayScreen フリープレイの役職一覧に表示するかどうか設定できます。 bool ShowOnFreeplayScreen { get; } Property Value bool ShowOnHelpScreen ヘルプ画面上で表示するかどうか設定できます。 bool ShowOnHelpScreen { get; } Property Value bool"
  },
  "api/Virial.Assignable.DefinedAssignableTemplate.html": {
    "href": "api/Virial.Assignable.DefinedAssignableTemplate.html",
    "title": "Class DefinedAssignableTemplate | Virial",
    "summary": "Class DefinedAssignableTemplate Namespace Virial.Assignable 役職定義のテンプレートです。 public class DefinedAssignableTemplate : DefinedAssignable, IRoleID Inheritance object DefinedAssignableTemplate Implements DefinedAssignable IRoleID Derived DefinedGhostRoleTemplate DefinedModifierTemplate DefinedSingleAssignableTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedAssignableTemplate(string, Color, ConfigurationTab?, Func<bool>?, Func<ConfigurationHolderState>?) public DefinedAssignableTemplate(string localizedName, Color color, ConfigurationTab? tab = null, Func<bool>? optionHolderPredicate = null, Func<ConfigurationHolderState>? optionHolderState = null) Parameters localizedName string color Color tab ConfigurationTab optionHolderPredicate Func<bool> optionHolderState Func<ConfigurationHolderState> Properties ConfigurationHolder protected IConfigurationHolder? ConfigurationHolder { get; } Property Value IConfigurationHolder LocalizedName protected string LocalizedName { get; } Property Value string RoleColor protected Color RoleColor { get; } Property Value Color"
  },
  "api/Virial.Assignable.DefinedCategorizedAssignable.html": {
    "href": "api/Virial.Assignable.DefinedCategorizedAssignable.html",
    "title": "Interface DefinedCategorizedAssignable | Virial",
    "summary": "Interface DefinedCategorizedAssignable Namespace Virial.Assignable 役職カテゴリで分類される役職の定義を表します。 クルーメイト役職・インポスター役職・第三陣営役職が該当します。 public interface DefinedCategorizedAssignable : DefinedAssignable, IRoleID Inherited Members DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id Properties Category 役職のカテゴリ。役職割り当て時に使用します。 RoleCategory Category { get; } Property Value RoleCategory DisplayColoredShort 役職の省略名です。リッチテキストタグを用いて色を付けています。 string DisplayColoredShort { get; } Property Value string DisplayShort 役職の省略名です。ゲーム終了時の役職開示画面などで使用します。 string DisplayShort { get; } Property Value string"
  },
  "api/Virial.Assignable.DefinedGhostRole.html": {
    "href": "api/Virial.Assignable.DefinedGhostRole.html",
    "title": "Interface DefinedGhostRole | Virial",
    "summary": "Interface DefinedGhostRole Namespace Virial.Assignable 幽霊役職の役職定義を表します。 public interface DefinedGhostRole : DefinedCategorizedAssignable, DefinedAssignable, IRoleID, RuntimeAssignableGenerator<RuntimeGhostRole>, ICodeName, HasRoleFilter, IHasCategorizedRoleAllocator<DefinedGhostRole>, IAssignToCategorizedRole Inherited Members DefinedCategorizedAssignable.Category DefinedCategorizedAssignable.DisplayShort DefinedCategorizedAssignable.DisplayColoredShort DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id RuntimeAssignableGenerator<RuntimeGhostRole>.CreateInstance(Player, int[]) ICodeName.CodeName HasRoleFilter.RoleFilter IHasCategorizedRoleAllocator<DefinedGhostRole>.GenerateRoleAllocator() IAssignToCategorizedRole.GetAssignProperties(RoleCategory, out int, out int, out int)"
  },
  "api/Virial.Assignable.DefinedGhostRoleTemplate.GhostAllocator.html": {
    "href": "api/Virial.Assignable.DefinedGhostRoleTemplate.GhostAllocator.html",
    "title": "Class DefinedGhostRoleTemplate.GhostAllocator | Virial",
    "summary": "Class DefinedGhostRoleTemplate.GhostAllocator Namespace Virial.Assignable public class DefinedGhostRoleTemplate.GhostAllocator : ICategorizedRoleAllocator<DefinedGhostRole> Inheritance object DefinedGhostRoleTemplate.GhostAllocator Implements ICategorizedRoleAllocator<DefinedGhostRole> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GhostAllocator(DefinedGhostRoleTemplate) public GhostAllocator(DefinedGhostRoleTemplate role) Parameters role DefinedGhostRoleTemplate"
  },
  "api/Virial.Assignable.DefinedGhostRoleTemplate.html": {
    "href": "api/Virial.Assignable.DefinedGhostRoleTemplate.html",
    "title": "Class DefinedGhostRoleTemplate | Virial",
    "summary": "Class DefinedGhostRoleTemplate Namespace Virial.Assignable public class DefinedGhostRoleTemplate : DefinedAssignableTemplate, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, RoleFilter, AssignableFilter<DefinedRole>, HasRoleFilter, IHasCategorizedRoleAllocator<DefinedGhostRole>, IAssignToCategorizedRole Inheritance object DefinedAssignableTemplate DefinedGhostRoleTemplate Implements DefinedCategorizedAssignable DefinedAssignable IRoleID RoleFilter AssignableFilter<DefinedRole> HasRoleFilter IHasCategorizedRoleAllocator<DefinedGhostRole> IAssignToCategorizedRole Inherited Members DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedGhostRoleTemplate(string, Color, RoleCategory, IConfiguration[]?) public DefinedGhostRoleTemplate(string localizedName, Color color, RoleCategory category, IConfiguration[]? configurations = null) Parameters localizedName string color Color category RoleCategory configurations IConfiguration[] Properties Category protected RoleCategory Category { get; } Property Value RoleCategory Methods GetAssignProperties(RoleCategory, out int, out int, out int) カテゴリごとの割り当てパラメータを取得します。 public void GetAssignProperties(RoleCategory category, out int assign100, out int assignRandom, out int assignChance) Parameters category RoleCategory カテゴリ。 assign100 int 100%割り当て数。 assignRandom int ランダム割り当て数。 assignChance int ランダム割り当ての割り当て確率。"
  },
  "api/Virial.Assignable.DefinedModifier.html": {
    "href": "api/Virial.Assignable.DefinedModifier.html",
    "title": "Interface DefinedModifier | Virial",
    "summary": "Interface DefinedModifier Namespace Virial.Assignable プレイヤーに割り当てられるモディファイアの役職定義を表します。 public interface DefinedModifier : DefinedAssignable, IRoleID, RuntimeAssignableGenerator<RuntimeModifier> Inherited Members DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id RuntimeAssignableGenerator<RuntimeModifier>.CreateInstance(Player, int[])"
  },
  "api/Virial.Assignable.DefinedModifierTemplate.html": {
    "href": "api/Virial.Assignable.DefinedModifierTemplate.html",
    "title": "Class DefinedModifierTemplate | Virial",
    "summary": "Class DefinedModifierTemplate Namespace Virial.Assignable public class DefinedModifierTemplate : DefinedAssignableTemplate, DefinedAssignable, IRoleID Inheritance object DefinedAssignableTemplate DefinedModifierTemplate Implements DefinedAssignable IRoleID Derived DefinedAllocatableModifierTemplate Inherited Members DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedModifierTemplate(string, Color, IEnumerable<IConfiguration>?, bool, Func<bool>?) public DefinedModifierTemplate(string localizedName, Color color, IEnumerable<IConfiguration>? configurations = null, bool withConfigurationHolder = true, Func<bool>? optionHolderPredicate = null) Parameters localizedName string color Color configurations IEnumerable<IConfiguration> withConfigurationHolder bool optionHolderPredicate Func<bool>"
  },
  "api/Virial.Assignable.DefinedRole.html": {
    "href": "api/Virial.Assignable.DefinedRole.html",
    "title": "Interface DefinedRole | Virial",
    "summary": "Interface DefinedRole Namespace Virial.Assignable プレイヤーに割り当てられる役職の定義を表します。 public interface DefinedRole : DefinedSingleAssignable, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable, RuntimeAssignableGenerator<RuntimeRole>, IGuessed, AssignableFilterHolder Inherited Members DefinedSingleAssignable.Team DefinedSingleAssignable.AllocationParameters DefinedSingleAssignable.JackalAllocationParameters DefinedCategorizedAssignable.Category DefinedCategorizedAssignable.DisplayShort DefinedCategorizedAssignable.DisplayColoredShort DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id ISpawnable.IsSpawnable RuntimeAssignableGenerator<RuntimeRole>.CreateInstance(Player, int[]) IGuessed.CanBeGuessDefault IGuessed.CanBeGuess IGuessed.CanBeGuessVariable AssignableFilterHolder.ModifierFilter AssignableFilterHolder.GhostRoleFilter AssignableFilterHolder.CanLoadDefault(DefinedAssignable) AssignableFilterHolder.CanLoad(DefinedAssignable) Properties AdditionalRoles 追加割り当てされる役職を一覧で返します。割り当て数と一致する必要はありません。 DefinedRole[] AdditionalRoles { get; } Property Value DefinedRole[] DisplayIntroBlurb 役職のゲーム開始時の表示。 string DisplayIntroBlurb { get; } Property Value string IsJackalizable ジャッカル化可能な場合はtrueを返します。 ジャッカル用作用素を生成できる必要があります。 bool IsJackalizable { get; } Property Value bool IsMadmate マッドメイト系の役職の場合はtrueを返します。 bool IsMadmate { get; } Property Value bool Methods GetDisplayName(IPlayerAbility) 能力から表示名を取得します。主にジャッカル化能力と簒奪された能力で使用します。 string GetDisplayName(IPlayerAbility ability) Parameters ability IPlayerAbility Returns string GetJackalizedAbility(Player, int[]) ジャッカル化可能な場合はジャッカル化能力を生成します。 ジャッカル化可能でない場合の動作は未定義で構いません。 IPlayerAbility GetJackalizedAbility(Player jackal, int[] arguments) Parameters jackal Player 割り当て対象のプレイヤー。 arguments int[] 割り当てのパラメータ。 Returns IPlayerAbility GetUsurpedAbility(Player, int[]) 簒奪された能力を生成します。 IUsurpableAbility? GetUsurpedAbility(Player player, int[] arguments) Parameters player Player 割り当て対象のプレイヤー。 arguments int[] 割り当てのパラメータ。 Returns IUsurpableAbility 簒奪された能力。簒奪不可能な場合はnull。"
  },
  "api/Virial.Assignable.DefinedRoleTemplate.html": {
    "href": "api/Virial.Assignable.DefinedRoleTemplate.html",
    "title": "Class DefinedRoleTemplate | Virial",
    "summary": "Class DefinedRoleTemplate Namespace Virial.Assignable public class DefinedRoleTemplate : DefinedSingleAssignableTemplate, DefinedSingleAssignable, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable, IGuessed, AssignableFilterHolder Inheritance object DefinedAssignableTemplate DefinedSingleAssignableTemplate DefinedRoleTemplate Implements DefinedSingleAssignable DefinedCategorizedAssignable DefinedAssignable IRoleID ISpawnable IGuessed AssignableFilterHolder Derived DefinedSingleAbilityRoleTemplate<Ability> DefinedUsurpableAdvancedRoleTemplate<Ability, UsurpedAbility> Inherited Members DefinedSingleAssignableTemplate.Category DefinedSingleAssignableTemplate.Team DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedRoleTemplate(string, Color, RoleCategory, RoleTeam, IEnumerable<IConfiguration>?, bool, bool, Func<bool>?, Func<ExtraAssignmentInfo[]?>?, Func<ExtraAssignmentInfo[]?>?) public DefinedRoleTemplate(string localizedName, Color color, RoleCategory category, RoleTeam team, IEnumerable<IConfiguration>? configurations = null, bool withAssignmentOption = true, bool withOptionHolder = true, Func<bool>? optionHolderPredicate = null, Func<AllocationParameters.ExtraAssignmentInfo[]?>? teamAssignments = null, Func<AllocationParameters.ExtraAssignmentInfo[]?>? othersAssignments = null) Parameters localizedName string color Color category RoleCategory team RoleTeam configurations IEnumerable<IConfiguration> withAssignmentOption bool withOptionHolder bool optionHolderPredicate Func<bool> teamAssignments Func<AllocationParameters.ExtraAssignmentInfo[]> othersAssignments Func<AllocationParameters.ExtraAssignmentInfo[]> Methods CanLoadDefaultTemplate(DefinedAssignable) protected bool CanLoadDefaultTemplate(DefinedAssignable assignable) Parameters assignable DefinedAssignable Returns bool"
  },
  "api/Virial.Assignable.DefinedSingleAbilityRole-1.html": {
    "href": "api/Virial.Assignable.DefinedSingleAbilityRole-1.html",
    "title": "Interface DefinedSingleAbilityRole<Ability> | Virial",
    "summary": "Interface DefinedSingleAbilityRole<Ability> Namespace Virial.Assignable ジャッカル化あるいは簒奪された能力、および通常の能力を同一のクラスで定義できる役職の定義を表します。 public interface DefinedSingleAbilityRole<Ability> : DefinedRole, DefinedSingleAssignable, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable, IGuessed, AssignableFilterHolder, RuntimeAssignableGenerator<RuntimeRole> where Ability : class, IPlayerAbility Type Parameters Ability 役職の能力。 Inherited Members DefinedRole.DisplayIntroBlurb DefinedRole.IsJackalizable DefinedRole.GetJackalizedAbility(Player, int[]) DefinedRole.GetUsurpedAbility(Player, int[]) DefinedRole.IsMadmate DefinedRole.AdditionalRoles DefinedRole.GetDisplayName(IPlayerAbility) DefinedSingleAssignable.Team DefinedSingleAssignable.AllocationParameters DefinedSingleAssignable.JackalAllocationParameters DefinedCategorizedAssignable.Category DefinedCategorizedAssignable.DisplayShort DefinedCategorizedAssignable.DisplayColoredShort DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id ISpawnable.IsSpawnable IGuessed.CanBeGuessDefault IGuessed.CanBeGuess IGuessed.CanBeGuessVariable AssignableFilterHolder.ModifierFilter AssignableFilterHolder.GhostRoleFilter AssignableFilterHolder.CanLoadDefault(DefinedAssignable) AssignableFilterHolder.CanLoad(DefinedAssignable) RuntimeAssignableGenerator<RuntimeRole>.CreateInstance(Player, int[]) Methods CreateAbility(Player, int[]) 役職の能力を生成します。 Ability CreateAbility(Player player, int[] arguments) Parameters player Player 割り当て対象のプレイヤー。 arguments int[] 割り当てのパラメータ。 Returns Ability GetDisplayAbilityName(Ability) 能力から役職の表示名を取得します。 string? GetDisplayAbilityName(Ability ability) Parameters ability Ability 能力 Returns string"
  },
  "api/Virial.Assignable.DefinedSingleAbilityRoleTemplate-1.html": {
    "href": "api/Virial.Assignable.DefinedSingleAbilityRoleTemplate-1.html",
    "title": "Class DefinedSingleAbilityRoleTemplate<Ability> | Virial",
    "summary": "Class DefinedSingleAbilityRoleTemplate<Ability> Namespace Virial.Assignable public abstract class DefinedSingleAbilityRoleTemplate<Ability> : DefinedRoleTemplate, DefinedSingleAbilityRole<Ability>, DefinedRole, DefinedSingleAssignable, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable, IGuessed, AssignableFilterHolder, RuntimeAssignableGenerator<RuntimeRole> where Ability : class, IPlayerAbility Type Parameters Ability Inheritance object DefinedAssignableTemplate DefinedSingleAssignableTemplate DefinedRoleTemplate DefinedSingleAbilityRoleTemplate<Ability> Implements DefinedSingleAbilityRole<Ability> DefinedRole DefinedSingleAssignable DefinedCategorizedAssignable DefinedAssignable IRoleID ISpawnable IGuessed AssignableFilterHolder RuntimeAssignableGenerator<RuntimeRole> Inherited Members DefinedRoleTemplate.CanLoadDefaultTemplate(DefinedAssignable) DefinedSingleAssignableTemplate.Category DefinedSingleAssignableTemplate.Team DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedSingleAbilityRoleTemplate(string, Color, RoleCategory, RoleTeam, IEnumerable<IConfiguration>?, bool, bool, Func<bool>?) public DefinedSingleAbilityRoleTemplate(string localizedName, Color color, RoleCategory category, RoleTeam team, IEnumerable<IConfiguration>? configurations = null, bool withAssignmentOption = true, bool withOptionHolder = true, Func<bool>? optionHolderPredicate = null) Parameters localizedName string color Color category RoleCategory team RoleTeam configurations IEnumerable<IConfiguration> withAssignmentOption bool withOptionHolder bool optionHolderPredicate Func<bool> Methods CreateAbility(Player, int[]) 役職の能力を生成します。 public abstract Ability CreateAbility(Player player, int[] arguments) Parameters player Player 割り当て対象のプレイヤー。 arguments int[] 割り当てのパラメータ。 Returns Ability GetDisplayAbilityName(Ability) 能力から役職の表示名を取得します。 public virtual string? GetDisplayAbilityName(Ability ability) Parameters ability Ability 能力 Returns string"
  },
  "api/Virial.Assignable.DefinedSingleAssignable.html": {
    "href": "api/Virial.Assignable.DefinedSingleAssignable.html",
    "title": "Interface DefinedSingleAssignable | Virial",
    "summary": "Interface DefinedSingleAssignable Namespace Virial.Assignable 単一のチームに属する役職の定義です。 public interface DefinedSingleAssignable : DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable Inherited Members DefinedCategorizedAssignable.Category DefinedCategorizedAssignable.DisplayShort DefinedCategorizedAssignable.DisplayColoredShort DefinedAssignable.LocalizedName DefinedAssignable.ShowOnHelpScreen DefinedAssignable.ShowOnFreeplayScreen DefinedAssignable.InternalName DefinedAssignable.DisplayName DefinedAssignable.DisplayColoredName DefinedAssignable.GeneralBlurb DefinedAssignable.GeneralColoredBlurb DefinedAssignable.Color DefinedAssignable.ConfigurationHolder DefinedAssignable.AchievementGroups IRoleID.Id ISpawnable.IsSpawnable Properties AllocationParameters 割り当てのパラメータを返します。ゲーム内オプションで設定した割り当てを表します。 AllocationParameters? AllocationParameters { get; } Property Value AllocationParameters JackalAllocationParameters ジャッカル化割り当てのパラメータを返します。ゲーム内オプションで設定した割り当てを表します。 AllocationParameters? JackalAllocationParameters { get; } Property Value AllocationParameters Team 役職の属する陣営を表します。おもに勝敗判定に使用されます。 RoleTeam Team { get; } Property Value RoleTeam"
  },
  "api/Virial.Assignable.DefinedSingleAssignableTemplate.html": {
    "href": "api/Virial.Assignable.DefinedSingleAssignableTemplate.html",
    "title": "Class DefinedSingleAssignableTemplate | Virial",
    "summary": "Class DefinedSingleAssignableTemplate Namespace Virial.Assignable public class DefinedSingleAssignableTemplate : DefinedAssignableTemplate, DefinedSingleAssignable, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable Inheritance object DefinedAssignableTemplate DefinedSingleAssignableTemplate Implements DefinedSingleAssignable DefinedCategorizedAssignable DefinedAssignable IRoleID ISpawnable Derived DefinedRoleTemplate Inherited Members DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedSingleAssignableTemplate(string, Color, RoleCategory, RoleTeam, bool, ConfigurationTab?, Func<bool>?, Func<ExtraAssignmentInfo[]?>?, Func<ExtraAssignmentInfo[]?>?) public DefinedSingleAssignableTemplate(string localizedName, Color color, RoleCategory category, RoleTeam team, bool withAssignmentOption = true, ConfigurationTab? tab = null, Func<bool>? optionHolderPredicate = null, Func<AllocationParameters.ExtraAssignmentInfo[]?>? teamAssignments = null, Func<AllocationParameters.ExtraAssignmentInfo[]?>? othersAssignments = null) Parameters localizedName string color Color category RoleCategory team RoleTeam withAssignmentOption bool tab ConfigurationTab optionHolderPredicate Func<bool> teamAssignments Func<AllocationParameters.ExtraAssignmentInfo[]> othersAssignments Func<AllocationParameters.ExtraAssignmentInfo[]> Properties Category protected RoleCategory Category { get; } Property Value RoleCategory Team protected RoleTeam Team { get; } Property Value RoleTeam"
  },
  "api/Virial.Assignable.DefinedUsurpableAdvancedRoleTemplate-2.html": {
    "href": "api/Virial.Assignable.DefinedUsurpableAdvancedRoleTemplate-2.html",
    "title": "Class DefinedUsurpableAdvancedRoleTemplate<Ability, UsurpedAbility> | Virial",
    "summary": "Class DefinedUsurpableAdvancedRoleTemplate<Ability, UsurpedAbility> Namespace Virial.Assignable 簒奪可能で、簒奪した能力が別の能力として記述される役職のテンプレートです。 public abstract class DefinedUsurpableAdvancedRoleTemplate<Ability, UsurpedAbility> : DefinedRoleTemplate, DefinedSingleAbilityRole<Ability>, DefinedRole, DefinedSingleAssignable, DefinedCategorizedAssignable, DefinedAssignable, IRoleID, ISpawnable, IGuessed, AssignableFilterHolder, RuntimeAssignableGenerator<RuntimeRole> where Ability : class, IUsurpableAbility where UsurpedAbility : class, IUsurpableAbility Type Parameters Ability 本来の能力。簒奪された後は能力が壊れた方が望ましい。 UsurpedAbility 簒奪して得られる能力。 Inheritance object DefinedAssignableTemplate DefinedSingleAssignableTemplate DefinedRoleTemplate DefinedUsurpableAdvancedRoleTemplate<Ability, UsurpedAbility> Implements DefinedSingleAbilityRole<Ability> DefinedRole DefinedSingleAssignable DefinedCategorizedAssignable DefinedAssignable IRoleID ISpawnable IGuessed AssignableFilterHolder RuntimeAssignableGenerator<RuntimeRole> Inherited Members DefinedRoleTemplate.CanLoadDefaultTemplate(DefinedAssignable) DefinedSingleAssignableTemplate.Category DefinedSingleAssignableTemplate.Team DefinedAssignableTemplate.ConfigurationHolder DefinedAssignableTemplate.LocalizedName DefinedAssignableTemplate.RoleColor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefinedUsurpableAdvancedRoleTemplate(string, Color, RoleCategory, RoleTeam, IEnumerable<IConfiguration>?, bool, bool, Func<bool>?) public DefinedUsurpableAdvancedRoleTemplate(string localizedName, Color color, RoleCategory category, RoleTeam team, IEnumerable<IConfiguration>? configurations = null, bool withAssignmentOption = true, bool withOptionHolder = true, Func<bool>? optionHolderPredicate = null) Parameters localizedName string color Color category RoleCategory team RoleTeam configurations IEnumerable<IConfiguration> withAssignmentOption bool withOptionHolder bool optionHolderPredicate Func<bool> Methods CreateAbility(Player, int[]) 役職の能力を生成します。 public abstract Ability CreateAbility(Player player, int[] arguments) Parameters player Player 割り当て対象のプレイヤー。 arguments int[] 割り当てのパラメータ。 Returns Ability CreateUsurpedAbility(Player, int[]) public abstract UsurpedAbility CreateUsurpedAbility(Player player, int[] arguments) Parameters player Player arguments int[] Returns UsurpedAbility GetDisplayAbilityName(Ability) 能力から役職の表示名を取得します。 public virtual string? GetDisplayAbilityName(Ability ability) Parameters ability Ability 能力 Returns string GetDisplayUsurpedAbilityName(UsurpedAbility) public virtual string? GetDisplayUsurpedAbilityName(UsurpedAbility ability) Parameters ability UsurpedAbility Returns string"
  },
  "api/Virial.Assignable.HasAssignmentRoutine.html": {
    "href": "api/Virial.Assignable.HasAssignmentRoutine.html",
    "title": "Interface HasAssignmentRoutine | Virial",
    "summary": "Interface HasAssignmentRoutine Namespace Virial.Assignable 独自の割り当てルーチンを持つ対象を表します。 public interface HasAssignmentRoutine Properties AssignPriority 割り当ての優先度を返します。 int AssignPriority { get; } Property Value int Methods TryAssign(IRoleTable) 割り当てを試行します。 void TryAssign(IRoleTable roleTable) Parameters roleTable IRoleTable 割り当てテーブル"
  },
  "api/Virial.Assignable.HasCitation.html": {
    "href": "api/Virial.Assignable.HasCitation.html",
    "title": "Interface HasCitation | Virial",
    "summary": "Interface HasCitation Namespace Virial.Assignable 引用元を持つ対象を表します。 public interface HasCitation Properties Citation 引用元を表します。 Citation? Citation { get; } Property Value Citation"
  },
  "api/Virial.Assignable.HasRoleFilter.html": {
    "href": "api/Virial.Assignable.HasRoleFilter.html",
    "title": "Interface HasRoleFilter | Virial",
    "summary": "Interface HasRoleFilter Namespace Virial.Assignable 役職フィルタをもつ対象を表します。 モディファイアや幽霊役職が該当します。 public interface HasRoleFilter Properties RoleFilter 割り当て可能な役職に制限をかけます。 RoleFilter RoleFilter { get; } Property Value RoleFilter"
  },
  "api/Virial.Assignable.IAssignToCategorizedRole.html": {
    "href": "api/Virial.Assignable.IAssignToCategorizedRole.html",
    "title": "Interface IAssignToCategorizedRole | Virial",
    "summary": "Interface IAssignToCategorizedRole Namespace Virial.Assignable 役職が割り当てられたプレイヤーに、役職のカテゴリに応じて異なる割り当て確率を与える割り当てパラメータを表します。 public interface IAssignToCategorizedRole Methods GetAssignProperties(RoleCategory, out int, out int, out int) カテゴリごとの割り当てパラメータを取得します。 void GetAssignProperties(RoleCategory category, out int assign100, out int assignRandom, out int assignChance) Parameters category RoleCategory カテゴリ。 assign100 int 100%割り当て数。 assignRandom int ランダム割り当て数。 assignChance int ランダム割り当ての割り当て確率。"
  },
  "api/Virial.Assignable.ICategorizedRoleAllocator-1.html": {
    "href": "api/Virial.Assignable.ICategorizedRoleAllocator-1.html",
    "title": "Interface ICategorizedRoleAllocator<R> | Virial",
    "summary": "Interface ICategorizedRoleAllocator<R> Namespace Virial.Assignable 役職割り当て器です。 該当の役職が何度割り当てられたか記憶し、都度適切な割り当て確率を返します。 public interface ICategorizedRoleAllocator<R> where R : DefinedAssignable Type Parameters R Properties MyRole 自身の役職です。 R MyRole { get; } Property Value R Methods ConsumeCount(RoleCategory) 役職を割り当てます。 このメソッドの呼び出しによって今後、割り当て確率が変化する可能性があります。 void ConsumeCount(RoleCategory category) Parameters category RoleCategory 割り当てカテゴリ。 GetChance(RoleCategory) 割り当て確率を0～100の間で返します。 int GetChance(RoleCategory category) Parameters category RoleCategory 割り当てカテゴリ。 Returns int"
  },
  "api/Virial.Assignable.ICodeName.html": {
    "href": "api/Virial.Assignable.ICodeName.html",
    "title": "Interface ICodeName | Virial",
    "summary": "Interface ICodeName Namespace Virial.Assignable 短縮した、通常大文字アルファベット3文字からなる名前を持ちます。 モディファイアはオプションの簡潔なシリアライズのため、コードネームを必要とします。 public interface ICodeName Properties CodeName 役職のコードネーム。他の役職と被らないようにしてください。 記号類の使用は推奨されません。 string CodeName { get; } Property Value string"
  },
  "api/Virial.Assignable.IGuessed.html": {
    "href": "api/Virial.Assignable.IGuessed.html",
    "title": "Interface IGuessed | Virial",
    "summary": "Interface IGuessed Namespace Virial.Assignable 推察可能になりうる対象を表します。 public interface IGuessed Properties CanBeGuess Guesserによる推測対象になる場合trueを返します。 bool CanBeGuess { get; } Property Value bool CanBeGuessDefault Guesserによる推測対象になる場合trueを返します。 bool CanBeGuessDefault { get; } Property Value bool CanBeGuessVariable Guesserによる推測対象になるか設定する変数を返します。通常、オプションがこの値を変更します。 ISharableVariable<bool>? CanBeGuessVariable { get; } Property Value ISharableVariable<bool>"
  },
  "api/Virial.Assignable.IHasCategorizedRoleAllocator-1.html": {
    "href": "api/Virial.Assignable.IHasCategorizedRoleAllocator-1.html",
    "title": "Interface IHasCategorizedRoleAllocator<R> | Virial",
    "summary": "Interface IHasCategorizedRoleAllocator<R> Namespace Virial.Assignable 役職割り当て器を提供する役職を表します。 public interface IHasCategorizedRoleAllocator<R> where R : DefinedAssignable Type Parameters R Methods GenerateRoleAllocator() 役職割り当て器を生成します。 ゲームの度に新たな割り当て器が生成されます。 ICategorizedRoleAllocator<R> GenerateRoleAllocator() Returns ICategorizedRoleAllocator<R>"
  },
  "api/Virial.Assignable.IRoleAllocator.html": {
    "href": "api/Virial.Assignable.IRoleAllocator.html",
    "title": "Interface IRoleAllocator | Virial",
    "summary": "Interface IRoleAllocator Namespace Virial.Assignable 役職の割り当て器です。 ゲーム開始時に生成され、ゲーム終了まで同じ割り当て器が使用されます。 public interface IRoleAllocator Methods Assign(List<byte>, List<byte>) 役職を割り当てます。誰がインポスターになるべきかのみ決定しています。 void Assign(List<byte> impostors, List<byte> others) Parameters impostors List<byte> others List<byte> AssignToGhost(Player) 幽霊役職の割り当てを試行します。 DefinedGhostRole? AssignToGhost(Player player) Parameters player Player Returns DefinedGhostRole"
  },
  "api/Virial.Assignable.IRoleID.html": {
    "href": "api/Virial.Assignable.IRoleID.html",
    "title": "Interface IRoleID | Virial",
    "summary": "Interface IRoleID Namespace Virial.Assignable 役職IDをもつ対象を表します。 public interface IRoleID Properties Id 役職のIDを返します。 IDはアドオンの構成やバージョン間の違いによって変化します。 int Id { get; } Property Value int"
  },
  "api/Virial.Assignable.IRoleTable.html": {
    "href": "api/Virial.Assignable.IRoleTable.html",
    "title": "Interface IRoleTable | Virial",
    "summary": "Interface IRoleTable Namespace Virial.Assignable 役職の割り当てテーブルです。 ホストが割り当てを確定すると全プレイヤーに役職が配られ、ゲームが開始します。 public interface IRoleTable Methods Determine() 割り当てを確定します。 void Determine() GetPlayers(RoleCategory) 陣営別の割り当てを取得します。 IEnumerable<(byte playerId, DefinedRole role)> GetPlayers(RoleCategory category) Parameters category RoleCategory Returns IEnumerable<(byte playerId, DefinedRole role)> SetModifier(byte, DefinedModifier, int[]?) プレイヤーにモディファイアを割り当てます。 void SetModifier(byte player, DefinedModifier role, int[]? arguments = null) Parameters player byte role DefinedModifier arguments int[] SetRole(byte, DefinedRole, int[]?) プレイヤーに役職を割り当てます。 void SetRole(byte player, DefinedRole role, int[]? arguments = null) Parameters player byte role DefinedRole arguments int[]"
  },
  "api/Virial.Assignable.ISpawnable.html": {
    "href": "api/Virial.Assignable.ISpawnable.html",
    "title": "Interface ISpawnable | Virial",
    "summary": "Interface ISpawnable Namespace Virial.Assignable ゲーム中に出現しうる役職が実装するインターフェースです。 public interface ISpawnable Properties IsSpawnable ゲーム中に出現しうる場合はtrueを返します。 この値は主にゲーム設定によって変化します。 bool IsSpawnable { get; } Property Value bool"
  },
  "api/Virial.Assignable.NebulaTeams.html": {
    "href": "api/Virial.Assignable.NebulaTeams.html",
    "title": "Class NebulaTeams | Virial",
    "summary": "Class NebulaTeams Namespace Virial.Assignable public static class NebulaTeams Inheritance object NebulaTeams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ArsonistTeam public static RoleTeam ArsonistTeam { get; } Property Value RoleTeam ChainShifterTeam public static RoleTeam ChainShifterTeam { get; } Property Value RoleTeam CrewmateTeam public static RoleTeam CrewmateTeam { get; } Property Value RoleTeam ImpostorTeam public static RoleTeam ImpostorTeam { get; } Property Value RoleTeam JackalTeam public static RoleTeam JackalTeam { get; } Property Value RoleTeam JesterTeam public static RoleTeam JesterTeam { get; } Property Value RoleTeam PaparazzoTeam public static RoleTeam PaparazzoTeam { get; } Property Value RoleTeam VultureTeam public static RoleTeam VultureTeam { get; } Property Value RoleTeam"
  },
  "api/Virial.Assignable.RoleCategory.html": {
    "href": "api/Virial.Assignable.RoleCategory.html",
    "title": "Enum RoleCategory | Virial",
    "summary": "Enum RoleCategory Namespace Virial.Assignable 役職の種別を表します。 割り当て時に使用されます。 [Flags] public enum RoleCategory Fields CrewmateRole = 4 クルーメイト役職。 ImpostorRole = 1 インポスター役職。 NeutralRole = 2 第三陣営役職。"
  },
  "api/Virial.Assignable.RoleTaskType.html": {
    "href": "api/Virial.Assignable.RoleTaskType.html",
    "title": "Enum RoleTaskType | Virial",
    "summary": "Enum RoleTaskType Namespace Virial.Assignable その役職のプレイヤーに割り当てられるタスクの種別を表します。 public enum RoleTaskType Fields CrewmateTask = 0 クルーメイトのタスク。 タスクノルマを持ち、このノルマはクルーメイト勝利に必要なタスクとしてカウントされます。 NoTask = 2 タスクを持たない。 主にインポスターや第三陣営が該当します。 RoleTask = 1 個人のタスク。 タスクノルマを持つものの、クルーメイト勝利に必要なタスクにはカウントされません。"
  },
  "api/Virial.Assignable.RoleTeam.html": {
    "href": "api/Virial.Assignable.RoleTeam.html",
    "title": "Interface RoleTeam | Virial",
    "summary": "Interface RoleTeam Namespace Virial.Assignable public interface RoleTeam Properties Color Color Color { get; } Property Value Color Id int Id { get; } Property Value int KillCooldown 陣営ベースのキルクールダウンを取得します。 float KillCooldown { get; } Property Value float RevealType TeamRevealType RevealType { get; } Property Value TeamRevealType TranslationKey string TranslationKey { get; } Property Value string"
  },
  "api/Virial.Assignable.RuntimeAssignable.html": {
    "href": "api/Virial.Assignable.RuntimeAssignable.html",
    "title": "Interface RuntimeAssignable | Virial",
    "summary": "Interface RuntimeAssignable Namespace Virial.Assignable 役職実体です。 プレイヤーに実際に割り当てられた役職やモディファイアのコンテナです。 public interface RuntimeAssignable : ILifespan, IBindPlayer, IGameOperator, IReleasable Inherited Members ILifespan.IsDeadObject ILifespan.IsAliveObject IBindPlayer.MyPlayer IBindPlayer.AmOwner IGameOperator.OnReleased() IReleasable.Release() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Properties Assignable 役職定義。 DefinedAssignable Assignable { get; } Property Value DefinedAssignable AssignableOnHelp ヘルプ画面上での表示に使用する役職です。 CanBeAwareAssignmentがfalseの場合、この値は使用されません。 IEnumerable<DefinedAssignable> AssignableOnHelp { get; } Property Value IEnumerable<DefinedAssignable> CanBeAwareAssignment 割り当てられていることを自覚できる場合trueを返します。 bool CanBeAwareAssignment { get; } Property Value bool CanCallEmergencyMeeting 緊急ボタンを押すことができる場合trueを返します。 [Obsolete(\"役職の振る舞いはIPlayerAbilityに移動しています。このプロパティは将来的な廃止が見込まれています。\")] bool CanCallEmergencyMeeting { get; } Property Value bool CanFixComm 通信障害を修理できる場合trueを返します。 [Obsolete(\"役職の振る舞いはIPlayerAbilityに移動しています。このプロパティは将来的な廃止が見込まれています。\")] bool CanFixComm { get; } Property Value bool CanFixLight 通信障害を修理できる場合trueを返します。 [Obsolete(\"役職の振る舞いはIPlayerAbilityに移動しています。このプロパティは将来的な廃止が見込まれています。\")] bool CanFixLight { get; } Property Value bool CanReport 通報できる場合trueを返します。 [Obsolete(\"役職の振る舞いはIPlayerAbilityに移動しています。このプロパティは将来的な廃止が見込まれています。\")] bool CanReport { get; } Property Value bool DisplayColoredName 役職の表示名です。リッチテキストタグを用いて色を付けています。特に指定しない場合、役職定義の表示名をそのまま使用します。 string DisplayColoredName { get; } Property Value string DisplayName 役職の表示名です。特に指定しない場合、役職定義の表示名をそのまま使用します。 string DisplayName { get; } Property Value string MyAbilities 自身の能力が追加するアビリティを取得します。 IEnumerable<IPlayerAbility?> MyAbilities { get; } Property Value IEnumerable<IPlayerAbility> RoleArguments 割り当てのパラメータを取得します。 int[]? RoleArguments { get; } Property Value int[] Methods CanKill(Player) プレイヤーをキルできるか調べます。 bool CanKill(Player player) Parameters player Player Returns bool DecorateNameConstantly(ref string, bool) 名前のテキストを恒常的に書き換えます。 状態に依らない書き換えが推奨されます。 void DecorateNameConstantly(ref string name, bool canSeeAllInfo) Parameters name string canSeeAllInfo bool GetAbility<Ability>() アビリティを取得します。 Ability? GetAbility<Ability>() where Ability : class, IPlayerAbility Returns Ability Type Parameters Ability OnActivated() 役職の割り当て時に呼び出されます。 void OnActivated() OnInactivated() 役職が失わる時に呼び出されます。 void OnInactivated() OverrideRoleName(string, bool) 役職が、元の役職名を書き換える場合に呼び出されます。 string? OverrideRoleName(string lastRoleName, bool isShort) Parameters lastRoleName string isShort bool Returns string"
  },
  "api/Virial.Assignable.RuntimeAssignableGenerator-1.html": {
    "href": "api/Virial.Assignable.RuntimeAssignableGenerator-1.html",
    "title": "Interface RuntimeAssignableGenerator<T> | Virial",
    "summary": "Interface RuntimeAssignableGenerator<T> Namespace Virial.Assignable 役職実体を生成する対象を表します。 public interface RuntimeAssignableGenerator<T> where T : RuntimeAssignable Type Parameters T Methods CreateInstance(Player, int[]) 役職実体を生成します。 T CreateInstance(Player player, int[] arguments) Parameters player Player 割り当て先のプレイヤー arguments int[] 割り当て時の引数 Returns T 生成された役職実体。"
  },
  "api/Virial.Assignable.RuntimeAssignableTemplate.html": {
    "href": "api/Virial.Assignable.RuntimeAssignableTemplate.html",
    "title": "Class RuntimeAssignableTemplate | Virial",
    "summary": "Class RuntimeAssignableTemplate Namespace Virial.Assignable 実行時役職のテンプレートです。 public class RuntimeAssignableTemplate : SimpleLifespan, ILifespan, IReleasable, IBindPlayer Inheritance object SimpleLifespan RuntimeAssignableTemplate Implements ILifespan IReleasable IBindPlayer Derived RuntimeSingleAbilityAssignable<Ability> RuntimeVentRoleTemplate Inherited Members SimpleLifespan.IsDeadObject SimpleLifespan.Release() SimpleLifespan.OnReleased() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimeAssignableTemplate(Player) public RuntimeAssignableTemplate(Player myPlayer) Parameters myPlayer Player Properties AmOwner protected bool AmOwner { get; } Property Value bool MyPlayer このEntityを所有するプレイヤーを表します。 所有者は途中で変更しないでください。 public Player MyPlayer { get; } Property Value Player"
  },
  "api/Virial.Assignable.RuntimeGhostRole.html": {
    "href": "api/Virial.Assignable.RuntimeGhostRole.html",
    "title": "Interface RuntimeGhostRole | Virial",
    "summary": "Interface RuntimeGhostRole Namespace Virial.Assignable プレイヤーに割り当てられた役職のコンテナを表します。 public interface RuntimeGhostRole : RuntimeAssignable, ILifespan, IBindPlayer, IGameOperator, IReleasable Inherited Members RuntimeAssignable.Assignable RuntimeAssignable.CanFixComm RuntimeAssignable.CanFixLight RuntimeAssignable.CanBeAwareAssignment RuntimeAssignable.MyAbilities RuntimeAssignable.GetAbility<Ability>() RuntimeAssignable.AssignableOnHelp RuntimeAssignable.CanCallEmergencyMeeting RuntimeAssignable.CanReport RuntimeAssignable.OverrideRoleName(string, bool) RuntimeAssignable.DisplayName RuntimeAssignable.DisplayColoredName RuntimeAssignable.RoleArguments RuntimeAssignable.OnActivated() RuntimeAssignable.OnInactivated() RuntimeAssignable.DecorateNameConstantly(ref string, bool) RuntimeAssignable.CanKill(Player) ILifespan.IsDeadObject ILifespan.IsAliveObject IBindPlayer.MyPlayer IBindPlayer.AmOwner IGameOperator.OnReleased() IReleasable.Release() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Properties DisplayShort 役職の省略名です。 string DisplayShort { get; } Property Value string Role 役職の定義 DefinedGhostRole Role { get; } Property Value DefinedGhostRole"
  },
  "api/Virial.Assignable.RuntimeModifier.html": {
    "href": "api/Virial.Assignable.RuntimeModifier.html",
    "title": "Interface RuntimeModifier | Virial",
    "summary": "Interface RuntimeModifier Namespace Virial.Assignable プレイヤーに割り当てられた追加役職のコンテナを表します。 public interface RuntimeModifier : RuntimeAssignable, ILifespan, IBindPlayer, IGameOperator, IReleasable Inherited Members RuntimeAssignable.Assignable RuntimeAssignable.CanFixComm RuntimeAssignable.CanFixLight RuntimeAssignable.CanBeAwareAssignment RuntimeAssignable.MyAbilities RuntimeAssignable.GetAbility<Ability>() RuntimeAssignable.AssignableOnHelp RuntimeAssignable.CanCallEmergencyMeeting RuntimeAssignable.CanReport RuntimeAssignable.OverrideRoleName(string, bool) RuntimeAssignable.DisplayName RuntimeAssignable.DisplayColoredName RuntimeAssignable.RoleArguments RuntimeAssignable.OnActivated() RuntimeAssignable.OnInactivated() RuntimeAssignable.DecorateNameConstantly(ref string, bool) RuntimeAssignable.CanKill(Player) ILifespan.IsDeadObject ILifespan.IsAliveObject IBindPlayer.MyPlayer IBindPlayer.AmOwner IGameOperator.OnReleased() IReleasable.Release() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Properties DisplayIntroBlurb ゲーム開始時に割り当てられているとき、役職開示画面で表示されます。 string? DisplayIntroBlurb { get; } Property Value string InvalidateCrewmateTask クルーメイトタスクを持っていた場合、明示的に無効化する場合はtrue bool InvalidateCrewmateTask { get; } Property Value bool IsMadmate bool IsMadmate { get; } Property Value bool Modifier 追加役職の定義 DefinedModifier Modifier { get; } Property Value DefinedModifier MyCrewmateTaskIsIgnored クルーメイトタスクを持っていたとしても、クルーメイトタスクの総数に計上されない場合はtrue bool MyCrewmateTaskIsIgnored { get; } Property Value bool"
  },
  "api/Virial.Assignable.RuntimeRole.html": {
    "href": "api/Virial.Assignable.RuntimeRole.html",
    "title": "Interface RuntimeRole | Virial",
    "summary": "Interface RuntimeRole Namespace Virial.Assignable プレイヤーに割り当てられた役職のコンテナを表します。 public interface RuntimeRole : RuntimeAssignable, ILifespan, IBindPlayer, IGameOperator, IReleasable Inherited Members RuntimeAssignable.Assignable RuntimeAssignable.CanFixComm RuntimeAssignable.CanFixLight RuntimeAssignable.CanBeAwareAssignment RuntimeAssignable.MyAbilities RuntimeAssignable.GetAbility<Ability>() RuntimeAssignable.AssignableOnHelp RuntimeAssignable.CanCallEmergencyMeeting RuntimeAssignable.CanReport RuntimeAssignable.OverrideRoleName(string, bool) RuntimeAssignable.DisplayName RuntimeAssignable.DisplayColoredName RuntimeAssignable.RoleArguments RuntimeAssignable.OnActivated() RuntimeAssignable.OnInactivated() RuntimeAssignable.DecorateNameConstantly(ref string, bool) RuntimeAssignable.CanKill(Player) ILifespan.IsDeadObject ILifespan.IsAliveObject IBindPlayer.MyPlayer IBindPlayer.AmOwner IGameOperator.OnReleased() IReleasable.Release() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Properties CanInvokeSabotage サボタージュを起こすことができる場合trueを返します。 bool CanInvokeSabotage { get; } Property Value bool CanMoveInVent ベント間の移動ができる場合はtrueを返します。 CanUseVentがfalseの場合は意味がありません。 bool CanMoveInVent { get; } Property Value bool CanSeeOthersFakeSabotage 他人のフェイクサボタージュが確認できる場合はtrueを返します。 bool CanSeeOthersFakeSabotage { get; } Property Value bool CanUseVent ベントを使用できる場合はtrueを返します。 bool CanUseVent { get; } Property Value bool DisplayColoredShort string DisplayColoredShort { get; } Property Value string DisplayIntroBlurb string DisplayIntroBlurb { get; } Property Value string DisplayIntroRoleName string DisplayIntroRoleName { get; } Property Value string DisplayShort 役職の省略名です。 string DisplayShort { get; } Property Value string ExternalRecognitionRole 対外的な認識の役職定義 DefinedRole ExternalRecognitionRole { get; } Property Value DefinedRole EyesightIgnoreWalls 視界が壁を無視する場合はtrueを返します。 bool EyesightIgnoreWalls { get; } Property Value bool HasImpostorVision インポスターの視界を持つ場合はtrueを返します。 bool HasImpostorVision { get; } Property Value bool HasVanillaKillButton バニラのキルボタンを使用できる場合trueを返します。 bool HasVanillaKillButton { get; } Property Value bool IgnoreBlackout 停電の影響を受ける場合はtrueを返します。 bool IgnoreBlackout { get; } Property Value bool IgnoreNoisemakerNotification ノイズメーカーの通知を拒否する場合はtrueを返します。 bool IgnoreNoisemakerNotification { get; } Property Value bool PreventUsingVent ベントの使用を一時的に阻むときにtrueを返します。 bool PreventUsingVent { get; } Property Value bool Role 役職の定義 DefinedRole Role { get; } Property Value DefinedRole TaskType RoleTaskType TaskType { get; } Property Value RoleTaskType UsurpedAbilityArguments 現在の状態を簒奪可能能力の引数に変換します。 int[]? UsurpedAbilityArguments { get; } Property Value int[] VentCoolDown ベントの使用にクールダウンを設けます。 GameTimer? VentCoolDown { get; } Property Value GameTimer VentDuration ベントの潜伏時間に制限を設けます。 GameTimer? VentDuration { get; } Property Value GameTimer Methods Usurp() 能力を簒奪します。RPCを送って全クライアントでUsurpを実行する必要があります。 void Usurp()"
  },
  "api/Virial.Assignable.RuntimeSingleAbilityAssignable-1.html": {
    "href": "api/Virial.Assignable.RuntimeSingleAbilityAssignable-1.html",
    "title": "Class RuntimeSingleAbilityAssignable<Ability> | Virial",
    "summary": "Class RuntimeSingleAbilityAssignable<Ability> Namespace Virial.Assignable public class RuntimeSingleAbilityAssignable<Ability> : RuntimeAssignableTemplate, RuntimeRole, RuntimeAssignable, ILifespan, IBindPlayer, IGameOperator, IReleasable where Ability : class, IPlayerAbility Type Parameters Ability Inheritance object SimpleLifespan RuntimeAssignableTemplate RuntimeSingleAbilityAssignable<Ability> Implements RuntimeRole RuntimeAssignable ILifespan IBindPlayer IGameOperator IReleasable Inherited Members RuntimeAssignableTemplate.AmOwner RuntimeAssignableTemplate.MyPlayer SimpleLifespan.IsDeadObject SimpleLifespan.Release() SimpleLifespan.OnReleased() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Constructors RuntimeSingleAbilityAssignable(Player, DefinedSingleAbilityRole<Ability>, int[]) public RuntimeSingleAbilityAssignable(Player myPlayer, DefinedSingleAbilityRole<Ability> role, int[] arguments) Parameters myPlayer Player role DefinedSingleAbilityRole<Ability> arguments int[] Properties MyAbility public Ability MyAbility { get; protected set; } Property Value Ability Methods OnActivated() 役職の割り当て時に呼び出されます。 public virtual void OnActivated()"
  },
  "api/Virial.Assignable.RuntimeVentRoleTemplate.html": {
    "href": "api/Virial.Assignable.RuntimeVentRoleTemplate.html",
    "title": "Class RuntimeVentRoleTemplate | Virial",
    "summary": "Class RuntimeVentRoleTemplate Namespace Virial.Assignable public abstract class RuntimeVentRoleTemplate : RuntimeAssignableTemplate, RuntimeRole, RuntimeAssignable, ILifespan, IBindPlayer, IGameOperator, IReleasable Inheritance object SimpleLifespan RuntimeAssignableTemplate RuntimeVentRoleTemplate Implements RuntimeRole RuntimeAssignable ILifespan IBindPlayer IGameOperator IReleasable Inherited Members RuntimeAssignableTemplate.AmOwner RuntimeAssignableTemplate.MyPlayer SimpleLifespan.IsDeadObject SimpleLifespan.Release() SimpleLifespan.OnReleased() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Constructors RuntimeVentRoleTemplate(Player, IVentConfiguration) public RuntimeVentRoleTemplate(Player myPlayer, IVentConfiguration ventConfiguration) Parameters myPlayer Player ventConfiguration IVentConfiguration Properties Role 役職の定義 public abstract DefinedRole Role { get; } Property Value DefinedRole Methods OnActivated() 役職の割り当て時に呼び出されます。 public abstract void OnActivated()"
  },
  "api/Virial.Assignable.TeamRevealType.html": {
    "href": "api/Virial.Assignable.TeamRevealType.html",
    "title": "Enum TeamRevealType | Virial",
    "summary": "Enum TeamRevealType Namespace Virial.Assignable 陣営の開示バリエーションを表します。 public enum TeamRevealType Fields Everyone = 1 ゲーム中の全プレイヤーが表示されます。クルーメイト陣営で使用します。 OnlyMe = 0 自分自身のみ表示されます。主に第三陣営で使用します。 Teams = 2 チームのメンバー全員が表示されます。"
  },
  "api/Virial.Assignable.html": {
    "href": "api/Virial.Assignable.html",
    "title": "Namespace Virial.Assignable | Virial",
    "summary": "Namespace Virial.Assignable Classes AllocationParameters.ExtraAssignmentInfo 付随役職の割り当てを表します。 ByCategoryAllocatorOptions ByCategoryAllocatorOptions.CategoryOption Citation 他Modからの引用情報を表します。 DefinedAllocatableModifierTemplate DefinedAssignableTemplate 役職定義のテンプレートです。 DefinedGhostRoleTemplate DefinedGhostRoleTemplate.GhostAllocator DefinedModifierTemplate DefinedRoleTemplate DefinedSingleAbilityRoleTemplate<Ability> DefinedSingleAssignableTemplate DefinedUsurpableAdvancedRoleTemplate<Ability, UsurpedAbility> 簒奪可能で、簒奪した能力が別の能力として記述される役職のテンプレートです。 NebulaTeams RuntimeAssignableTemplate 実行時役職のテンプレートです。 RuntimeSingleAbilityAssignable<Ability> RuntimeVentRoleTemplate Interfaces AllocationParameters 割り当てパラメータを表します。 このパラメータの値は通常、オプションによって変更されます。 AssignableFilterHolder モディファイアおよび幽霊役職の割り当てフィルタを持つ対象を表します。 DefinedAllocatableModifier ゲーム開始時に割り当てられるモディファイアの役職定義を表します。 DefinedAssignable プレイヤーに割り当てられる役職および追加役職の定義を表します。 DefinedCategorizedAssignable 役職カテゴリで分類される役職の定義を表します。 クルーメイト役職・インポスター役職・第三陣営役職が該当します。 DefinedGhostRole 幽霊役職の役職定義を表します。 DefinedModifier プレイヤーに割り当てられるモディファイアの役職定義を表します。 DefinedRole プレイヤーに割り当てられる役職の定義を表します。 DefinedSingleAbilityRole<Ability> ジャッカル化あるいは簒奪された能力、および通常の能力を同一のクラスで定義できる役職の定義を表します。 DefinedSingleAssignable 単一のチームに属する役職の定義です。 HasAssignmentRoutine 独自の割り当てルーチンを持つ対象を表します。 HasCitation 引用元を持つ対象を表します。 HasRoleFilter 役職フィルタをもつ対象を表します。 モディファイアや幽霊役職が該当します。 IAssignToCategorizedRole 役職が割り当てられたプレイヤーに、役職のカテゴリに応じて異なる割り当て確率を与える割り当てパラメータを表します。 ICategorizedRoleAllocator<R> 役職割り当て器です。 該当の役職が何度割り当てられたか記憶し、都度適切な割り当て確率を返します。 ICodeName 短縮した、通常大文字アルファベット3文字からなる名前を持ちます。 モディファイアはオプションの簡潔なシリアライズのため、コードネームを必要とします。 IGuessed 推察可能になりうる対象を表します。 IHasCategorizedRoleAllocator<R> 役職割り当て器を提供する役職を表します。 IRoleAllocator 役職の割り当て器です。 ゲーム開始時に生成され、ゲーム終了まで同じ割り当て器が使用されます。 IRoleID 役職IDをもつ対象を表します。 IRoleTable 役職の割り当てテーブルです。 ホストが割り当てを確定すると全プレイヤーに役職が配られ、ゲームが開始します。 ISpawnable ゲーム中に出現しうる役職が実装するインターフェースです。 RoleTeam RuntimeAssignable 役職実体です。 プレイヤーに実際に割り当てられた役職やモディファイアのコンテナです。 RuntimeAssignableGenerator<T> 役職実体を生成する対象を表します。 RuntimeGhostRole プレイヤーに割り当てられた役職のコンテナを表します。 RuntimeModifier プレイヤーに割り当てられた追加役職のコンテナを表します。 RuntimeRole プレイヤーに割り当てられた役職のコンテナを表します。 Enums RoleCategory 役職の種別を表します。 割り当て時に使用されます。 RoleTaskType その役職のプレイヤーに割り当てられるタスクの種別を表します。 TeamRevealType 陣営の開示バリエーションを表します。 Delegates AllocationParameters.ExtraAssignment"
  },
  "api/Virial.Attributes.AddonDocumentAttribute.html": {
    "href": "api/Virial.Attributes.AddonDocumentAttribute.html",
    "title": "Class AddonDocumentAttribute | Virial",
    "summary": "Class AddonDocumentAttribute Namespace Virial.Attributes ID付きドキュメントを表すクラスです。 [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class AddonDocumentAttribute : Attribute Inheritance object Attribute AddonDocumentAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddonDocumentAttribute(string, params object[]) public AddonDocumentAttribute(string documentId, params object[] args) Parameters documentId string args object[] Properties Arguments public object[] Arguments { get; } Property Value object[] DocumentId public string DocumentId { get; } Property Value string"
  },
  "api/Virial.Attributes.EventPriority.html": {
    "href": "api/Virial.Attributes.EventPriority.html",
    "title": "Class EventPriority | Virial",
    "summary": "Class EventPriority Namespace Virial.Attributes リスナに優先度を設定します。デフォルトの優先度は100で、値が大きいほど優先して実行されます。 [AttributeUsage(AttributeTargets.Method)] public class EventPriority : Attribute Inheritance object Attribute EventPriority Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EventPriority(int) public EventPriority(int priority = 100) Parameters priority int Properties Priority public int Priority { get; } Property Value int"
  },
  "api/Virial.Attributes.Local.html": {
    "href": "api/Virial.Attributes.Local.html",
    "title": "Class Local | Virial",
    "summary": "Class Local Namespace Virial.Attributes ローカルでのみ呼び出される手続きを表します。 [AttributeUsage(AttributeTargets.Method)] public class Local : Attribute Inheritance object Attribute Local Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Attributes.NebulaPreprocess.html": {
    "href": "api/Virial.Attributes.NebulaPreprocess.html",
    "title": "Class NebulaPreprocess | Virial",
    "summary": "Class NebulaPreprocess Namespace Virial.Attributes プリプロセスメソッドを実装しているクラスにこの属性を付加します。 静的な公開メソッドPreprocess(INebulaPreprocessor)を実装していると記述された処理が実行されます。 そうでない場合でも静的コンストラクタが走ります。 [AttributeUsage(AttributeTargets.Class)] public class NebulaPreprocess : Attribute Inheritance object Attribute NebulaPreprocess Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NebulaPreprocess(PreprocessPhase) public NebulaPreprocess(PreprocessPhase phase) Parameters phase PreprocessPhase"
  },
  "api/Virial.Attributes.NebulaRPC.html": {
    "href": "api/Virial.Attributes.NebulaRPC.html",
    "title": "Class NebulaRPC | Virial",
    "summary": "Class NebulaRPC Namespace Virial.Attributes メソッド呼び出しをRPC呼び出しに置き換える属性です。 [AttributeUsage(AttributeTargets.Method)] public class NebulaRPC : Attribute Inheritance object Attribute NebulaRPC Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Attributes.OnlyHost.html": {
    "href": "api/Virial.Attributes.OnlyHost.html",
    "title": "Class OnlyHost | Virial",
    "summary": "Class OnlyHost Namespace Virial.Attributes ホストのみ呼び出される手続きを表します。 [AttributeUsage(AttributeTargets.Method)] public class OnlyHost : Attribute Inheritance object Attribute OnlyHost Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Attributes.OnlyMyPlayer.html": {
    "href": "api/Virial.Attributes.OnlyMyPlayer.html",
    "title": "Class OnlyMyPlayer | Virial",
    "summary": "Class OnlyMyPlayer Namespace Virial.Attributes GameOperatorに付与できる属性です。 そのクラスに紐づけられたプレイヤーに関するイベントでのみ呼び出されるよう制限されます。 [AttributeUsage(AttributeTargets.Method)] public class OnlyMyPlayer : Attribute Inheritance object Attribute OnlyMyPlayer Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Attributes.PreprocessPhase.html": {
    "href": "api/Virial.Attributes.PreprocessPhase.html",
    "title": "Enum PreprocessPhase | Virial",
    "summary": "Enum PreprocessPhase Namespace Virial.Attributes public enum PreprocessPhase Fields BuildNoSModule = 1 NoSがモジュールを追加するフェイズです。 BuildNoSModuleContainer = 0 NoSがモジュールコンテナを追加するフェイズです。 CompileAddons = 4 読み込んだアドオンをコンパイルするフェイズです。 FixRoles = 8 役職を確定させるフェイズです。これ以降役職を追加することはできません。 FixStructure = 11 共有可能変数等のデータ構造を確定させるフェイズです。 FixStructureConfig = 13 FixStructureRoleFilter = 12 LoadAddons = 3 アドオンを読み込むフェイズです。 NumOfPhases = 15 フェイズの数を表す定数です。フェイズとしては実在しません。 PostBuildNoS = 2 NoSが提供するAPIの内部構造の構築が終わった直後のフェイズです。 アドオンはこのフェイズに処理を差し込めません。 PostFixStructure = 14 共有可能変数等のデータ構造を確定させた直後のフェイズです。 PostLoadAddons = 5 アドオンを読み込んだ直後のフェイズです。 PostRoles = 9 役職の追加が終了した直後のフェイズです。 PreFixStructure = 10 共有可能変数等のデータ構造を確定させる直前のフェイズです。 PreRoles = 6 役職の追加をする直前のフェイズです。 Roles = 7 役職を追加するフェイズです。"
  },
  "api/Virial.Attributes.RequiringHandshake.html": {
    "href": "api/Virial.Attributes.RequiringHandshake.html",
    "title": "Class RequiringHandshake | Virial",
    "summary": "Class RequiringHandshake Namespace Virial.Attributes 呼び出しによってハンドシェイクが求められるメソッドであることを示す属性です。 [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class RequiringHandshake : Attribute Inheritance object Attribute RequiringHandshake Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Attributes.html": {
    "href": "api/Virial.Attributes.html",
    "title": "Namespace Virial.Attributes | Virial",
    "summary": "Namespace Virial.Attributes Classes AddonDocumentAttribute ID付きドキュメントを表すクラスです。 EventPriority リスナに優先度を設定します。デフォルトの優先度は100で、値が大きいほど優先して実行されます。 Local ローカルでのみ呼び出される手続きを表します。 NebulaPreprocess プリプロセスメソッドを実装しているクラスにこの属性を付加します。 静的な公開メソッドPreprocess(INebulaPreprocessor)を実装していると記述された処理が実行されます。 そうでない場合でも静的コンストラクタが走ります。 NebulaRPC メソッド呼び出しをRPC呼び出しに置き換える属性です。 OnlyHost ホストのみ呼び出される手続きを表します。 OnlyMyPlayer GameOperatorに付与できる属性です。 そのクラスに紐づけられたプレイヤーに関するイベントでのみ呼び出されるよう制限されます。 RequiringHandshake 呼び出しによってハンドシェイクが求められるメソッドであることを示す属性です。 Enums PreprocessPhase"
  },
  "api/Virial.BitMask-1.html": {
    "href": "api/Virial.BitMask-1.html",
    "title": "Interface BitMask<T> | Virial",
    "summary": "Interface BitMask<T> Namespace Virial 部分集合を表すマスクです。 public interface BitMask<T> Type Parameters T Methods ForEach(IEnumerable<T>) IEnumerable<T> ForEach(IEnumerable<T> all) Parameters all IEnumerable<T> Returns IEnumerable<T> Test(T?) bool Test(T? value) Parameters value T Returns bool TestAll(IEnumerable<T?>) bool TestAll(IEnumerable<T?> values) Parameters values IEnumerable<T> Returns bool TestAll(params T?[]) bool TestAll(params T?[] values) Parameters values T[] Returns bool"
  },
  "api/Virial.BitMasks.html": {
    "href": "api/Virial.BitMasks.html",
    "title": "Class BitMasks | Virial",
    "summary": "Class BitMasks Namespace Virial ビットマスクを生成するAPI群です。 public static class BitMasks Inheritance object BitMasks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AsPlayer(uint) public static EditableBitMask<Player> AsPlayer(uint bitMask = 0) Parameters bitMask uint Returns EditableBitMask<Player> Bits<B>(params B[]) public static BitMask<B> Bits<B>(params B[] elements) where B : IBit32 Parameters elements B[] Returns BitMask<B> Type Parameters B CreateFunctionalMask<T>(Predicate<T>) public static BitMask<T> CreateFunctionalMask<T>(Predicate<T> predicate) Parameters predicate Predicate<T> Returns BitMask<T> Type Parameters T CreateMask<T>(Func<T, uint>) public static EditableBitMask<T> CreateMask<T>(Func<T, uint> converter) Parameters converter Func<T, uint> Returns EditableBitMask<T> Type Parameters T"
  },
  "api/Virial.Color.html": {
    "href": "api/Virial.Color.html",
    "title": "Struct Color | Virial",
    "summary": "Struct Color Namespace Virial public struct Color Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Color(byte, byte, byte, byte) public Color(byte r, byte g, byte b, byte a = 255) Parameters r byte g byte b byte a byte Color(float, float, float, float) public Color(float r, float g, float b, float a = 1) Parameters r float g float b float a float Properties A public readonly float A { get; } Property Value float B public readonly float B { get; } Property Value float Black public static Color Black { get; } Property Value Color Blue public static Color Blue { get; } Property Value Color CrewmateColor public static Color CrewmateColor { get; } Property Value Color Cyan public static Color Cyan { get; } Property Value Color G public readonly float G { get; } Property Value float Gray public static Color Gray { get; } Property Value Color Green public static Color Green { get; } Property Value Color ImpostorColor public static Color ImpostorColor { get; } Property Value Color Magenta public static Color Magenta { get; } Property Value Color R public readonly float R { get; } Property Value float Red public static Color Red { get; } Property Value Color White public static Color White { get; } Property Value Color Yellow public static Color Yellow { get; } Property Value Color"
  },
  "api/Virial.Command.ArrayCommandToken.html": {
    "href": "api/Virial.Command.ArrayCommandToken.html",
    "title": "Class ArrayCommandToken | Virial",
    "summary": "Class ArrayCommandToken Namespace Virial.Command 配列のトークンです public class ArrayCommandToken : ICommandToken Inheritance object ArrayCommandToken Implements ICommandToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.AsValues<T>(ICommandToken, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) Constructors ArrayCommandToken(IReadOnlyArray<ICommandToken>) 配列トークンを生成します。 public ArrayCommandToken(IReadOnlyArray<ICommandToken> arguments) Parameters arguments IReadOnlyArray<ICommandToken>"
  },
  "api/Virial.Command.CoActionTask-1.html": {
    "href": "api/Virial.Command.CoActionTask-1.html",
    "title": "Class CoActionTask<T> | Virial",
    "summary": "Class CoActionTask<T> Namespace Virial.Command public class CoActionTask<T> : CoTask<T> Type Parameters T Inheritance object CoActionTask<T> Implements CoTask<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.Action<T>(CoTask<T>, Action<T>, Action?) CoChainedTasksHelper.ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) CoChainedTasksHelper.ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) CoChainedTasksHelper.Discard<T, S>(CoTask<S>) CoChainedTasksHelper.DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) CoChainedTasksHelper.Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) Constructors CoActionTask(Func<T>) public CoActionTask(Func<T> action) Parameters action Func<T> Properties IsCompleted public bool IsCompleted { get; } Property Value bool IsFailed public bool IsFailed { get; } Property Value bool Result public T Result { get; } Property Value T Methods CoWait() 実行は一度きりで、2回目以降のCoWaitの呼び出しはすぐに終了することが求められます。 public IEnumerator CoWait() Returns IEnumerator"
  },
  "api/Virial.Command.CoBuiltInTask-1.html": {
    "href": "api/Virial.Command.CoBuiltInTask-1.html",
    "title": "Class CoBuiltInTask<T> | Virial",
    "summary": "Class CoBuiltInTask<T> Namespace Virial.Command public class CoBuiltInTask<T> : CoTask<T> Type Parameters T Inheritance object CoBuiltInTask<T> Implements CoTask<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.Action<T>(CoTask<T>, Action<T>, Action?) CoChainedTasksHelper.ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) CoChainedTasksHelper.ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) CoChainedTasksHelper.Discard<T, S>(CoTask<S>) CoChainedTasksHelper.DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) CoChainedTasksHelper.Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) Constructors CoBuiltInTask(Func<CoBuiltInTask<T>, IEnumerator>) public CoBuiltInTask(Func<CoBuiltInTask<T>, IEnumerator> supplier) Parameters supplier Func<CoBuiltInTask<T>, IEnumerator> Properties IsCompleted public bool IsCompleted { get; set; } Property Value bool IsFailed public bool IsFailed { get; set; } Property Value bool ProcedureFunc public Func<CoBuiltInTask<T>, IEnumerator> ProcedureFunc { get; } Property Value Func<CoBuiltInTask<T>, IEnumerator> Result public T Result { get; set; } Property Value T"
  },
  "api/Virial.Command.CoChainedTask-2.html": {
    "href": "api/Virial.Command.CoChainedTask-2.html",
    "title": "Class CoChainedTask<T, S> | Virial",
    "summary": "Class CoChainedTask<T, S> Namespace Virial.Command public class CoChainedTask<T, S> : CoTask<T> Type Parameters T S Inheritance object CoChainedTask<T, S> Implements CoTask<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.Action<T>(CoTask<T>, Action<T>, Action?) CoChainedTasksHelper.ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) CoChainedTasksHelper.ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) CoChainedTasksHelper.Discard<T, S>(CoTask<S>) CoChainedTasksHelper.DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) CoChainedTasksHelper.Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) Constructors CoChainedTask(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) public CoChainedTask(CoTask<S> precedeTask, TaskSupplier<T, S> followerSupplier, Func<CoTask<T>?>? onFailed = null) Parameters precedeTask CoTask<S> followerSupplier TaskSupplier<T, S> onFailed Func<CoTask<T>> Properties IsCompleted public bool IsCompleted { get; } Property Value bool IsFailed public bool IsFailed { get; } Property Value bool Result public T Result { get; } Property Value T Methods CoWait() 実行は一度きりで、2回目以降のCoWaitの呼び出しはすぐに終了することが求められます。 public IEnumerator CoWait() Returns IEnumerator"
  },
  "api/Virial.Command.CoChainedTasksHelper.html": {
    "href": "api/Virial.Command.CoChainedTasksHelper.html",
    "title": "Class CoChainedTasksHelper | Virial",
    "summary": "Class CoChainedTasksHelper Namespace Virial.Command public static class CoChainedTasksHelper Inheritance object CoChainedTasksHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Action<T>(CoTask<T>, Action<T>, Action?) public static CoTask<ICommandToken> Action<T>(this CoTask<T> task, Action<T> action, Action? onFailed = null) Parameters task CoTask<T> action Action<T> onFailed Action Returns CoTask<ICommandToken> Type Parameters T AsParallel<T>(CoTask<IEnumerable<ICommandToken>>, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) public static CoTask<IEnumerable<T>> AsParallel<T>(this CoTask<IEnumerable<ICommandToken>> precedeTask, CommandEnvironment env, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters precedeTask CoTask<IEnumerable<ICommandToken>> env CommandEnvironment onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T AsValues<T>(CoTask<ICommandToken>, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) public static CoTask<IEnumerable<T>> AsValues<T>(this CoTask<ICommandToken> precedeTask, CommandEnvironment env, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters precedeTask CoTask<ICommandToken> env CommandEnvironment onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T AsValues<T>(ICommandToken, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) public static CoTask<IEnumerable<T>> AsValues<T>(this ICommandToken token, CommandEnvironment env, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters token ICommandToken env CommandEnvironment onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T As<T>(CoTask<IEnumerable<ICommandToken>>, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) public static CoTask<IEnumerable<T>> As<T>(this CoTask<IEnumerable<ICommandToken>> precedeTask, CommandEnvironment env, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters precedeTask CoTask<IEnumerable<ICommandToken>> env CommandEnvironment onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) public static CoTask<T> ChainFast<T, S>(this CoTask<S> precedeTask, Func<S, T> followerSupplier, Action? onFailed = null) Parameters precedeTask CoTask<S> followerSupplier Func<S, T> onFailed Action Returns CoTask<T> Type Parameters T S ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) public static CoTask<T> ChainIf<T, S>(this CoTask<S> precedeTask, Dictionary<S, Func<CoTask<T>>> followers, Func<CoTask<T>>? defaultFollower = null, Action? onFailed = null) Parameters precedeTask CoTask<S> followers Dictionary<S, Func<CoTask<T>>> defaultFollower Func<CoTask<T>> onFailed Action Returns CoTask<T> Type Parameters T S Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) 連続するタスクを定義します。 public static CoTask<T> Chain<T, S>(this CoTask<S> precedeTask, TaskSupplier<T, S> followerSupplier, Action onFailed) Parameters precedeTask CoTask<S> followerSupplier TaskSupplier<T, S> onFailed Action Returns CoTask<T> Type Parameters T S Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) public static CoTask<T> Chain<T, S>(this CoTask<S> precedeTask, TaskSupplier<T, S> followerSupplier, Func<CoTask<T>?>? onFailed = null) Parameters precedeTask CoTask<S> followerSupplier TaskSupplier<T, S> onFailed Func<CoTask<T>> Returns CoTask<T> Type Parameters T S Discard<T, S>(CoTask<S>) public static CoTask<T> Discard<T, S>(this CoTask<S> task) Parameters task CoTask<S> Returns CoTask<T> Type Parameters T S DoParallel<T>(CoTask<IEnumerable<T>>, Func<T, CoTask<ICommandToken>>, Action?) public static CoTask<ICommandToken> DoParallel<T>(this CoTask<IEnumerable<T>> task, Func<T, CoTask<ICommandToken>> consumer, Action? onFailed = null) Parameters task CoTask<IEnumerable<T>> consumer Func<T, CoTask<ICommandToken>> onFailed Action Returns CoTask<ICommandToken> Type Parameters T DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) public static CoTask<ICommandToken> DoParallel<T>(this CoTask<T> task, Func<T, CoTask<ICommandToken>>[] consumers, Action? onFailed = null) Parameters task CoTask<T> consumers Func<T, CoTask<ICommandToken>>[] onFailed Action Returns CoTask<ICommandToken> Type Parameters T Do<T>(CoTask<IEnumerable<T>>, Action<T>, Func<CoTask<ICommandToken>?>?) public static CoTask<ICommandToken> Do<T>(this CoTask<IEnumerable<T>> precedeTask, Action<T> consumer, Func<CoTask<ICommandToken>?>? onFailed = null) Parameters precedeTask CoTask<IEnumerable<T>> consumer Action<T> onFailed Func<CoTask<ICommandToken>> Returns CoTask<ICommandToken> Type Parameters T Do<T>(CoTask<IEnumerable<T>>, Func<T, CoTask<ICommandToken>>, Action?) public static CoTask<ICommandToken> Do<T>(this CoTask<IEnumerable<T>> task, Func<T, CoTask<ICommandToken>> consumer, Action? onFailed = null) Parameters task CoTask<IEnumerable<T>> consumer Func<T, CoTask<ICommandToken>> onFailed Action Returns CoTask<ICommandToken> Type Parameters T Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) public static CoTask<ICommandToken> Do<T>(this CoTask<T> task, Func<T, CoTask<ICommandToken>>[] consumers, Action? onFailed = null) Parameters task CoTask<T> consumers Func<T, CoTask<ICommandToken>>[] onFailed Action Returns CoTask<ICommandToken> Type Parameters T SelectParallel<T, V>(CoTask<IEnumerable<V>>, TaskSupplier<T, V>, Func<CoTask<IEnumerable<T>>?>?) public static CoTask<IEnumerable<T>> SelectParallel<T, V>(this CoTask<IEnumerable<V>> precedeTask, TaskSupplier<T, V> supplier, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters precedeTask CoTask<IEnumerable<V>> supplier TaskSupplier<T, V> onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T V Select<T, V>(CoTask<IEnumerable<V>>, TaskSupplier<T, V>, Func<CoTask<IEnumerable<T>>?>?) 直前のタスクの実行結果をもとに変換をするタスクです。 変数の適用を自前でしなければならない点に注意してください。 public static CoTask<IEnumerable<T>> Select<T, V>(this CoTask<IEnumerable<V>> precedeTask, TaskSupplier<T, V> supplier, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters precedeTask CoTask<IEnumerable<V>> supplier TaskSupplier<T, V> onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T V Where<T>(CoTask<IEnumerable<T>>, Predicate<T>, Func<CoTask<IEnumerable<T>>?>?) 条件に沿った値のみを抽出します。 public static CoTask<IEnumerable<T>> Where<T>(this CoTask<IEnumerable<T>> precedeTask, Predicate<T> predicate, Func<CoTask<IEnumerable<T>>?>? onFailed = null) Parameters precedeTask CoTask<IEnumerable<T>> predicate Predicate<T> onFailed Func<CoTask<IEnumerable<T>>> Returns CoTask<IEnumerable<T>> Type Parameters T"
  },
  "api/Virial.Command.CoImmediateErrorTask-1.html": {
    "href": "api/Virial.Command.CoImmediateErrorTask-1.html",
    "title": "Class CoImmediateErrorTask<T> | Virial",
    "summary": "Class CoImmediateErrorTask<T> Namespace Virial.Command public class CoImmediateErrorTask<T> : CoTask<T> Type Parameters T Inheritance object CoImmediateErrorTask<T> Implements CoTask<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.Action<T>(CoTask<T>, Action<T>, Action?) CoChainedTasksHelper.ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) CoChainedTasksHelper.ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) CoChainedTasksHelper.Discard<T, S>(CoTask<S>) CoChainedTasksHelper.DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) CoChainedTasksHelper.Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) Constructors CoImmediateErrorTask(ICommandLogger?, string?) public CoImmediateErrorTask(ICommandLogger? logger = null, string? errorMessage = null) Parameters logger ICommandLogger errorMessage string Properties IsCompleted public bool IsCompleted { get; } Property Value bool IsFailed public bool IsFailed { get; } Property Value bool Result public T Result { get; } Property Value T Methods CoWait() 実行は一度きりで、2回目以降のCoWaitの呼び出しはすぐに終了することが求められます。 public IEnumerator CoWait() Returns IEnumerator"
  },
  "api/Virial.Command.CoImmediateTask-1.html": {
    "href": "api/Virial.Command.CoImmediateTask-1.html",
    "title": "Class CoImmediateTask<T> | Virial",
    "summary": "Class CoImmediateTask<T> Namespace Virial.Command public class CoImmediateTask<T> : CoTask<T> Type Parameters T Inheritance object CoImmediateTask<T> Implements CoTask<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.Action<T>(CoTask<T>, Action<T>, Action?) CoChainedTasksHelper.ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) CoChainedTasksHelper.ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) CoChainedTasksHelper.Discard<T, S>(CoTask<S>) CoChainedTasksHelper.DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) CoChainedTasksHelper.Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) Constructors CoImmediateTask(T) public CoImmediateTask(T result) Parameters result T Properties IsCompleted public bool IsCompleted { get; } Property Value bool IsFailed public bool IsFailed { get; } Property Value bool Result public T Result { get; } Property Value T Methods CoWait() 実行は一度きりで、2回目以降のCoWaitの呼び出しはすぐに終了することが求められます。 public IEnumerator CoWait() Returns IEnumerator"
  },
  "api/Virial.Command.CoTask-1.html": {
    "href": "api/Virial.Command.CoTask-1.html",
    "title": "Interface CoTask<T> | Virial",
    "summary": "Interface CoTask<T> Namespace Virial.Command public interface CoTask<T> Type Parameters T Extension Methods CoChainedTasksHelper.Action<T>(CoTask<T>, Action<T>, Action?) CoChainedTasksHelper.ChainFast<T, S>(CoTask<S>, Func<S, T>, Action?) CoChainedTasksHelper.ChainIf<T, S>(CoTask<S>, Dictionary<S, Func<CoTask<T>>>, Func<CoTask<T>>?, Action?) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Action) CoChainedTasksHelper.Chain<T, S>(CoTask<S>, TaskSupplier<T, S>, Func<CoTask<T>?>?) CoChainedTasksHelper.Discard<T, S>(CoTask<S>) CoChainedTasksHelper.DoParallel<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) CoChainedTasksHelper.Do<T>(CoTask<T>, Func<T, CoTask<ICommandToken>>[], Action?) Properties CanAccessResult bool CanAccessResult { get; } Property Value bool IsCompleted bool IsCompleted { get; } Property Value bool IsFailed bool IsFailed { get; } Property Value bool Result T Result { get; } Property Value T Methods CoWait() 実行は一度きりで、2回目以降のCoWaitの呼び出しはすぐに終了することが求められます。 IEnumerator CoWait() Returns IEnumerator"
  },
  "api/Virial.Command.CoTaskChainer-2.html": {
    "href": "api/Virial.Command.CoTaskChainer-2.html",
    "title": "Delegate CoTaskChainer<T, V> | Virial",
    "summary": "Delegate CoTaskChainer<T, V> Namespace Virial.Command public delegate CoTask<T> CoTaskChainer<T, V>(CoTask<V> input, CommandEnvironment env) Parameters input CoTask<V> env CommandEnvironment Returns CoTask<T> Type Parameters T V"
  },
  "api/Virial.Command.CommandClause.html": {
    "href": "api/Virial.Command.CommandClause.html",
    "title": "Class CommandClause | Virial",
    "summary": "Class CommandClause Namespace Virial.Command コマンド文節の定義です。 public record CommandClause : IEquatable<CommandClause> Inheritance object CommandClause Implements IEquatable<CommandClause> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandClause(string, int, TaskSupplier<bool, IReadOnlyArray<ICommandToken>>) コマンド文節の定義です。 public CommandClause(string label, int length, TaskSupplier<bool, IReadOnlyArray<ICommandToken>> processor) Parameters label string length int processor TaskSupplier<bool, IReadOnlyArray<ICommandToken>> Properties label public string label { get; init; } Property Value string length public int length { get; init; } Property Value int processor public TaskSupplier<bool, IReadOnlyArray<ICommandToken>> processor { get; init; } Property Value TaskSupplier<bool, IReadOnlyArray<ICommandToken>>"
  },
  "api/Virial.Command.CommandComplement.html": {
    "href": "api/Virial.Command.CommandComplement.html",
    "title": "Class CommandComplement | Virial",
    "summary": "Class CommandComplement Namespace Virial.Command コマンドの補完候補です。 public record CommandComplement : IEquatable<CommandComplement> Inheritance object CommandComplement Implements IEquatable<CommandComplement> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandComplement(string, bool) コマンドの補完候補です。 public CommandComplement(string text, bool withBoxing) Parameters text string 補完する全テキスト withBoxing bool ダブルクォーテーションで囲む場合はtrue Properties text 補完する全テキスト public string text { get; init; } Property Value string withBoxing ダブルクォーテーションで囲む場合はtrue public bool withBoxing { get; init; } Property Value bool"
  },
  "api/Virial.Command.CommandEnvironment.html": {
    "href": "api/Virial.Command.CommandEnvironment.html",
    "title": "Class CommandEnvironment | Virial",
    "summary": "Class CommandEnvironment Namespace Virial.Command public record CommandEnvironment : IEquatable<CommandEnvironment> Inheritance object CommandEnvironment Implements IEquatable<CommandEnvironment> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandEnvironment(ICommandExecutor, ICommandModifier, ICommandLogger) public CommandEnvironment(ICommandExecutor Executor, ICommandModifier ArgumentTable, ICommandLogger Logger) Parameters Executor ICommandExecutor ArgumentTable ICommandModifier Logger ICommandLogger Properties ArgumentTable public ICommandModifier ArgumentTable { get; init; } Property Value ICommandModifier Executor public ICommandExecutor Executor { get; init; } Property Value ICommandExecutor Logger public ICommandLogger Logger { get; init; } Property Value ICommandLogger Methods SwitchArgumentTable(ICommandModifier) public CommandEnvironment SwitchArgumentTable(ICommandModifier newTable) Parameters newTable ICommandModifier Returns CommandEnvironment"
  },
  "api/Virial.Command.CommandLogLevel.html": {
    "href": "api/Virial.Command.CommandLogLevel.html",
    "title": "Enum CommandLogLevel | Virial",
    "summary": "Enum CommandLogLevel Namespace Virial.Command [Flags] public enum CommandLogLevel Fields AllLevel = 255 Error = 4 Info = 1 Warning = 2"
  },
  "api/Virial.Command.CommandStructure.html": {
    "href": "api/Virial.Command.CommandStructure.html",
    "title": "Class CommandStructure | Virial",
    "summary": "Class CommandStructure Namespace Virial.Command public class CommandStructure Inheritance object CommandStructure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties this[string] public ICommandToken this[string label] { get; } Parameters label string Property Value ICommandToken Labels public IEnumerable<string> Labels { get; } Property Value IEnumerable<string> Methods TryGetValue(string, out ICommandToken) public bool TryGetValue(string label, out ICommandToken value) Parameters label string value ICommandToken Returns bool"
  },
  "api/Virial.Command.CommandStructureConverter-1.html": {
    "href": "api/Virial.Command.CommandStructureConverter-1.html",
    "title": "Class CommandStructureConverter<T> | Virial",
    "summary": "Class CommandStructureConverter<T> Namespace Virial.Command public class CommandStructureConverter<T> Type Parameters T Inheritance object CommandStructureConverter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCollection<V>(string, Action<T, IEnumerable<V>>) public CommandStructureConverter<T> AddCollection<V>(string label, Action<T, IEnumerable<V>> setter) Parameters label string setter Action<T, IEnumerable<V>> Returns CommandStructureConverter<T> Type Parameters V AddStructure<V>(string, CommandStructureConverter<V>, Func<V>, Action<T, V>) public CommandStructureConverter<T> AddStructure<V>(string label, CommandStructureConverter<V> converter, Func<V> constructor, Action<T, V> setter) Parameters label string converter CommandStructureConverter<V> constructor Func<V> setter Action<T, V> Returns CommandStructureConverter<T> Type Parameters V Add<V>(string, Action<T, V>) public CommandStructureConverter<T> Add<V>(string label, Action<T, V> setter) Parameters label string setter Action<T, V> Returns CommandStructureConverter<T> Type Parameters V ChainConverterTo(CoTask<CommandStructure>, T, CommandEnvironment) public CoTask<T> ChainConverterTo(CoTask<CommandStructure> task, T target, CommandEnvironment env) Parameters task CoTask<CommandStructure> target T env CommandEnvironment Returns CoTask<T> Inherit<V>(CommandStructureConverter<V>) 親クラスの変換器の定義をそのまま継承します。 public CommandStructureConverter<T> Inherit<V>(CommandStructureConverter<V> converter) Parameters converter CommandStructureConverter<V> Returns CommandStructureConverter<T> Type Parameters V 親クラス"
  },
  "api/Virial.Command.CommandStructureHelper.html": {
    "href": "api/Virial.Command.CommandStructureHelper.html",
    "title": "Class CommandStructureHelper | Virial",
    "summary": "Class CommandStructureHelper Namespace Virial.Command public static class CommandStructureHelper Inheritance object CommandStructureHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertTo<T>(CoTask<CommandStructure>, CommandStructureConverter<T>, T, CommandEnvironment) public static CoTask<T> ConvertTo<T>(this CoTask<CommandStructure> task, CommandStructureConverter<T> converter, T target, CommandEnvironment env) Parameters task CoTask<CommandStructure> converter CommandStructureConverter<T> target T env CommandEnvironment Returns CoTask<T> Type Parameters T"
  },
  "api/Virial.Command.EmptyCommandToken.html": {
    "href": "api/Virial.Command.EmptyCommandToken.html",
    "title": "Class EmptyCommandToken | Virial",
    "summary": "Class EmptyCommandToken Namespace Virial.Command 空のトークンです public class EmptyCommandToken : ICommandToken Inheritance object EmptyCommandToken Implements ICommandToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.AsValues<T>(ICommandToken, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) Constructors EmptyCommandToken() 配列トークンを生成します。 public EmptyCommandToken() Fields Token public static ICommandToken Token Field Value ICommandToken"
  },
  "api/Virial.Command.ICommand.html": {
    "href": "api/Virial.Command.ICommand.html",
    "title": "Interface ICommand | Virial",
    "summary": "Interface ICommand Namespace Virial.Command public interface ICommand Methods Complement(string, IReadOnlyArray<ICommandToken>, string?, ICommandExecutor) 入力中の文字を補完する候補を返します。 IEnumerable<CommandComplement> Complement(string label, IReadOnlyArray<ICommandToken> arguments, string? last, ICommandExecutor executor) Parameters label string arguments IReadOnlyArray<ICommandToken> last string executor ICommandExecutor 予見されるコマンドの実行者 Returns IEnumerable<CommandComplement> Evaluate(string, IReadOnlyArray<ICommandToken>, CommandEnvironment) コマンドを実行します。 CoTask<ICommandToken> Evaluate(string label, IReadOnlyArray<ICommandToken> arguments, CommandEnvironment env) Parameters label string コマンド実行時のコマンド名 arguments IReadOnlyArray<ICommandToken> 与えられた引数 env CommandEnvironment Returns CoTask<ICommandToken>"
  },
  "api/Virial.Command.ICommandExecutor.html": {
    "href": "api/Virial.Command.ICommandExecutor.html",
    "title": "Interface ICommandExecutor | Virial",
    "summary": "Interface ICommandExecutor Namespace Virial.Command コマンドの実行者を表します。 public interface ICommandExecutor : IPermissionHolder Inherited Members IPermissionHolder.Test(Permission)"
  },
  "api/Virial.Command.ICommandLogText.html": {
    "href": "api/Virial.Command.ICommandLogText.html",
    "title": "Interface ICommandLogText | Virial",
    "summary": "Interface ICommandLogText Namespace Virial.Command public interface ICommandLogText Properties CurrentText 現在の文字列を取得します。 string CurrentText { get; } Property Value string LogLevel CommandLogLevel LogLevel { get; set; } Property Value CommandLogLevel Methods UpdateText(string) 出力されている文字列を変更します。 void UpdateText(string newText) Parameters newText string"
  },
  "api/Virial.Command.ICommandLogger.html": {
    "href": "api/Virial.Command.ICommandLogger.html",
    "title": "Interface ICommandLogger | Virial",
    "summary": "Interface ICommandLogger Namespace Virial.Command コマンド用のロガーです。 public interface ICommandLogger Properties Executed string Executed { get; } Property Value string Methods Push(string) ロガーにログテキストを追加します。 ICommandLogText Push(string message) Parameters message string Returns ICommandLogText Push(CommandLogLevel, string) ロガーにテキストを追加します。 ICommandLogText Push(CommandLogLevel logLevel, string message) Parameters logLevel CommandLogLevel message string Returns ICommandLogText PushError(string) ロガーにエラーテキストを追加します。 ICommandLogText PushError(string message) Parameters message string Returns ICommandLogText Remove(ICommandLogText) 出力を削除します。 void Remove(ICommandLogText text) Parameters text ICommandLogText ToLogString(CommandLogLevel) ログ出力用の文字列を求めます。 string ToLogString(CommandLogLevel logLevelMask) Parameters logLevelMask CommandLogLevel Returns string"
  },
  "api/Virial.Command.ICommandModifier.html": {
    "href": "api/Virial.Command.ICommandModifier.html",
    "title": "Interface ICommandModifier | Virial",
    "summary": "Interface ICommandModifier Namespace Virial.Command コマンド修飾子 変数の代入を担います。 public interface ICommandModifier"
  },
  "api/Virial.Command.ICommandPropertyHolder.html": {
    "href": "api/Virial.Command.ICommandPropertyHolder.html",
    "title": "Interface ICommandPropertyHolder | Virial",
    "summary": "Interface ICommandPropertyHolder Namespace Virial.Command public interface ICommandPropertyHolder Methods GetCommandProperty(string) プロパティを取得します。 ICommandToken? GetCommandProperty(string propertyName) Parameters propertyName string Returns ICommandToken"
  },
  "api/Virial.Command.ICommandToken.html": {
    "href": "api/Virial.Command.ICommandToken.html",
    "title": "Interface ICommandToken | Virial",
    "summary": "Interface ICommandToken Namespace Virial.Command コマンドのトークン列を構成します。 public interface ICommandToken Extension Methods CoChainedTasksHelper.AsValues<T>(ICommandToken, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) Methods AsEnumerable(CommandEnvironment) この引数を列挙可能な値として捉え、その中身を列挙させます。 列挙可能な値でないものは、自身1つを列挙するのが妥当です。 CoTask<IEnumerable<ICommandToken>> AsEnumerable(CommandEnvironment env) Parameters env CommandEnvironment Returns CoTask<IEnumerable<ICommandToken>> AsStructure(CommandEnvironment) この値を構造体ととらえ、その構造を評価し、取得します。 CoTask<CommandStructure> AsStructure(CommandEnvironment env) Parameters env CommandEnvironment Returns CoTask<CommandStructure> AsValue<T>(CommandEnvironment) この引数を値としてとらえ、その中身を取り出します。 CoTask<T> AsValue<T>(CommandEnvironment env) Parameters env CommandEnvironment Returns CoTask<T> Type Parameters T EvaluateHere(CommandEnvironment) 指定された引数の環境の下で評価します。 CoTask<ICommandToken> EvaluateHere(CommandEnvironment env) Parameters env CommandEnvironment Returns CoTask<ICommandToken> ToExecutable(CommandEnvironment) 実行可能なオブジェクトに変換します。 IExecutable? ToExecutable(CommandEnvironment env) Parameters env CommandEnvironment Returns IExecutable"
  },
  "api/Virial.Command.IExecutable.html": {
    "href": "api/Virial.Command.IExecutable.html",
    "title": "Interface IExecutable | Virial",
    "summary": "Interface IExecutable Namespace Virial.Command 実行可能な対象を表します。 public interface IExecutable Methods CoExecute((string label, ICommandToken token)[]) CoTask<ICommandToken> CoExecute((string label, ICommandToken token)[] extra) Parameters extra (string label, ICommandToken token)[] Returns CoTask<ICommandToken>"
  },
  "api/Virial.Command.NebulaCommandHelper.html": {
    "href": "api/Virial.Command.NebulaCommandHelper.html",
    "title": "Class NebulaCommandHelper | Virial",
    "summary": "Class NebulaCommandHelper Namespace Virial.Command コマンドに関するコーディングをサポートする関数を提供します。 public static class NebulaCommandHelper Inheritance object NebulaCommandHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllPlayersNameComplement 全プレイヤー名の候補を返します。 public static IEnumerable<CommandComplement> AllPlayersNameComplement { get; } Property Value IEnumerable<CommandComplement> Methods InterpretClause(IReadOnlyArray<ICommandToken>, IEnumerable<CommandClause>, CommandEnvironment) public static CoTask<bool> InterpretClause(IReadOnlyArray<ICommandToken> tokens, IEnumerable<CommandClause> clauses, CommandEnvironment env) Parameters tokens IReadOnlyArray<ICommandToken> clauses IEnumerable<CommandClause> env CommandEnvironment Returns CoTask<bool> PlayersNameComplement(Predicate<Player>?) 条件に適うプレイヤー名の候補を返します。 public static IEnumerable<CommandComplement> PlayersNameComplement(Predicate<Player>? predicate = null) Parameters predicate Predicate<Player> Returns IEnumerable<CommandComplement>"
  },
  "api/Virial.Command.StructCommandToken.html": {
    "href": "api/Virial.Command.StructCommandToken.html",
    "title": "Class StructCommandToken | Virial",
    "summary": "Class StructCommandToken Namespace Virial.Command 構造体トークンです。 public class StructCommandToken : ICommandToken Inheritance object StructCommandToken Implements ICommandToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CoChainedTasksHelper.AsValues<T>(ICommandToken, CommandEnvironment, Func<CoTask<IEnumerable<T>>?>?) Constructors StructCommandToken(IReadOnlyArray<(ICommandToken label, ICommandToken value)>) 構造体トークンを生成します。 public StructCommandToken(IReadOnlyArray<(ICommandToken label, ICommandToken value)> members) Parameters members IReadOnlyArray<(ICommandToken label, ICommandToken value)>"
  },
  "api/Virial.Command.TaskSupplier-2.html": {
    "href": "api/Virial.Command.TaskSupplier-2.html",
    "title": "Delegate TaskSupplier<T, V> | Virial",
    "summary": "Delegate TaskSupplier<T, V> Namespace Virial.Command 引数を率いて、タスクを提供する関数を表します。 public delegate CoTask<T> TaskSupplier<T, V>(V input) Parameters input V Returns CoTask<T> Type Parameters T V"
  },
  "api/Virial.Command.html": {
    "href": "api/Virial.Command.html",
    "title": "Namespace Virial.Command | Virial",
    "summary": "Namespace Virial.Command Classes ArrayCommandToken 配列のトークンです CoActionTask<T> CoBuiltInTask<T> CoChainedTask<T, S> CoChainedTasksHelper CoImmediateErrorTask<T> CoImmediateTask<T> CommandClause コマンド文節の定義です。 CommandComplement コマンドの補完候補です。 CommandEnvironment CommandStructure CommandStructureConverter<T> CommandStructureHelper EmptyCommandToken 空のトークンです NebulaCommandHelper コマンドに関するコーディングをサポートする関数を提供します。 StructCommandToken 構造体トークンです。 Interfaces CoTask<T> ICommand ICommandExecutor コマンドの実行者を表します。 ICommandLogText ICommandLogger コマンド用のロガーです。 ICommandModifier コマンド修飾子 変数の代入を担います。 ICommandPropertyHolder ICommandToken コマンドのトークン列を構成します。 IExecutable 実行可能な対象を表します。 Enums CommandLogLevel Delegates CoTaskChainer<T, V> TaskSupplier<T, V> 引数を率いて、タスクを提供する関数を表します。"
  },
  "api/Virial.Common.IPermissionHolder.html": {
    "href": "api/Virial.Common.IPermissionHolder.html",
    "title": "Interface IPermissionHolder | Virial",
    "summary": "Interface IPermissionHolder Namespace Virial.Common public interface IPermissionHolder Methods Test(Permission) bool Test(Permission permission) Parameters permission Permission Returns bool"
  },
  "api/Virial.Common.Permission.PermissionVariable.html": {
    "href": "api/Virial.Common.Permission.PermissionVariable.html",
    "title": "Class Permission.PermissionVariable | Virial",
    "summary": "Class Permission.PermissionVariable Namespace Virial.Common public record Permission.PermissionVariable : IEquatable<Permission.PermissionVariable> Inheritance object Permission.PermissionVariable Implements IEquatable<Permission.PermissionVariable> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PermissionVariable(Permission, bool) public PermissionVariable(Permission permission, bool inverse) Parameters permission Permission inverse bool Properties inverse public bool inverse { get; init; } Property Value bool permission public Permission permission { get; init; } Property Value Permission"
  },
  "api/Virial.Common.Permission.html": {
    "href": "api/Virial.Common.Permission.html",
    "title": "Class Permission | Virial",
    "summary": "Class Permission Namespace Virial.Common public class Permission Inheritance object Permission Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Common.PermissionHolder.html": {
    "href": "api/Virial.Common.PermissionHolder.html",
    "title": "Class PermissionHolder | Virial",
    "summary": "Class PermissionHolder Namespace Virial.Common public class PermissionHolder : IPermissionHolder Inheritance object PermissionHolder Implements IPermissionHolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PermissionHolder(PermissionVariable[]) public PermissionHolder(Permission.PermissionVariable[] permissions) Parameters permissions PermissionVariable[] Methods Test(Permission) public bool Test(Permission permission) Parameters permission Permission Returns bool"
  },
  "api/Virial.Common.VariablePermissionHolder.html": {
    "href": "api/Virial.Common.VariablePermissionHolder.html",
    "title": "Class VariablePermissionHolder | Virial",
    "summary": "Class VariablePermissionHolder Namespace Virial.Common public class VariablePermissionHolder : IPermissionHolder Inheritance object VariablePermissionHolder Implements IPermissionHolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VariablePermissionHolder(IEnumerable<PermissionVariable>) public VariablePermissionHolder(IEnumerable<Permission.PermissionVariable> permissions) Parameters permissions IEnumerable<Permission.PermissionVariable> Methods AddPermission(Permission, bool) public VariablePermissionHolder AddPermission(Permission permission, bool inverse = false) Parameters permission Permission inverse bool Returns VariablePermissionHolder Test(Permission) public bool Test(Permission permission) Parameters permission Permission Returns bool"
  },
  "api/Virial.Common.html": {
    "href": "api/Virial.Common.html",
    "title": "Namespace Virial.Common | Virial",
    "summary": "Namespace Virial.Common Classes Permission Permission.PermissionVariable PermissionHolder VariablePermissionHolder Interfaces IPermissionHolder"
  },
  "api/Virial.Compat.Artifact-1.html": {
    "href": "api/Virial.Compat.Artifact-1.html",
    "title": "Interface Artifact<T> | Virial",
    "summary": "Interface Artifact<T> Namespace Virial.Compat public interface Artifact<T> : IEnumerable<T>, IEnumerable Type Parameters T Inherited Members IEnumerable<T>.GetEnumerator() Extension Methods EnumerableHelper.Delimit<T>(IEnumerable<T>, T) EnumerableHelper.Find<T>(IEnumerable<T>, Func<T, bool>, out T) Methods Do(Action<T>) void Do(Action<T> action) Parameters action Action<T>"
  },
  "api/Virial.Compat.FloatSelection.html": {
    "href": "api/Virial.Compat.FloatSelection.html",
    "title": "Class FloatSelection | Virial",
    "summary": "Class FloatSelection Namespace Virial.Compat オプションのコンストラクタで使用する、実数型の選択肢の簡略化された表現です。 public class FloatSelection Inheritance object FloatSelection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FloatSelection(float[]) public FloatSelection(float[] selection) Parameters selection float[] Properties Selection public float[] Selection { get; } Property Value float[] Operators implicit operator FloatSelection(float[]) 配列から実数型の選択肢を生成します。 public static implicit operator FloatSelection(float[] selections) Parameters selections float[] 選択肢に含まれる値 Returns FloatSelection implicit operator FloatSelection((float min, float max, float step)) 最小値、最大値、刻み幅から実数型の選択肢を生成します。 public static implicit operator FloatSelection((float min, float max, float step) parameter) Parameters parameter (float min, float max, float step) 最小値、最大値、刻み幅からなるタプル Returns FloatSelection"
  },
  "api/Virial.Compat.FuzzySize.html": {
    "href": "api/Virial.Compat.FuzzySize.html",
    "title": "Struct FuzzySize | Virial",
    "summary": "Struct FuzzySize Namespace Virial.Compat public struct FuzzySize Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors FuzzySize(float?, float?) public FuzzySize(float? width, float? height) Parameters width float? height float? Fields Height public float? Height Field Value float? Width public float? Width Field Value float?"
  },
  "api/Virial.Compat.IReadOnlyArray-1.html": {
    "href": "api/Virial.Compat.IReadOnlyArray-1.html",
    "title": "Interface IReadOnlyArray<T> | Virial",
    "summary": "Interface IReadOnlyArray<T> Namespace Virial.Compat 配列のスライスを表します。 public interface IReadOnlyArray<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters T Inherited Members IReadOnlyList<T>.this[int] IReadOnlyCollection<T>.Count IEnumerable<T>.GetEnumerator() Extension Methods EnumerableHelper.Delimit<T>(IEnumerable<T>, T) EnumerableHelper.Find<T>(IEnumerable<T>, Func<T, bool>, out T) EnumerableHelper.FindIndex<T>(IReadOnlyList<T>, Func<T, bool>) Methods Empty() public static IReadOnlyArray<T> Empty() Returns IReadOnlyArray<T> Skip(int) IReadOnlyArray<T> Skip(int skipped) Parameters skipped int Returns IReadOnlyArray<T> Slice(int, int) IReadOnlyArray<T> Slice(int start, int length) Parameters start int length int Returns IReadOnlyArray<T>"
  },
  "api/Virial.Compat.IntegerSelection.html": {
    "href": "api/Virial.Compat.IntegerSelection.html",
    "title": "Class IntegerSelection | Virial",
    "summary": "Class IntegerSelection Namespace Virial.Compat オプションのコンストラクタで使用する、整数型の選択肢の簡略化された表現です。 public class IntegerSelection Inheritance object IntegerSelection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IntegerSelection(int[]) public IntegerSelection(int[] selection) Parameters selection int[] Properties Selection public int[] Selection { get; } Property Value int[] Operators implicit operator IntegerSelection(int[]) 配列から整数型の選択肢を生成します。 public static implicit operator IntegerSelection(int[] selections) Parameters selections int[] 選択肢に含まれる値 Returns IntegerSelection implicit operator IntegerSelection((int min, int max, int step)) 最小値、最大値、刻み幅から整数型の選択肢を生成します。 public static implicit operator IntegerSelection((int min, int max, int step) parameter) Parameters parameter (int min, int max, int step) 最小値、最大値、刻み幅からなるタプル Returns IntegerSelection implicit operator IntegerSelection((int min, int max)) 最小値、最大値から刻み幅1の整数型の選択肢を生成します。 public static implicit operator IntegerSelection((int min, int max) parameter) Parameters parameter (int min, int max) 最小値、最大値からなるタプル Returns IntegerSelection"
  },
  "api/Virial.Compat.ReadOnlyArray-1.html": {
    "href": "api/Virial.Compat.ReadOnlyArray-1.html",
    "title": "Class ReadOnlyArray<T> | Virial",
    "summary": "Class ReadOnlyArray<T> Namespace Virial.Compat 配列のスライスです。 public class ReadOnlyArray<T> : IReadOnlyArray<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters T Inheritance object ReadOnlyArray<T> Implements IReadOnlyArray<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableHelper.Delimit<T>(IEnumerable<T>, T) EnumerableHelper.Find<T>(IEnumerable<T>, Func<T, bool>, out T) EnumerableHelper.FindIndex<T>(IReadOnlyList<T>, Func<T, bool>) Constructors ReadOnlyArray(IEnumerable<T>?, int, int) public ReadOnlyArray(IEnumerable<T>? enumerable, int start = 0, int length = -1) Parameters enumerable IEnumerable<T> start int length int Properties Count Gets the number of elements in the collection. public int Count { get; } Property Value int The number of elements in the collection. this[int] Gets the element at the specified index in the read-only list. public T this[int index] { get; } Parameters index int The zero-based index of the element to get. Property Value T The element at the specified index in the read-only list. Methods GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> An enumerator that can be used to iterate through the collection. Skip(int) public IReadOnlyArray<T> Skip(int skipped) Parameters skipped int Returns IReadOnlyArray<T> Slice(int, int) public IReadOnlyArray<T> Slice(int start, int length) Parameters start int length int Returns IReadOnlyArray<T>"
  },
  "api/Virial.Compat.Reference-1.html": {
    "href": "api/Virial.Compat.Reference-1.html",
    "title": "Interface Reference<T> | Virial",
    "summary": "Interface Reference<T> Namespace Virial.Compat public interface Reference<T> Type Parameters T Properties Value T Value { get; } Property Value T"
  },
  "api/Virial.Compat.Size.html": {
    "href": "api/Virial.Compat.Size.html",
    "title": "Struct Size | Virial",
    "summary": "Struct Size Namespace Virial.Compat public struct Size Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Size(float, float) public Size(float width, float height) Parameters width float height float Fields Height public float Height Field Value float Width public float Width Field Value float"
  },
  "api/Virial.Compat.Vector2.html": {
    "href": "api/Virial.Compat.Vector2.html",
    "title": "Struct Vector2 | Virial",
    "summary": "Struct Vector2 Namespace Virial.Compat public struct Vector2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vector2() public Vector2() Vector2(float, float) public Vector2(float x, float y) Parameters x float y float Fields x public float x Field Value float y public float y Field Value float Methods Distance(Vector2) public float Distance(Vector2 v) Parameters v Vector2 Returns float SquaredDistance(Vector2) public float SquaredDistance(Vector2 v) Parameters v Vector2 Returns float Operators operator +(Vector2, Vector2) public static Vector2 operator +(Vector2 v1, Vector2 v2) Parameters v1 Vector2 v2 Vector2 Returns Vector2 implicit operator Vector2(Vector2) public static implicit operator Vector2(Vector2 v) Parameters v Vector2 Returns Vector2 implicit operator Vector2(Vector2) public static implicit operator Vector2(Vector2 v) Parameters v Vector2 Returns Vector2 operator -(Vector2, Vector2) public static Vector2 operator -(Vector2 v1, Vector2 v2) Parameters v1 Vector2 v2 Vector2 Returns Vector2"
  },
  "api/Virial.Compat.Vector3.html": {
    "href": "api/Virial.Compat.Vector3.html",
    "title": "Struct Vector3 | Virial",
    "summary": "Struct Vector3 Namespace Virial.Compat public struct Vector3 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Vector3() public Vector3() Vector3(float, float, float) public Vector3(float x, float y, float z = 0) Parameters x float y float z float Vector3(Vector3) public Vector3(Vector3 v) Parameters v Vector3 Fields x public float x Field Value float y public float y Field Value float z public float z Field Value float Operators implicit operator Vector3(Vector3) public static implicit operator Vector3(Vector3 v) Parameters v Vector3 Returns Vector3"
  },
  "api/Virial.Compat.VirtualKeyInput.html": {
    "href": "api/Virial.Compat.VirtualKeyInput.html",
    "title": "Enum VirtualKeyInput | Virial",
    "summary": "Enum VirtualKeyInput Namespace Virial.Compat 入力の種類を表します。 実際のキーバインドに言及する必要はありません。 public enum VirtualKeyInput Fields Ability = 4 能力発動操作。 AidAction = 8 サブアクション操作。 Command = 11 メタアクション操作。 FreeplayAction = 7 フリープレイの役職変更操作。 Help = 15 ヘルプ画面を開く操作。 Kill = 1 キル操作。 Mute = 13 ボイスチャットのミュート操作。 None = 0 いずれのキー操作にも対応しません。 PerkAction1 = 9 パーク発動操作。 PerkAction2 = 10 パーク発動操作(人外専用パーク)。 Screenshot = 12 スクリーンショット操作。 SecondaryAbility = 5 副次能力発動操作。 SidekickAction = 6 サイドキック操作。 Spectator = 16 観戦モード操作。 SpectatorLeft = 17 観戦プレイヤー変更(戻る)操作。 SpectatorRight = 18 観戦プレイヤー変更(進む)操作。 Stamp = 19 スタンプ及びエモート操作。 Use = 3 使用操作。 VCFilter = 14 ボイスチャットのフィルタリング操作。 Vent = 2 ベント潜入・脱出操作。"
  },
  "api/Virial.Compat.html": {
    "href": "api/Virial.Compat.html",
    "title": "Namespace Virial.Compat | Virial",
    "summary": "Namespace Virial.Compat Classes FloatSelection オプションのコンストラクタで使用する、実数型の選択肢の簡略化された表現です。 IntegerSelection オプションのコンストラクタで使用する、整数型の選択肢の簡略化された表現です。 ReadOnlyArray<T> 配列のスライスです。 Structs FuzzySize Size Vector2 Vector3 Interfaces Artifact<T> IReadOnlyArray<T> 配列のスライスを表します。 Reference<T> Enums VirtualKeyInput 入力の種類を表します。 実際のキーバインドに言及する必要はありません。"
  },
  "api/Virial.Components.GameTimer.html": {
    "href": "api/Virial.Components.GameTimer.html",
    "title": "Interface GameTimer | Virial",
    "summary": "Interface GameTimer Namespace Virial.Components クールダウン及び能力効果タイマーを表します。 public interface GameTimer : IVisualTimer, IReleasable, INestedLifespan, ILifespan Inherited Members IVisualTimer.Start(float?) IVisualTimer.TimerText IVisualTimer.Percentage IVisualTimer.CurrentTime IVisualTimer.IsProgressing IReleasable.Release() INestedLifespan.Bind(ILifespan) ILifespan.IsDeadObject ILifespan.IsAliveObject Properties Max 最大時間を表します。 float Max { get; } Property Value float Methods Expand(float) タイマーの最大時間を伸ばします。 GameTimer Expand(float time) Parameters time float 延長する時間。 Returns GameTimer Pause() タイマーを一時停止します。 GameTimer Pause() Returns GameTimer ResetsAtTaskPhase() タイマーのクールダウンがタスクフェイズの再開時にリセットされるよう特性付けます。 GameTimer ResetsAtTaskPhase() Returns GameTimer Resume() タイマーの進行を再開します。 GameTimer Resume() Returns GameTimer SetAsAbilityTimer() 能力クールダウンとして秒数の進行条件を設定します。 GameTimer SetAsAbilityTimer() Returns GameTimer SetAsKillCoolTimer() キルクールダウンとして秒数の進行条件を設定します。 GameTimer SetAsKillCoolTimer() Returns GameTimer SetCondition(Func<bool>) 秒数の進行条件を設定します。 GameTimer SetCondition(Func<bool> progressWhile) Parameters progressWhile Func<bool> タイマーが進行するときtrueを返す関数 Returns GameTimer SetRange(float) タイマーの範囲を設定します。 GameTimer SetRange(float max) Parameters max float 最大の時間。 Returns GameTimer SetRange(float, float) タイマーの範囲を設定します。 GameTimer SetRange(float min, float max) Parameters min float 最小の時間。ふつう、0に設定します。 max float 最大の時間。 Returns GameTimer SetTime(float) タイマーの現在時間を設定します。 GameTimer SetTime(float time) Parameters time float 時間。 Returns GameTimer"
  },
  "api/Virial.Components.IKillButtonLike.html": {
    "href": "api/Virial.Components.IKillButtonLike.html",
    "title": "Interface IKillButtonLike | Virial",
    "summary": "Interface IKillButtonLike Namespace Virial.Components キルボタンに類するボタンを表します。 シェリフやジャッカル等のキルボタンが含まれます。 public interface IKillButtonLike : ILifespan Inherited Members ILifespan.IsDeadObject ILifespan.IsAliveObject Properties Cooldown 現在のクールダウンを返します。 float Cooldown { get; } Property Value float Methods SetCooldown(float) クールダウンを設定します。 void SetCooldown(float cooldown) Parameters cooldown float StartCooldown(float) クールダウンをリセットします。 void StartCooldown(float ratio = 1) Parameters ratio float クールダウンに乗じる値。1の場合通常通りのクールダウンが開始する。"
  },
  "api/Virial.Components.IVisualTimer.html": {
    "href": "api/Virial.Components.IVisualTimer.html",
    "title": "Interface IVisualTimer | Virial",
    "summary": "Interface IVisualTimer Namespace Virial.Components 能力ボタンで使用できるタイマーを表します。 public interface IVisualTimer : ILifespan, IReleasable Inherited Members ILifespan.IsDeadObject ILifespan.IsAliveObject IReleasable.Release() Properties CurrentTime 現在の秒数を実数で返します。 float CurrentTime { get; } Property Value float IsProgressing タイマーが進行中であればtrueを返します。 bool IsProgressing { get; } Property Value bool Percentage 現在の進行度を0から1の実数で返します。 float Percentage { get; } Property Value float TimerText 現在の秒数を文字列で返します。 string? TimerText { get; } Property Value string Methods Start(float?) タイマーを開始します。 IVisualTimer Start(float? time = null) Parameters time float? 開始時間 Returns IVisualTimer"
  },
  "api/Virial.Components.ModAbilityButton.LabelType.html": {
    "href": "api/Virial.Components.ModAbilityButton.LabelType.html",
    "title": "Enum ModAbilityButton.LabelType | Virial",
    "summary": "Enum ModAbilityButton.LabelType Namespace Virial.Components ボタンのラベルの種類を表します。 public enum ModAbilityButton.LabelType Fields Crewmate = 3 エンジニアやサイエンティストの能力などの青い文字。 Impostor = 1 キルボタンなどの赤い文字。 Standard = 0 通常の黒い文字。 Utility = 2 アドミンやバイタルなどの緑色の文字。"
  },
  "api/Virial.Components.ModAbilityButton.html": {
    "href": "api/Virial.Components.ModAbilityButton.html",
    "title": "Interface ModAbilityButton | Virial",
    "summary": "Interface ModAbilityButton Namespace Virial.Components 能力ボタンを表します。 public interface ModAbilityButton : ILifespan Inherited Members ILifespan.IsDeadObject ILifespan.IsAliveObject Properties Availability ボタンの可用性を設定します。可視状態でなければ呼び出されません。 Predicate<ModAbilityButton> Availability { set; } Property Value Predicate<ModAbilityButton> CoolDownTimer クールダウンを表すタイマーです。 IVisualTimer? CoolDownTimer { get; set; } Property Value IVisualTimer EffectTimer エフェクト効果時間を表すタイマーです。 IVisualTimer? EffectTimer { get; set; } Property Value IVisualTimer IsAvailable bool IsAvailable { get; } Property Value bool IsBroken bool IsBroken { get; } Property Value bool IsInCooldown クールダウン中の場合、trueを返します。 bool IsInCooldown { get; } Property Value bool IsInEffect エフェクト効果中の場合、trueを返します。 bool IsInEffect { get; } Property Value bool IsVisible bool IsVisible { get; } Property Value bool OnBroken ボタンが壊れたときに呼び出されます。 Action<ModAbilityButton> OnBroken { set; } Property Value Action<ModAbilityButton> OnClick ボタンがクリックされた際に呼び出されます。 Action<ModAbilityButton> OnClick { set; } Property Value Action<ModAbilityButton> OnEffectEnd エフェクト効果が終了あるいは中断した際に呼び出されます。 Action<ModAbilityButton> OnEffectEnd { set; } Property Value Action<ModAbilityButton> OnEffectStart エフェクト効果が開始する際に呼び出されます。 Action<ModAbilityButton> OnEffectStart { set; } Property Value Action<ModAbilityButton> OnSubAction サブ効果がクリックされた際に呼び出されます。 Action<ModAbilityButton> OnSubAction { set; } Property Value Action<ModAbilityButton> OnUpdate 常に呼び出されるルーチンを設定します。 Action<ModAbilityButton> OnUpdate { set; } Property Value Action<ModAbilityButton> PlayFlashWhile 強調表示をし続ける間はtrueを返します。 Func<ModAbilityButton, bool> PlayFlashWhile { set; } Property Value Func<ModAbilityButton, bool> Visibility ボタンの可視性を設定します。 Predicate<ModAbilityButton> Visibility { set; } Property Value Predicate<ModAbilityButton> Methods BindKey(VirtualKeyInput, string?) 入力キーを設定します。 ModAbilityButton BindKey(VirtualKeyInput input, string? action = null) Parameters input VirtualKeyInput action string Returns ModAbilityButton BindSubKey(VirtualKeyInput, string?, bool) サブ入力キーを設定します。 ModAbilityButton BindSubKey(VirtualKeyInput input, string? action = null, bool withTutorial = false) Parameters input VirtualKeyInput action string withTutorial bool Returns ModAbilityButton DoClick() クリック操作が実行可能ならば実行します。 ModAbilityButton DoClick() Returns ModAbilityButton DoSubClick() サブ操作が実行可能ならば実行します。 ModAbilityButton DoSubClick() Returns ModAbilityButton GetKillButtonLike() IKillButtonLike GetKillButtonLike() Returns IKillButtonLike HideUsesIcon() ModAbilityButton HideUsesIcon() Returns ModAbilityButton InterruptEffect() エフェクト効果中の場合はエフェクト効果を中断します。 ModAbilityButton InterruptEffect() Returns ModAbilityButton ResetKeyBinding() ModAbilityButton ResetKeyBinding() Returns ModAbilityButton SetAsMouseClickButton() ModAbilityButton SetAsMouseClickButton() Returns ModAbilityButton SetAsUsurpableButton(IUsurpableAbility) 簒奪可能な能力のボタンに設定します。 ModAbilityButton SetAsUsurpableButton(IUsurpableAbility ability) Parameters ability IUsurpableAbility Returns ModAbilityButton SetImage(Image) ボタンの画像を設定します。 ModAbilityButton SetImage(Image image) Parameters image Image Returns ModAbilityButton SetLabel(string) ボタン下部のテキストを設定します。 ModAbilityButton SetLabel(string translationKey) Parameters translationKey string Returns ModAbilityButton SetLabelType(LabelType) ラベルの見た目を設定します。 ModAbilityButton SetLabelType(ModAbilityButton.LabelType type) Parameters type ModAbilityButton.LabelType Returns ModAbilityButton ShowUsesIcon(int, string) ModAbilityButton ShowUsesIcon(int variation, string text) Parameters variation int text string Returns ModAbilityButton StartCoolDown() クールダウンを開始します。 ModAbilityButton StartCoolDown() Returns ModAbilityButton StartEffect() エフェクト効果を開始できる場合、エフェクト効果を開始します。 ModAbilityButton StartEffect() Returns ModAbilityButton ToggleEffect() エフェクト効果を開始/終了します。 ModAbilityButton ToggleEffect() Returns ModAbilityButton UpdateUsesIcon(string) ModAbilityButton UpdateUsesIcon(string text) Parameters text string Returns ModAbilityButton"
  },
  "api/Virial.Components.ObjectTracker-1.html": {
    "href": "api/Virial.Components.ObjectTracker-1.html",
    "title": "Interface ObjectTracker<T> | Virial",
    "summary": "Interface ObjectTracker<T> Namespace Virial.Components 近くのオブジェクトを追跡するトラッカーを表します。 オブジェクトに対してインタラクトするボタンなどで使用します。 public interface ObjectTracker<T> Type Parameters T 追跡対象のオブジェクトの型 Properties CurrentTarget 現在のターゲットを返します。 T? CurrentTarget { get; } Property Value T IsLocked 現在追跡しているターゲットをロックして変更させない場合はtrueにしてください。 bool IsLocked { get; set; } Property Value bool Methods SetColor(Color) アウトラインの色を設定します。 void SetColor(Color color) Parameters color Color アウトラインの色"
  },
  "api/Virial.Components.html": {
    "href": "api/Virial.Components.html",
    "title": "Namespace Virial.Components | Virial",
    "summary": "Namespace Virial.Components Interfaces GameTimer クールダウン及び能力効果タイマーを表します。 IKillButtonLike キルボタンに類するボタンを表します。 シェリフやジャッカル等のキルボタンが含まれます。 IVisualTimer 能力ボタンで使用できるタイマーを表します。 ModAbilityButton 能力ボタンを表します。 ObjectTracker<T> 近くのオブジェクトを追跡するトラッカーを表します。 オブジェクトに対してインタラクトするボタンなどで使用します。 Enums ModAbilityButton.LabelType ボタンのラベルの種類を表します。"
  },
  "api/Virial.Configuration.AssignableFilter-1.html": {
    "href": "api/Virial.Configuration.AssignableFilter-1.html",
    "title": "Interface AssignableFilter<T> | Virial",
    "summary": "Interface AssignableFilter<T> Namespace Virial.Configuration public interface AssignableFilter<T> where T : DefinedAssignable Type Parameters T Methods SetAndShare(T, bool) void SetAndShare(T assignable, bool val) Parameters assignable T val bool Test(T) bool Test(T assignable) Parameters assignable T Returns bool ToggleAndShare(T) void ToggleAndShare(T assignable) Parameters assignable T"
  },
  "api/Virial.Configuration.BoolConfiguration.html": {
    "href": "api/Virial.Configuration.BoolConfiguration.html",
    "title": "Class BoolConfiguration | Virial",
    "summary": "Class BoolConfiguration Namespace Virial.Configuration 真偽値を格納するオプションです。 public abstract class BoolConfiguration : ValueConfiguration<bool>, IConfiguration Inheritance object BoolConfiguration Implements ValueConfiguration<bool> IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Operators implicit operator bool(BoolConfiguration) 真偽値への暗黙的なキャストができます。 public static implicit operator bool(BoolConfiguration config) Parameters config BoolConfiguration Returns bool"
  },
  "api/Virial.Configuration.ConfigurationHolderState.html": {
    "href": "api/Virial.Configuration.ConfigurationHolderState.html",
    "title": "Enum ConfigurationHolderState | Virial",
    "summary": "Enum ConfigurationHolderState Namespace Virial.Configuration public enum ConfigurationHolderState Fields Activated = 1 ホルダは通常通り表示されます。 Emphasized = 2 ホルダは強調表示されます。 Inactivated = 0 ホルダは暗く表示されます。"
  },
  "api/Virial.Configuration.ConfigurationTab.html": {
    "href": "api/Virial.Configuration.ConfigurationTab.html",
    "title": "Class ConfigurationTab | Virial",
    "summary": "Class ConfigurationTab Namespace Virial.Configuration public class ConfigurationTab : IBit32 Inheritance object ConfigurationTab Implements IBit32 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllTab public static ReadOnlyCollection<ConfigurationTab> AllTab { get; } Property Value ReadOnlyCollection<ConfigurationTab> AsBit public uint AsBit { get; } Property Value uint Color public Color Color { get; } Property Value Color CrewmateRoles public static ConfigurationTab CrewmateRoles { get; } Property Value ConfigurationTab DisplayName public string DisplayName { get; } Property Value string GhostRoles public static ConfigurationTab GhostRoles { get; } Property Value ConfigurationTab ImpostorRoles public static ConfigurationTab ImpostorRoles { get; } Property Value ConfigurationTab Modifiers public static ConfigurationTab Modifiers { get; } Property Value ConfigurationTab NeutralRoles public static ConfigurationTab NeutralRoles { get; } Property Value ConfigurationTab Settings public static ConfigurationTab Settings { get; } Property Value ConfigurationTab Operators implicit operator ConfigurationTab(RoleCategory) public static implicit operator ConfigurationTab(RoleCategory category) Parameters category RoleCategory Returns ConfigurationTab"
  },
  "api/Virial.Configuration.ConfigurationTag.html": {
    "href": "api/Virial.Configuration.ConfigurationTag.html",
    "title": "Class ConfigurationTag | Virial",
    "summary": "Class ConfigurationTag Namespace Virial.Configuration public class ConfigurationTag Inheritance object ConfigurationTag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfigurationTag(Image, GUIWidgetSupplier) public ConfigurationTag(Image image, GUIWidgetSupplier overlay) Parameters image Image overlay GUIWidgetSupplier Properties Image public Image Image { get; } Property Value Image Overlay public GUIWidgetSupplier Overlay { get; } Property Value GUIWidgetSupplier"
  },
  "api/Virial.Configuration.Configurations.html": {
    "href": "api/Virial.Configuration.Configurations.html",
    "title": "Interface Configurations | Virial",
    "summary": "Interface Configurations Namespace Virial.Configuration public interface Configurations Properties CanJackalize 現在、ジャッカライズ可能であればtrueを返します。 bool CanJackalize { get; } Property Value bool Methods Configuration(Func<string?>, GUIWidgetSupplier, Func<bool>?) IConfiguration Configuration(Func<string?> displayShower, GUIWidgetSupplier editor, Func<bool>? predicate = null) Parameters displayShower Func<string> editor GUIWidgetSupplier predicate Func<bool> Returns IConfiguration Configuration(string, bool, Func<bool>?, TextComponent?) BoolConfiguration Configuration(string id, bool defaultValue, Func<bool>? predicate = null, TextComponent? title = null) Parameters id string defaultValue bool predicate Func<bool> title TextComponent Returns BoolConfiguration Configuration(string, string[], int, Func<bool>?, TextComponent?) ValueConfiguration<int> Configuration(string id, string[] selection, int defualtIndex, Func<bool>? predicate = null, TextComponent? title = null) Parameters id string selection string[] defualtIndex int predicate Func<bool> title TextComponent Returns ValueConfiguration<int> Configuration(string, FloatSelection, float, Func<float, string>, Func<bool>?, TextComponent?) FloatConfiguration Configuration(string id, FloatSelection selection, float defaultValue, Func<float, string> decorator, Func<bool>? predicate = null, TextComponent? title = null) Parameters id string selection FloatSelection defaultValue float decorator Func<float, string> predicate Func<bool> title TextComponent Returns FloatConfiguration Configuration(string, FloatSelection, float, FloatConfigurationDecorator, Func<bool>?, TextComponent?) FloatConfiguration Configuration(string id, FloatSelection selection, float defaultValue, FloatConfigurationDecorator decorator = FloatConfigurationDecorator.None, Func<bool>? predicate = null, TextComponent? title = null) Parameters id string selection FloatSelection defaultValue float decorator FloatConfigurationDecorator predicate Func<bool> title TextComponent Returns FloatConfiguration Configuration(string, IntegerSelection, int, Func<bool>?, Func<int, string>?, TextComponent?) IntegerConfiguration Configuration(string id, IntegerSelection selection, int defaultValue, Func<bool>? predicate = null, Func<int, string>? decorator = null, TextComponent? title = null) Parameters id string selection IntegerSelection defaultValue int predicate Func<bool> decorator Func<int, string> title TextComponent Returns IntegerConfiguration FloatOption(string, FloatSelection, float, Func<bool>?) FloatConfiguration FloatOption(string id, FloatSelection selection, float defaultValue, Func<bool>? predicate) Parameters id string selection FloatSelection defaultValue float predicate Func<bool> Returns FloatConfiguration GetSharableVariable<T>(string) 名前から共有可能な値を取得します。 ISharableVariable<T>? GetSharableVariable<T>(string id) Parameters id string Returns ISharableVariable<T> Type Parameters T GhostRoleFilter(string) 幽霊役職フィルタを生成します。 GhostRoleFilter GhostRoleFilter(string id) Parameters id string Returns GhostRoleFilter Holder(string, IEnumerable<ConfigurationTab>, IEnumerable<GameModeDefinition>, Func<bool>?) ホルダを生成します。 IConfigurationHolder Holder(string id, IEnumerable<ConfigurationTab> tabs, IEnumerable<GameModeDefinition> gamemodes, Func<bool>? predicate = null) Parameters id string tabs IEnumerable<ConfigurationTab> gamemodes IEnumerable<GameModeDefinition> predicate Func<bool> Returns IConfigurationHolder Holder(TextComponent, TextComponent, IEnumerable<ConfigurationTab>, IEnumerable<GameModeDefinition>, Func<bool>?, Func<ConfigurationHolderState>?) ホルダを生成します。 IConfigurationHolder Holder(TextComponent title, TextComponent detail, IEnumerable<ConfigurationTab> tabs, IEnumerable<GameModeDefinition> gamemodes, Func<bool>? predicate = null, Func<ConfigurationHolderState>? state = null) Parameters title TextComponent detail TextComponent tabs IEnumerable<ConfigurationTab> gamemodes IEnumerable<GameModeDefinition> predicate Func<bool> state Func<ConfigurationHolderState> Returns IConfigurationHolder KillConfiguration(string, CoolDownType, FloatSelection, float, FloatSelection, float, FloatSelection, float, Func<bool>?, Func<float>?) IRelativeCoolDownConfiguration KillConfiguration(string id, CoolDownType defaultType, FloatSelection immediateSelection, float immediateDefaultValue, FloatSelection relativeSelection, float relativeDefaultValue, FloatSelection ratioSelection, float ratioDefaultValue, Func<bool>? predicate = null, Func<float>? baseKillCooldown = null) Parameters id string defaultType CoolDownType immediateSelection FloatSelection immediateDefaultValue float relativeSelection FloatSelection relativeDefaultValue float ratioSelection FloatSelection ratioDefaultValue float predicate Func<bool> baseKillCooldown Func<float> Returns IRelativeCoolDownConfiguration KillConfiguration(TextComponent, string, CoolDownType, FloatSelection, float, FloatSelection, float, FloatSelection, float, Func<bool>?, Func<float>?) IRelativeCoolDownConfiguration KillConfiguration(TextComponent title, string id, CoolDownType defaultType, FloatSelection immediateSelection, float immediateDefaultValue, FloatSelection relativeSelection, float relativeDefaultValue, FloatSelection ratioSelection, float ratioDefaultValue, Func<bool>? predicate = null, Func<float>? baseKillCooldown = null) Parameters title TextComponent id string defaultType CoolDownType immediateSelection FloatSelection immediateDefaultValue float relativeSelection FloatSelection relativeDefaultValue float ratioSelection FloatSelection ratioDefaultValue float predicate Func<bool> baseKillCooldown Func<float> Returns IRelativeCoolDownConfiguration ModifierFilter(string) モディファイアフィルタを生成します。 ModifierFilter ModifierFilter(string id) Parameters id string Returns ModifierFilter NeutralVentConfiguration(string, bool) IVentConfiguration NeutralVentConfiguration(string id, bool isOptional) Parameters id string isOptional bool Returns IVentConfiguration RequireUpdateSettingScreen() ゲーム内設定画面を開いているとき、画面の更新を要求します。 void RequireUpdateSettingScreen() SharableVariable(string, bool) 真偽値型の共有変数を生成します。 IOrderedSharableVariable<bool> SharableVariable(string id, bool defaultValue) Parameters id string defaultValue bool Returns IOrderedSharableVariable<bool> SharableVariable(string, int, int) 0から指定された最大値までの値のいずれかを格納できる整数型の共有変数を生成します。 ISharableVariable<int> SharableVariable(string id, int defaultValue, int maxValueExcluded) Parameters id string defaultValue int maxValueExcluded int 最大値です。指定された値は含まれません。 Returns ISharableVariable<int> SharableVariable(string, FloatSelection, float) 指定された値のいずれかを格納できる実数型の共有変数を生成します。 IOrderedSharableVariable<float> SharableVariable(string id, FloatSelection values, float defaultValue) Parameters id string values FloatSelection defaultValue float Returns IOrderedSharableVariable<float> SharableVariable(string, IntegerSelection, int) 指定された値のいずれかを格納できる整数型の共有変数を生成します。 IOrderedSharableVariable<int> SharableVariable(string id, IntegerSelection values, int defaultValue) Parameters id string values IntegerSelection defaultValue int Returns IOrderedSharableVariable<int> TaskConfiguration(string, bool, bool, Func<bool>?, string?) ITaskConfiguration TaskConfiguration(string id, bool forceTasks, bool containsCommonTasks, Func<bool>? predicate = null, string? translationKey = null) Parameters id string forceTasks bool containsCommonTasks bool predicate Func<bool> translationKey string Returns ITaskConfiguration VentConfiguration(string, bool, IntegerSelection?, int, FloatSelection?, float, FloatSelection?, float) IVentConfiguration VentConfiguration(string id, bool isOptional, IntegerSelection? usesSelection, int usesDefaultValue, FloatSelection? coolDownSelection, float coolDownDefaultValue, FloatSelection? durationSelection, float durationDefaultValue) Parameters id string isOptional bool usesSelection IntegerSelection usesDefaultValue int coolDownSelection FloatSelection coolDownDefaultValue float durationSelection FloatSelection durationDefaultValue float Returns IVentConfiguration"
  },
  "api/Virial.Configuration.CoolDownType.html": {
    "href": "api/Virial.Configuration.CoolDownType.html",
    "title": "Enum CoolDownType | Virial",
    "summary": "Enum CoolDownType Namespace Virial.Configuration クールダウン設定で使用する、クールダウンの設定方法です。 public enum CoolDownType Fields Immediate = 0 Ratio = 2 Relative = 1"
  },
  "api/Virial.Configuration.FloatConfiguration.html": {
    "href": "api/Virial.Configuration.FloatConfiguration.html",
    "title": "Class FloatConfiguration | Virial",
    "summary": "Class FloatConfiguration Namespace Virial.Configuration 実数値を格納するオプションです。 public abstract class FloatConfiguration : ValueConfiguration<float>, IConfiguration Inheritance object FloatConfiguration Implements ValueConfiguration<float> IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Operators implicit operator float(FloatConfiguration) 実数値への暗黙的なキャストができます。 public static implicit operator float(FloatConfiguration config) Parameters config FloatConfiguration Returns float"
  },
  "api/Virial.Configuration.FloatConfigurationDecorator.html": {
    "href": "api/Virial.Configuration.FloatConfigurationDecorator.html",
    "title": "Enum FloatConfigurationDecorator | Virial",
    "summary": "Enum FloatConfigurationDecorator Namespace Virial.Configuration public enum FloatConfigurationDecorator Fields None = 0 値は修飾されません。 Percentage = 4 確率を設定するオプションとして値を修飾します。 Ratio = 1 倍率を設定するオプションとして値を修飾します。 Second = 2 秒数を設定するオプションとして値を修飾します。 TaskPhase = 3 タスクフェイズを設定するオプションとして値を修飾します。"
  },
  "api/Virial.Configuration.GhostRoleFilter.html": {
    "href": "api/Virial.Configuration.GhostRoleFilter.html",
    "title": "Interface GhostRoleFilter | Virial",
    "summary": "Interface GhostRoleFilter Namespace Virial.Configuration 割り当て可能な幽霊役職に制限をかけます。 public interface GhostRoleFilter : AssignableFilter<DefinedGhostRole> Inherited Members AssignableFilter<DefinedGhostRole>.Test(DefinedGhostRole) AssignableFilter<DefinedGhostRole>.ToggleAndShare(DefinedGhostRole) AssignableFilter<DefinedGhostRole>.SetAndShare(DefinedGhostRole, bool)"
  },
  "api/Virial.Configuration.IConfiguration.html": {
    "href": "api/Virial.Configuration.IConfiguration.html",
    "title": "Interface IConfiguration | Virial",
    "summary": "Interface IConfiguration Namespace Virial.Configuration 設定項目を表します。 public interface IConfiguration Properties IsShown このオプションが現在表示されうるかどうかを返します。 bool IsShown { get; } Property Value bool Methods GetDisplayText() ヘルプ画面等に向けたテキストによる設定の表示を表します。 string? GetDisplayText() Returns string GetEditor() 設定画面上の編集用GUI定義を返します。 GUIWidgetSupplier GetEditor() Returns GUIWidgetSupplier"
  },
  "api/Virial.Configuration.IConfigurationHolder.html": {
    "href": "api/Virial.Configuration.IConfigurationHolder.html",
    "title": "Interface IConfigurationHolder | Virial",
    "summary": "Interface IConfigurationHolder Namespace Virial.Configuration public interface IConfigurationHolder Properties Configurations IEnumerable<IConfiguration> Configurations { get; } Property Value IEnumerable<IConfiguration> Detail TextComponent Detail { get; set; } Property Value TextComponent DisplayOption 設定の表示の仕方を返します。 ConfigurationHolderState DisplayOption { get; } Property Value ConfigurationHolderState GameModes BitMask<GameModeDefinition> GameModes { get; } Property Value BitMask<GameModeDefinition> Illustration Image? Illustration { get; set; } Property Value Image IsShown 現在、編集可能な設定かどうかを調べます。 bool IsShown { get; } Property Value bool Tabs BitMask<ConfigurationTab> Tabs { get; } Property Value BitMask<ConfigurationTab> Tags IEnumerable<ConfigurationTag> Tags { get; } Property Value IEnumerable<ConfigurationTag> Title TextComponent Title { get; set; } Property Value TextComponent Methods AddTags(params ConfigurationTag[]) IConfigurationHolder AddTags(params ConfigurationTag[] tags) Parameters tags ConfigurationTag[] Returns IConfigurationHolder AppendConfiguration(IConfiguration) ホルダ内にオプションを追加します。 IConfigurationHolder AppendConfiguration(IConfiguration configuration) Parameters configuration IConfiguration Returns IConfigurationHolder AppendConfigurations(IEnumerable<IConfiguration>) ホルダ内にオプションを追加します。 IConfigurationHolder AppendConfigurations(IEnumerable<IConfiguration> configuration) Parameters configuration IEnumerable<IConfiguration> Returns IConfigurationHolder AppendRelatedAction(TextComponent, Func<bool>, Action) 関連するアクションを追加します。 IConfigurationHolder AppendRelatedAction(TextComponent label, Func<bool> predicate, Action onClicked) Parameters label TextComponent predicate Func<bool> onClicked Action Returns IConfigurationHolder AppendRelatedHolders(params IConfigurationHolder[]) 関連するホルダを設定します。 IConfigurationHolder AppendRelatedHolders(params IConfigurationHolder[] holders) Parameters holders IConfigurationHolder[] Returns IConfigurationHolder ScheduleAddRelated(Func<IConfigurationHolder[]>) 関連するホルダの登録を予約します。 IConfigurationHolder ScheduleAddRelated(Func<IConfigurationHolder[]> holder) Parameters holder Func<IConfigurationHolder[]> Returns IConfigurationHolder SetDisplayState(Func<ConfigurationHolderState>) void SetDisplayState(Func<ConfigurationHolderState> state) Parameters state Func<ConfigurationHolderState>"
  },
  "api/Virial.Configuration.IOrderedSharableEntry.html": {
    "href": "api/Virial.Configuration.IOrderedSharableEntry.html",
    "title": "Interface IOrderedSharableEntry | Virial",
    "summary": "Interface IOrderedSharableEntry Namespace Virial.Configuration 共有可能で、とりうる値に順序のある変数を表します。 public interface IOrderedSharableEntry : ISharableEntry Inherited Members ISharableEntry.Name Methods ChangeValue(bool, bool) 順序に沿って値を変化させます。 void ChangeValue(bool increase, bool allowLoop = true) Parameters increase bool 上昇する方向に変化させる場合、true allowLoop bool ループした値の変化を許す場合、true"
  },
  "api/Virial.Configuration.IOrderedSharableVariable-1.html": {
    "href": "api/Virial.Configuration.IOrderedSharableVariable-1.html",
    "title": "Interface IOrderedSharableVariable<T> | Virial",
    "summary": "Interface IOrderedSharableVariable<T> Namespace Virial.Configuration 共有可能で、とりうる値に順序のある変数を表します。 public interface IOrderedSharableVariable<T> : ISharableVariable<T>, Reference<T>, IOrderedSharableEntry, ISharableEntry Type Parameters T Inherited Members ISharableVariable<T>.CurrentValue Reference<T>.Value IOrderedSharableEntry.ChangeValue(bool, bool) ISharableEntry.Name"
  },
  "api/Virial.Configuration.IRelativeCoolDownConfiguration.html": {
    "href": "api/Virial.Configuration.IRelativeCoolDownConfiguration.html",
    "title": "Interface IRelativeCoolDownConfiguration | Virial",
    "summary": "Interface IRelativeCoolDownConfiguration Namespace Virial.Configuration クールダウン設定のエディタです。 public interface IRelativeCoolDownConfiguration : IConfiguration Inherited Members IConfiguration.GetEditor() IConfiguration.GetDisplayText() IConfiguration.IsShown Properties CoolDown 現在のクールダウンです。 float CoolDown { get; } Property Value float Methods GetCoolDown(float) float GetCoolDown(float baseCooldown) Parameters baseCooldown float Returns float"
  },
  "api/Virial.Configuration.ISharableEntry.html": {
    "href": "api/Virial.Configuration.ISharableEntry.html",
    "title": "Interface ISharableEntry | Virial",
    "summary": "Interface ISharableEntry Namespace Virial.Configuration public interface ISharableEntry Properties Name オプションの内部名称です。 string Name { get; } Property Value string"
  },
  "api/Virial.Configuration.ISharableVariable-1.html": {
    "href": "api/Virial.Configuration.ISharableVariable-1.html",
    "title": "Interface ISharableVariable<T> | Virial",
    "summary": "Interface ISharableVariable<T> Namespace Virial.Configuration 共有可能な変数を表します。 public interface ISharableVariable<T> : ISharableEntry, Reference<T> Type Parameters T Inherited Members ISharableEntry.Name Reference<T>.Value Properties CurrentValue 現在の値を取得します。 セッターはローカルの値を上書きします。 T CurrentValue { get; set; } Property Value T"
  },
  "api/Virial.Configuration.ITaskConfiguration.html": {
    "href": "api/Virial.Configuration.ITaskConfiguration.html",
    "title": "Interface ITaskConfiguration | Virial",
    "summary": "Interface ITaskConfiguration Namespace Virial.Configuration public interface ITaskConfiguration Properties Configurations IEnumerable<IConfiguration> Configurations { get; } Property Value IEnumerable<IConfiguration> RequiresTasks bool RequiresTasks { get; } Property Value bool Methods AsGroup(Color) IConfiguration AsGroup(Color color) Parameters color Color Returns IConfiguration GetTasks(out int, out int, out int) void GetTasks(out int shortTasks, out int longTasks, out int commonTasks) Parameters shortTasks int longTasks int commonTasks int"
  },
  "api/Virial.Configuration.IVentConfiguration.html": {
    "href": "api/Virial.Configuration.IVentConfiguration.html",
    "title": "Interface IVentConfiguration | Virial",
    "summary": "Interface IVentConfiguration Namespace Virial.Configuration ベント設定オプションのエディタです。 public interface IVentConfiguration : IConfiguration Inherited Members IConfiguration.GetEditor() IConfiguration.GetDisplayText() IConfiguration.IsShown Properties CanUseVent ベントを使用できるかどうかを取得します。 bool CanUseVent { get; } Property Value bool CoolDown ベント使用のクールダウンを返します。 float CoolDown { get; } Property Value float Duration ベントに潜伏できる時間を返します。 float Duration { get; } Property Value float Uses ベントの使用可能回数を返します。 int Uses { get; } Property Value int"
  },
  "api/Virial.Configuration.IntegerConfiguration.html": {
    "href": "api/Virial.Configuration.IntegerConfiguration.html",
    "title": "Class IntegerConfiguration | Virial",
    "summary": "Class IntegerConfiguration Namespace Virial.Configuration 整数値を格納するオプションです。 public abstract class IntegerConfiguration : ValueConfiguration<int>, IConfiguration Inheritance object IntegerConfiguration Implements ValueConfiguration<int> IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Operators implicit operator int(IntegerConfiguration) 整数値への暗黙的なキャストができます。 public static implicit operator int(IntegerConfiguration config) Parameters config IntegerConfiguration Returns int"
  },
  "api/Virial.Configuration.ModifierFilter.html": {
    "href": "api/Virial.Configuration.ModifierFilter.html",
    "title": "Interface ModifierFilter | Virial",
    "summary": "Interface ModifierFilter Namespace Virial.Configuration 割り当て可能なモディファイアに制限をかけます。 public interface ModifierFilter : AssignableFilter<DefinedModifier> Inherited Members AssignableFilter<DefinedModifier>.Test(DefinedModifier) AssignableFilter<DefinedModifier>.ToggleAndShare(DefinedModifier) AssignableFilter<DefinedModifier>.SetAndShare(DefinedModifier, bool)"
  },
  "api/Virial.Configuration.RoleFilter.html": {
    "href": "api/Virial.Configuration.RoleFilter.html",
    "title": "Interface RoleFilter | Virial",
    "summary": "Interface RoleFilter Namespace Virial.Configuration 割り当て可能な役職に制限をかけます。 public interface RoleFilter : AssignableFilter<DefinedRole> Inherited Members AssignableFilter<DefinedRole>.Test(DefinedRole) AssignableFilter<DefinedRole>.ToggleAndShare(DefinedRole) AssignableFilter<DefinedRole>.SetAndShare(DefinedRole, bool)"
  },
  "api/Virial.Configuration.ValueConfiguration-1.html": {
    "href": "api/Virial.Configuration.ValueConfiguration-1.html",
    "title": "Interface ValueConfiguration<T> | Virial",
    "summary": "Interface ValueConfiguration<T> Namespace Virial.Configuration 値を持つオプションです。 public interface ValueConfiguration<T> : IConfiguration Type Parameters T Inherited Members IConfiguration.GetEditor() IConfiguration.GetDisplayText() IConfiguration.IsShown Methods ChangeValue(bool, bool) 値を更新します。 void ChangeValue(bool increase, bool loopAtTerminal = true) Parameters increase bool loopAtTerminal bool GetValue() 値を取得します。 T GetValue() Returns T UpdateValue(T) 値を更新します。 void UpdateValue(T value) Parameters value T"
  },
  "api/Virial.Configuration.html": {
    "href": "api/Virial.Configuration.html",
    "title": "Namespace Virial.Configuration | Virial",
    "summary": "Namespace Virial.Configuration Classes BoolConfiguration 真偽値を格納するオプションです。 ConfigurationTab ConfigurationTag FloatConfiguration 実数値を格納するオプションです。 IntegerConfiguration 整数値を格納するオプションです。 Interfaces AssignableFilter<T> Configurations GhostRoleFilter 割り当て可能な幽霊役職に制限をかけます。 IConfiguration 設定項目を表します。 IConfigurationHolder IOrderedSharableEntry 共有可能で、とりうる値に順序のある変数を表します。 IOrderedSharableVariable<T> 共有可能で、とりうる値に順序のある変数を表します。 IRelativeCoolDownConfiguration クールダウン設定のエディタです。 ISharableEntry ISharableVariable<T> 共有可能な変数を表します。 ITaskConfiguration IVentConfiguration ベント設定オプションのエディタです。 ModifierFilter 割り当て可能なモディファイアに制限をかけます。 RoleFilter 割り当て可能な役職に制限をかけます。 ValueConfiguration<T> 値を持つオプションです。 Enums ConfigurationHolderState CoolDownType クールダウン設定で使用する、クールダウンの設定方法です。 FloatConfigurationDecorator"
  },
  "api/Virial.DI.AbstractModule-1.html": {
    "href": "api/Virial.DI.AbstractModule-1.html",
    "title": "Class AbstractModule<Container> | Virial",
    "summary": "Class AbstractModule<Container> Namespace Virial.DI public abstract class AbstractModule<Container> : IGenericModule<Container>, IModule where Container : class Type Parameters Container Inheritance object AbstractModule<Container> Implements IGenericModule<Container> IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MyContainer public Container MyContainer { get; } Property Value Container Methods OnInjected(Container) protected virtual void OnInjected(Container container) Parameters container Container"
  },
  "api/Virial.DI.DIManager.html": {
    "href": "api/Virial.DI.DIManager.html",
    "title": "Class DIManager | Virial",
    "summary": "Class DIManager Namespace Virial.DI モジュールコンテナとモジュールに関する管理を担います。 public class DIManager Inheritance object DIManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Instantiate<ContainerImpl>(Action<ContainerImpl>?) public ContainerImpl? Instantiate<ContainerImpl>(Action<ContainerImpl>? preprocess = null) where ContainerImpl : class Parameters preprocess Action<ContainerImpl> Returns ContainerImpl Type Parameters ContainerImpl RegisterContainer<ContainerImpl>(Func<ContainerImpl>) public void RegisterContainer<ContainerImpl>(Func<ContainerImpl> supplier) where ContainerImpl : class, IModuleContainer Parameters supplier Func<ContainerImpl> Type Parameters ContainerImpl RegisterGeneralModule<Container>(Func<IModule>) public bool RegisterGeneralModule<Container>(Func<IModule> supplier) Parameters supplier Func<IModule> Returns bool Type Parameters Container RegisterModule<Container>(Func<IGenericModule<Container>>) public bool RegisterModule<Container>(Func<IGenericModule<Container>> supplier) Parameters supplier Func<IGenericModule<Container>> Returns bool Type Parameters Container"
  },
  "api/Virial.DI.IGenericModule-1.html": {
    "href": "api/Virial.DI.IGenericModule-1.html",
    "title": "Interface IGenericModule<Container> | Virial",
    "summary": "Interface IGenericModule<Container> Namespace Virial.DI コンテナに属するモジュールを表します。 public interface IGenericModule<Container> : IModule Type Parameters Container 注入先のコンテナ Properties MyContainer Container MyContainer { get; } Property Value Container"
  },
  "api/Virial.DI.IModule.html": {
    "href": "api/Virial.DI.IModule.html",
    "title": "Interface IModule | Virial",
    "summary": "Interface IModule Namespace Virial.DI モジュールを表します。 public interface IModule"
  },
  "api/Virial.DI.IModuleContainer.html": {
    "href": "api/Virial.DI.IModuleContainer.html",
    "title": "Interface IModuleContainer | Virial",
    "summary": "Interface IModuleContainer Namespace Virial.DI public interface IModuleContainer Methods GetModule<T>() T? GetModule<T>() where T : class, IModule Returns T Type Parameters T"
  },
  "api/Virial.DI.html": {
    "href": "api/Virial.DI.html",
    "title": "Namespace Virial.DI | Virial",
    "summary": "Namespace Virial.DI Classes AbstractModule<Container> DIManager モジュールコンテナとモジュールに関する管理を担います。 Interfaces IGenericModule<Container> コンテナに属するモジュールを表します。 IModule モジュールを表します。 IModuleContainer"
  },
  "api/Virial.DependentLifespan.html": {
    "href": "api/Virial.DependentLifespan.html",
    "title": "Class DependentLifespan | Virial",
    "summary": "Class DependentLifespan Namespace Virial 他の寿命オブジェクトにキルのタイミングを委ねる寿命オブジェクトです。 委ねる寿命オブジェクトを注入されるまでは少なくとも生存します。 public class DependentLifespan : INestedLifespan, ILifespan Inheritance object DependentLifespan Implements INestedLifespan ILifespan Derived FlexibleLifespan AbstractPlayerAbility AbstractPlayerUsurpableAbility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsDeadObject 寿命の尽きたオブジェクトはtrueを返します。 public bool IsDeadObject { get; } Property Value bool Methods Bind(ILifespan) public bool Bind(ILifespan lifespan) Parameters lifespan ILifespan Returns bool"
  },
  "api/Virial.EditableBitMask-1.html": {
    "href": "api/Virial.EditableBitMask-1.html",
    "title": "Interface EditableBitMask<T> | Virial",
    "summary": "Interface EditableBitMask<T> Namespace Virial 編集可能なマスクです。 要素を追加する操作が可能です。 public interface EditableBitMask<T> : BitMask<T> Type Parameters T Inherited Members BitMask<T>.Test(T) BitMask<T>.TestAll(params T[]) BitMask<T>.TestAll(IEnumerable<T>) BitMask<T>.ForEach(IEnumerable<T>) Methods Add(T) EditableBitMask<T> Add(T value) Parameters value T Returns EditableBitMask<T> Clear() EditableBitMask<T> Clear() Returns EditableBitMask<T>"
  },
  "api/Virial.Events.Event.html": {
    "href": "api/Virial.Events.Event.html",
    "title": "Interface Event | Virial",
    "summary": "Interface Event Namespace Virial.Events public interface Event"
  },
  "api/Virial.Events.Game.AbstractGameEvent.html": {
    "href": "api/Virial.Events.Game.AbstractGameEvent.html",
    "title": "Class AbstractGameEvent | Virial",
    "summary": "Class AbstractGameEvent Namespace Virial.Events.Game ゲームに関するイベントを表します。 public class AbstractGameEvent : Event Inheritance object AbstractGameEvent Implements Event Derived GameEndEvent GameHudUpdateEvent GameHudUpdateFasterEvent GameHudUpdateLaterEvent GameLateUpdateEvent GameUpdateEvent TaskPhaseStartEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Game public Game Game { get; } Property Value Game"
  },
  "api/Virial.Events.Game.CameraUpdateEvent.html": {
    "href": "api/Virial.Events.Game.CameraUpdateEvent.html",
    "title": "Class CameraUpdateEvent | Virial",
    "summary": "Class CameraUpdateEvent Namespace Virial.Events.Game カメラが更新される際に呼び出されます。 カメラの色調を変更できます。 public class CameraUpdateEvent : Event Inheritance object CameraUpdateEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UpdateBrightness(float, bool) public void UpdateBrightness(float value, bool multiply) Parameters value float multiply bool UpdateHue(float) public void UpdateHue(float value) Parameters value float UpdateSaturation(float, bool) public void UpdateSaturation(float value, bool multiply) Parameters value float multiply bool"
  },
  "api/Virial.Events.Game.DeadBodyInstantiateEvent.html": {
    "href": "api/Virial.Events.Game.DeadBodyInstantiateEvent.html",
    "title": "Class DeadBodyInstantiateEvent | Virial",
    "summary": "Class DeadBodyInstantiateEvent Namespace Virial.Events.Game 死体が生成されるときに呼び出されます。 public class DeadBodyInstantiateEvent : Event Inheritance object DeadBodyInstantiateEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Player 死亡したプレイヤーです。 public Player? Player { get; } Property Value Player"
  },
  "api/Virial.Events.Game.EndCriteriaMetEvent.html": {
    "href": "api/Virial.Events.Game.EndCriteriaMetEvent.html",
    "title": "Class EndCriteriaMetEvent | Virial",
    "summary": "Class EndCriteriaMetEvent Namespace Virial.Events.Game ゲーム終了が決定したときに呼び出されます。 ゲーム終了理由を書き換えられます。 public class EndCriteriaMetEvent : Event Inheritance object EndCriteriaMetEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks ホストでのみ発火します。 Properties EndReason 終了条件を満たした理由。 public GameEndReason EndReason { get; } Property Value GameEndReason GameEnd 終了条件を満たしたエンディング。 public GameEnd GameEnd { get; } Property Value GameEnd LastWinners 書き換え前の勝者。 public BitMask<Player>? LastWinners { get; } Property Value BitMask<Player> Overwritten ゲーム終了理由が上書きされた場合はtrueを返します。 public bool Overwritten { get; } Property Value bool OverwrittenEndReason 乗っ取りの末に実際に至るエンディングの終了理由。 乗っ取りが起こらない場合はEndReasonと同じものが返ります。 public GameEndReason OverwrittenEndReason { get; } Property Value GameEndReason OverwrittenGameEnd 乗っ取りの末に実際に至るエンディング。 乗っ取りが起こらない場合はGameEndと同じものが返ります。 public GameEnd OverwrittenGameEnd { get; } Property Value GameEnd Winners 現在の勝者。 public BitMask<Player> Winners { get; } Property Value BitMask<Player> Methods TryOverwriteEnd(GameEnd, GameEndReason, int) ゲーム終了理由の上書きを試行します。 ゲーム終了理由の優先度によって上書きできない場合があります。 public bool TryOverwriteEnd(GameEnd end, GameEndReason reason, int preWinners = 0) Parameters end GameEnd 上書きするゲーム終了。 reason GameEndReason ゲーム終了理由。 preWinners int 上書き時の勝者マスク。これ以外でもプレイヤーは役職やモディファイア等の都合で勝利できます。 Returns bool"
  },
  "api/Virial.Events.Game.GameEndEvent.html": {
    "href": "api/Virial.Events.Game.GameEndEvent.html",
    "title": "Class GameEndEvent | Virial",
    "summary": "Class GameEndEvent Namespace Virial.Events.Game ゲーム終了時に発火します。 public class GameEndEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent GameEndEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndState ゲーム終了状態です。 public EndState EndState { get; } Property Value EndState"
  },
  "api/Virial.Events.Game.GameHudUpdateEvent.html": {
    "href": "api/Virial.Events.Game.GameHudUpdateEvent.html",
    "title": "Class GameHudUpdateEvent | Virial",
    "summary": "Class GameHudUpdateEvent Namespace Virial.Events.Game ゲームのHUDを更新する際に発火します。 ここでプレイヤーの輪郭を変更すると、変更が画面に正しく反映されます。 public class GameHudUpdateEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent GameHudUpdateEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.GameHudUpdateFasterEvent.html": {
    "href": "api/Virial.Events.Game.GameHudUpdateFasterEvent.html",
    "title": "Class GameHudUpdateFasterEvent | Virial",
    "summary": "Class GameHudUpdateFasterEvent Namespace Virial.Events.Game このイベントの使用は推奨されません。 GameHudUpdateEventを使用し、EventPriority属性でより高い優先度を設定してください。 [Obsolete(\"EventPriority属性の使用を検討してください。\")] public class GameHudUpdateFasterEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent GameHudUpdateFasterEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.GameHudUpdateLaterEvent.html": {
    "href": "api/Virial.Events.Game.GameHudUpdateLaterEvent.html",
    "title": "Class GameHudUpdateLaterEvent | Virial",
    "summary": "Class GameHudUpdateLaterEvent Namespace Virial.Events.Game このイベントの使用は推奨されません。 GameHudUpdateEventを使用し、EventPriority属性でより低い優先度を設定してください。 [Obsolete(\"EventPriority属性の使用を検討してください。\")] public class GameHudUpdateLaterEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent GameHudUpdateLaterEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.GameLateUpdateEvent.html": {
    "href": "api/Virial.Events.Game.GameLateUpdateEvent.html",
    "title": "Class GameLateUpdateEvent | Virial",
    "summary": "Class GameLateUpdateEvent Namespace Virial.Events.Game LateUpdateのタイミングで発火します。 public class GameLateUpdateEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent GameLateUpdateEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.GameStartEvent.html": {
    "href": "api/Virial.Events.Game.GameStartEvent.html",
    "title": "Class GameStartEvent | Virial",
    "summary": "Class GameStartEvent Namespace Virial.Events.Game ゲーム開始時に発火します。 public class GameStartEvent : TaskPhaseStartEvent, Event Inheritance object AbstractGameEvent TaskPhaseStartEvent GameStartEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.GameUpdateEvent.html": {
    "href": "api/Virial.Events.Game.GameUpdateEvent.html",
    "title": "Class GameUpdateEvent | Virial",
    "summary": "Class GameUpdateEvent Namespace Virial.Events.Game ゲーム中に毎ティック発火します。 public class GameUpdateEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent GameUpdateEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.LightRangeUpdateEvent.html": {
    "href": "api/Virial.Events.Game.LightRangeUpdateEvent.html",
    "title": "Class LightRangeUpdateEvent | Virial",
    "summary": "Class LightRangeUpdateEvent Namespace Virial.Events.Game 視界の広さを更新する際に発火します。 public class LightRangeUpdateEvent : Event Inheritance object LightRangeUpdateEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LightRange public float LightRange { get; set; } Property Value float"
  },
  "api/Virial.Events.Game.Meeting.CalledEmergencyMeetingEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.CalledEmergencyMeetingEvent.html",
    "title": "Class CalledEmergencyMeetingEvent | Virial",
    "summary": "Class CalledEmergencyMeetingEvent Namespace Virial.Events.Game.Meeting 緊急招集の際に発火するイベントです。 public class CalledEmergencyMeetingEvent : MeetingPreStartEvent, Event Inheritance object AbstractPlayerEvent MeetingPreStartEvent CalledEmergencyMeetingEvent Implements Event Inherited Members MeetingPreStartEvent.Reported MeetingPreStartEvent.Reporter AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Meeting.CheckCanPushEmergencyButtonEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.CheckCanPushEmergencyButtonEvent.html",
    "title": "Class CheckCanPushEmergencyButtonEvent | Virial",
    "summary": "Class CheckCanPushEmergencyButtonEvent Namespace Virial.Events.Game.Meeting 緊急会議ボタンが押せるか調べる際に呼び出されます。 緊急会議をブロックできます。 public class CheckCanPushEmergencyButtonEvent : Event Inheritance object CheckCanPushEmergencyButtonEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CanPushButton 自身が緊急会議ボタンを押せるとき、trueを返します。 public bool CanPushButton { get; } Property Value bool Methods DenyButton(string?) ボタンの使用をブロックします。 public void DenyButton(string? reason) Parameters reason string ボタンの禁止理由。翻訳済みのテキストを設定してください。"
  },
  "api/Virial.Events.Game.Meeting.ExileScenePreStartEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.ExileScenePreStartEvent.html",
    "title": "Class ExileScenePreStartEvent | Virial",
    "summary": "Class ExileScenePreStartEvent Namespace Virial.Events.Game.Meeting 追放シーンの開始直前に呼び出されます。 このとき、追放画面はまだ生成されていません。 public class ExileScenePreStartEvent : Event Inheritance object ExileScenePreStartEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Exiled public IReadOnlyList<Player> Exiled { get; } Property Value IReadOnlyList<Player>"
  },
  "api/Virial.Events.Game.Meeting.ExileSceneStartEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.ExileSceneStartEvent.html",
    "title": "Class ExileSceneStartEvent | Virial",
    "summary": "Class ExileSceneStartEvent Namespace Virial.Events.Game.Meeting 追放シーンの開始時に呼び出されます。 会議画面と追放画面の両方にアクセスできます。 public class ExileSceneStartEvent : Event Inheritance object ExileSceneStartEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Exiled public IReadOnlyList<Player> Exiled { get; } Property Value IReadOnlyList<Player>"
  },
  "api/Virial.Events.Game.Meeting.FixExileTextEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.FixExileTextEvent.html",
    "title": "Class FixExileTextEvent | Virial",
    "summary": "Class FixExileTextEvent Namespace Virial.Events.Game.Meeting 追放テキストを決定するために呼び出されます。 public class FixExileTextEvent : Event Inheritance object FixExileTextEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Exiled 追放されるプレイヤーを取得します。 public IReadOnlyList<Player> Exiled { get; } Property Value IReadOnlyList<Player> Methods AddText(string) 追放画面で表示されるテキストを追加します。 public void AddText(string text) Parameters text string GetTexts() 追放画面で表示されるテキストを取得します。 public IReadOnlyList<string> GetTexts() Returns IReadOnlyList<string>"
  },
  "api/Virial.Events.Game.Meeting.MeetingEndEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingEndEvent.html",
    "title": "Class MeetingEndEvent | Virial",
    "summary": "Class MeetingEndEvent Namespace Virial.Events.Game.Meeting 会議終了時に呼び出されます。 プレイヤーはすでに追放されています。 public class MeetingEndEvent : Event Inheritance object MeetingEndEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Exiled public IReadOnlyList<Player> Exiled { get; } Property Value IReadOnlyList<Player>"
  },
  "api/Virial.Events.Game.Meeting.MeetingPreEndEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingPreEndEvent.html",
    "title": "Class MeetingPreEndEvent | Virial",
    "summary": "Class MeetingPreEndEvent Namespace Virial.Events.Game.Meeting 会議終了時、追加追放者を含むプレイヤーが全員追放された後で呼び出されます。 このイベントで登録されたコルーチンを全クライアントが実行しきった後、MeetingEndEventが呼び出されます。 public class MeetingPreEndEvent : Event Inheritance object MeetingPreEndEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PushCoroutine(IEnumerator) 実行されるコルーチンを追加します。 public void PushCoroutine(IEnumerator coroutine) Parameters coroutine IEnumerator"
  },
  "api/Virial.Events.Game.Meeting.MeetingPreStartEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingPreStartEvent.html",
    "title": "Class MeetingPreStartEvent | Virial",
    "summary": "Class MeetingPreStartEvent Namespace Virial.Events.Game.Meeting 会議の開始の要求が受け入れられた時点(レポート/緊急招集の瞬間)で呼び出されます。 MeetingStartEventより先行して呼び出されます。 public class MeetingPreStartEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent MeetingPreStartEvent Implements Event Derived CalledEmergencyMeetingEvent ReportDeadBodyEvent Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Reported public Player? Reported { get; } Property Value Player Reporter public Player Reporter { get; } Property Value Player"
  },
  "api/Virial.Events.Game.Meeting.MeetingPreSyncEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingPreSyncEvent.html",
    "title": "Class MeetingPreSyncEvent | Virial",
    "summary": "Class MeetingPreSyncEvent Namespace Virial.Events.Game.Meeting 会議終了時、追加追放者を決定するルーチンの直前で呼び出されます。 PlayerExiledEventが発火するより前に呼び出されますが、他クライアントのPlayerExiledEvent/>発火によって呼び出されたRPCは呼び出されている可能性があります。 public class MeetingPreSyncEvent : Event Inheritance object MeetingPreSyncEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Meeting.MeetingStartEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingStartEvent.html",
    "title": "Class MeetingStartEvent | Virial",
    "summary": "Class MeetingStartEvent Namespace Virial.Events.Game.Meeting 緊急会議開始時に呼び出されます。 public class MeetingStartEvent : Event Inheritance object MeetingStartEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CanVote 会議で投票を禁じる場合、falseにしてください。 このプロパティはプレイヤーの生死による投票の可否を表すものではありません。 本来投票しえない状況での投票を可能にしません。 public bool CanVote { get; set; } Property Value bool"
  },
  "api/Virial.Events.Game.Meeting.MeetingTieVoteEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingTieVoteEvent.html",
    "title": "Class MeetingTieVoteEvent | Virial",
    "summary": "Class MeetingTieVoteEvent Namespace Virial.Events.Game.Meeting public class MeetingTieVoteEvent : Event Inheritance object MeetingTieVoteEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddExtraVote(Player?) public void AddExtraVote(Player? voteFor) Parameters voteFor Player TryCheckVotedFor(Player, out Player?) public bool TryCheckVotedFor(Player voter, out Player? votedFor) Parameters voter Player votedFor Player Returns bool"
  },
  "api/Virial.Events.Game.Meeting.MeetingTieVoteHostEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingTieVoteHostEvent.html",
    "title": "Class MeetingTieVoteHostEvent | Virial",
    "summary": "Class MeetingTieVoteHostEvent Namespace Virial.Events.Game.Meeting タイ投票が発生したときに発火します。 追加票を投じさせられます。追加票を投じた後の投票結果がタイ投票であっても、このイベントは発火しません。 public class MeetingTieVoteHostEvent : Event Inheritance object MeetingTieVoteHostEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks このイベントはホストでのみ発火します。 Methods AddExtraVote(Player?) 追加票を投じます。 public void AddExtraVote(Player? voteFor) Parameters voteFor Player TryCheckVotedFor(Player, out Player?) 投票者の投票先を取得します。 public bool TryCheckVotedFor(Player voter, out Player? votedFor) Parameters voter Player 投票者 votedFor Player 投票先がある場合、投票先。スキップ票及び白票の場合はnull Returns bool"
  },
  "api/Virial.Events.Game.Meeting.MeetingVoteEndEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.MeetingVoteEndEvent.html",
    "title": "Class MeetingVoteEndEvent | Virial",
    "summary": "Class MeetingVoteEndEvent Namespace Virial.Events.Game.Meeting 投票終了時に発火します。 public class MeetingVoteEndEvent : Event Inheritance object MeetingVoteEndEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Meeting.PlayerVoteCastEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.PlayerVoteCastEvent.html",
    "title": "Class PlayerVoteCastEvent | Virial",
    "summary": "Class PlayerVoteCastEvent Namespace Virial.Events.Game.Meeting 投票時に呼び出されます。 public class PlayerVoteCastEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerVoteCastEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Vote public int Vote { get; } Property Value int VoteFor public Player? VoteFor { get; } Property Value Player Voter public Player Voter { get; } Property Value Player"
  },
  "api/Virial.Events.Game.Meeting.PlayerVoteCastLocalEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.PlayerVoteCastLocalEvent.html",
    "title": "Class PlayerVoteCastLocalEvent | Virial",
    "summary": "Class PlayerVoteCastLocalEvent Namespace Virial.Events.Game.Meeting 投票時に呼び出されます。 public class PlayerVoteCastLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerVoteCastLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks ローカルでのみ呼び出されます。 Properties Vote public int Vote { get; set; } Property Value int VoteFor public Player? VoteFor { get; } Property Value Player Voter public Player Voter { get; } Property Value Player"
  },
  "api/Virial.Events.Game.Meeting.PlayerVoteDisclosedLocalEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.PlayerVoteDisclosedLocalEvent.html",
    "title": "Class PlayerVoteDisclosedLocalEvent | Virial",
    "summary": "Class PlayerVoteDisclosedLocalEvent Namespace Virial.Events.Game.Meeting 投票が開示されたときに呼び出されます。 public class PlayerVoteDisclosedLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerVoteDisclosedLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks 自身の投票結果についてのみ呼び出されます。 Properties VoteFor public Player? VoteFor { get; } Property Value Player VoteToWillBeExiled public bool VoteToWillBeExiled { get; } Property Value bool Voter public Player Voter { get; } Property Value Player"
  },
  "api/Virial.Events.Game.Meeting.PlayerVotedLocalEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.PlayerVotedLocalEvent.html",
    "title": "Class PlayerVotedLocalEvent | Virial",
    "summary": "Class PlayerVotedLocalEvent Namespace Virial.Events.Game.Meeting 投票結果の開示時に呼び出されます。 このイベントによって、誰が自身に票を投じたか知ることができます。 public class PlayerVotedLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerVotedLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks 自身に対する投票結果についてのみ呼び出されます。 Properties Voters public IEnumerable<Player> Voters { get; } Property Value IEnumerable<Player>"
  },
  "api/Virial.Events.Game.Meeting.ReportDeadBodyEvent.html": {
    "href": "api/Virial.Events.Game.Meeting.ReportDeadBodyEvent.html",
    "title": "Class ReportDeadBodyEvent | Virial",
    "summary": "Class ReportDeadBodyEvent Namespace Virial.Events.Game.Meeting 死体が通報されると発火するイベントです。 public class ReportDeadBodyEvent : MeetingPreStartEvent, Event Inheritance object AbstractPlayerEvent MeetingPreStartEvent ReportDeadBodyEvent Implements Event Inherited Members MeetingPreStartEvent.Reported MeetingPreStartEvent.Reporter AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Meeting.html": {
    "href": "api/Virial.Events.Game.Meeting.html",
    "title": "Namespace Virial.Events.Game.Meeting | Virial",
    "summary": "Namespace Virial.Events.Game.Meeting Classes CalledEmergencyMeetingEvent 緊急招集の際に発火するイベントです。 CheckCanPushEmergencyButtonEvent 緊急会議ボタンが押せるか調べる際に呼び出されます。 緊急会議をブロックできます。 ExileScenePreStartEvent 追放シーンの開始直前に呼び出されます。 このとき、追放画面はまだ生成されていません。 ExileSceneStartEvent 追放シーンの開始時に呼び出されます。 会議画面と追放画面の両方にアクセスできます。 FixExileTextEvent 追放テキストを決定するために呼び出されます。 MeetingEndEvent 会議終了時に呼び出されます。 プレイヤーはすでに追放されています。 MeetingPreEndEvent 会議終了時、追加追放者を含むプレイヤーが全員追放された後で呼び出されます。 このイベントで登録されたコルーチンを全クライアントが実行しきった後、MeetingEndEventが呼び出されます。 MeetingPreStartEvent 会議の開始の要求が受け入れられた時点(レポート/緊急招集の瞬間)で呼び出されます。 MeetingStartEventより先行して呼び出されます。 MeetingPreSyncEvent 会議終了時、追加追放者を決定するルーチンの直前で呼び出されます。 PlayerExiledEventが発火するより前に呼び出されますが、他クライアントのPlayerExiledEvent/>発火によって呼び出されたRPCは呼び出されている可能性があります。 MeetingStartEvent 緊急会議開始時に呼び出されます。 MeetingTieVoteHostEvent タイ投票が発生したときに発火します。 追加票を投じさせられます。追加票を投じた後の投票結果がタイ投票であっても、このイベントは発火しません。 MeetingVoteEndEvent 投票終了時に発火します。 PlayerVoteCastEvent 投票時に呼び出されます。 PlayerVoteCastLocalEvent 投票時に呼び出されます。 PlayerVoteDisclosedLocalEvent 投票が開示されたときに呼び出されます。 PlayerVotedLocalEvent 投票結果の開示時に呼び出されます。 このイベントによって、誰が自身に票を投じたか知ることができます。 ReportDeadBodyEvent 死体が通報されると発火するイベントです。"
  },
  "api/Virial.Events.Game.Minimap.AbstractMapOpenEvent.html": {
    "href": "api/Virial.Events.Game.Minimap.AbstractMapOpenEvent.html",
    "title": "Class AbstractMapOpenEvent | Virial",
    "summary": "Class AbstractMapOpenEvent Namespace Virial.Events.Game.Minimap 何らかのミニマップを開いた際に発火するイベントを表します。 public class AbstractMapOpenEvent : Event Inheritance object AbstractMapOpenEvent Implements Event Derived MapOpenAdminEvent MapOpenNormalEvent MapOpenSabotageEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Minimap.MapInstantiateEvent.html": {
    "href": "api/Virial.Events.Game.Minimap.MapInstantiateEvent.html",
    "title": "Class MapInstantiateEvent | Virial",
    "summary": "Class MapInstantiateEvent Namespace Virial.Events.Game.Minimap ミニマップが生成されたときに呼び出されます。 public class MapInstantiateEvent : Event Inheritance object MapInstantiateEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Minimap.MapOpenAdminEvent.html": {
    "href": "api/Virial.Events.Game.Minimap.MapOpenAdminEvent.html",
    "title": "Class MapOpenAdminEvent | Virial",
    "summary": "Class MapOpenAdminEvent Namespace Virial.Events.Game.Minimap アドミンマップを開いたときに呼び出されます。 public class MapOpenAdminEvent : AbstractMapOpenEvent, Event Inheritance object AbstractMapOpenEvent MapOpenAdminEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Minimap.MapOpenNormalEvent.html": {
    "href": "api/Virial.Events.Game.Minimap.MapOpenNormalEvent.html",
    "title": "Class MapOpenNormalEvent | Virial",
    "summary": "Class MapOpenNormalEvent Namespace Virial.Events.Game.Minimap 通常のマップを開いたときに呼び出されます。 public class MapOpenNormalEvent : AbstractMapOpenEvent, Event Inheritance object AbstractMapOpenEvent MapOpenNormalEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Minimap.MapOpenSabotageEvent.html": {
    "href": "api/Virial.Events.Game.Minimap.MapOpenSabotageEvent.html",
    "title": "Class MapOpenSabotageEvent | Virial",
    "summary": "Class MapOpenSabotageEvent Namespace Virial.Events.Game.Minimap サボタージュマップを開いたときに呼び出されます。 public class MapOpenSabotageEvent : AbstractMapOpenEvent, Event Inheritance object AbstractMapOpenEvent MapOpenSabotageEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.Minimap.html": {
    "href": "api/Virial.Events.Game.Minimap.html",
    "title": "Namespace Virial.Events.Game.Minimap | Virial",
    "summary": "Namespace Virial.Events.Game.Minimap Classes AbstractMapOpenEvent 何らかのミニマップを開いた際に発火するイベントを表します。 MapInstantiateEvent ミニマップが生成されたときに呼び出されます。 MapOpenAdminEvent アドミンマップを開いたときに呼び出されます。 MapOpenNormalEvent 通常のマップを開いたときに呼び出されます。 MapOpenSabotageEvent サボタージュマップを開いたときに呼び出されます。"
  },
  "api/Virial.Events.Game.TaskPhaseRestartEvent.html": {
    "href": "api/Virial.Events.Game.TaskPhaseRestartEvent.html",
    "title": "Class TaskPhaseRestartEvent | Virial",
    "summary": "Class TaskPhaseRestartEvent Namespace Virial.Events.Game タスクフェイズが再開するときに発火します。 public class TaskPhaseRestartEvent : TaskPhaseStartEvent, Event Inheritance object AbstractGameEvent TaskPhaseStartEvent TaskPhaseRestartEvent Implements Event Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.TaskPhaseStartEvent.html": {
    "href": "api/Virial.Events.Game.TaskPhaseStartEvent.html",
    "title": "Class TaskPhaseStartEvent | Virial",
    "summary": "Class TaskPhaseStartEvent Namespace Virial.Events.Game タスクフェイズが開始あるいは再開するときに発火します。 public class TaskPhaseStartEvent : AbstractGameEvent, Event Inheritance object AbstractGameEvent TaskPhaseStartEvent Implements Event Derived GameStartEvent TaskPhaseRestartEvent Inherited Members AbstractGameEvent.Game object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.UpdateEvent.html": {
    "href": "api/Virial.Events.Game.UpdateEvent.html",
    "title": "Class UpdateEvent | Virial",
    "summary": "Class UpdateEvent Namespace Virial.Events.Game 毎ティック発火します。 public class UpdateEvent : Event Inheritance object UpdateEvent Implements Event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Game.html": {
    "href": "api/Virial.Events.Game.html",
    "title": "Namespace Virial.Events.Game | Virial",
    "summary": "Namespace Virial.Events.Game Classes AbstractGameEvent ゲームに関するイベントを表します。 CameraUpdateEvent カメラが更新される際に呼び出されます。 カメラの色調を変更できます。 DeadBodyInstantiateEvent 死体が生成されるときに呼び出されます。 EndCriteriaMetEvent ゲーム終了が決定したときに呼び出されます。 ゲーム終了理由を書き換えられます。 GameEndEvent ゲーム終了時に発火します。 GameHudUpdateEvent ゲームのHUDを更新する際に発火します。 ここでプレイヤーの輪郭を変更すると、変更が画面に正しく反映されます。 GameHudUpdateFasterEvent このイベントの使用は推奨されません。 GameHudUpdateEventを使用し、EventPriority属性でより高い優先度を設定してください。 GameHudUpdateLaterEvent このイベントの使用は推奨されません。 GameHudUpdateEventを使用し、EventPriority属性でより低い優先度を設定してください。 GameLateUpdateEvent LateUpdateのタイミングで発火します。 GameStartEvent ゲーム開始時に発火します。 GameUpdateEvent ゲーム中に毎ティック発火します。 LightRangeUpdateEvent 視界の広さを更新する際に発火します。 TaskPhaseRestartEvent タスクフェイズが再開するときに発火します。 TaskPhaseStartEvent タスクフェイズが開始あるいは再開するときに発火します。 UpdateEvent 毎ティック発火します。"
  },
  "api/Virial.Events.ICancelableEvent.html": {
    "href": "api/Virial.Events.ICancelableEvent.html",
    "title": "Interface ICancelableEvent | Virial",
    "summary": "Interface ICancelableEvent Namespace Virial.Events public interface ICancelableEvent Properties IsCanceled bool IsCanceled { get; } Property Value bool"
  },
  "api/Virial.Events.Player.AbstractPlayerEvent.html": {
    "href": "api/Virial.Events.Player.AbstractPlayerEvent.html",
    "title": "Class AbstractPlayerEvent | Virial",
    "summary": "Class AbstractPlayerEvent Namespace Virial.Events.Player プレイヤーの関するイベントを表します。 IBindPlayerを実装する作用素では、OnlyMyPlayer属性を付すと自身のプレイヤ―に関するイベントに限って発火させられます。 public class AbstractPlayerEvent : Event Inheritance object AbstractPlayerEvent Implements Event Derived MeetingPreStartEvent PlayerVoteCastEvent PlayerVoteCastLocalEvent PlayerVoteDisclosedLocalEvent PlayerVotedLocalEvent PlayerAlphaUpdateEvent PlayerBeginMinigameByConsoleLocalEvent PlayerBlockWinEvent PlayerCanGuessPlayerLocalEvent PlayerCheckCanKillLocalEvent PlayerCheckKilledEvent PlayerCheckPlayFootSoundEvent PlayerCheckRoleInfoVisibilityLocalEvent PlayerCheckWinEvent PlayerDecorateNameEvent PlayerDieOrDisconnectEvent PlayerDoGameActionEvent PlayerFixVoteHostEvent PlayerGuardEvent PlayerKillPlayerEvent PlayerModifierRemoveEvent PlayerModifierSetEvent PlayerOutfitChangeEvent PlayerReviveEvent PlayerRoleSetEvent PlayerSabotageTaskAddLocalEvent PlayerTaskCompleteEvent PlayerTaskCompleteLocalEvent PlayerTaskRemoveLocalEvent PlayerTaskUpdateEvent PlayerTasksTrySetLocalEvent PlayerTryVanillaKillLocalEventAbstractPlayerEvent PlayerVentEnterEvent PlayerVentExitEvent ResetKillCooldownLocalEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Player このイベントに関連するプレイヤーです。 public Player Player { get; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerAlphaUpdateEvent.html": {
    "href": "api/Virial.Events.Player.PlayerAlphaUpdateEvent.html",
    "title": "Class PlayerAlphaUpdateEvent | Virial",
    "summary": "Class PlayerAlphaUpdateEvent Namespace Virial.Events.Player プレイヤーの透明度が更新されるときに発火します。 public class PlayerAlphaUpdateEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerAlphaUpdateEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Alpha public float Alpha { get; } Property Value float AlphaIgnoresWall public float AlphaIgnoresWall { get; } Property Value float"
  },
  "api/Virial.Events.Player.PlayerBeginMinigameByConsoleLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerBeginMinigameByConsoleLocalEvent.html",
    "title": "Class PlayerBeginMinigameByConsoleLocalEvent | Virial",
    "summary": "Class PlayerBeginMinigameByConsoleLocalEvent Namespace Virial.Events.Player プレイヤーがミニゲームコンソールを使用して開くときに呼び出されます。 public class PlayerBeginMinigameByConsoleLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerBeginMinigameByConsoleLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks 自身のプレイヤーの操作でのみ発火します。"
  },
  "api/Virial.Events.Player.PlayerBlockWinEvent.html": {
    "href": "api/Virial.Events.Player.PlayerBlockWinEvent.html",
    "title": "Class PlayerBlockWinEvent | Virial",
    "summary": "Class PlayerBlockWinEvent Namespace Virial.Events.Player public class PlayerBlockWinEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerBlockWinEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GameEnd public GameEnd GameEnd { get; } Property Value GameEnd IsBlocked public bool IsBlocked { get; set; } Property Value bool IsWin public bool IsWin { get; } Property Value bool LastWinners public BitMask<Player> LastWinners { get; } Property Value BitMask<Player> WinnersMask public BitMask<Player> WinnersMask { get; } Property Value BitMask<Player> Methods SetBlockedIf(bool) public void SetBlockedIf(bool blocked) Parameters blocked bool"
  },
  "api/Virial.Events.Player.PlayerCanGuessPlayerLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerCanGuessPlayerLocalEvent.html",
    "title": "Class PlayerCanGuessPlayerLocalEvent | Virial",
    "summary": "Class PlayerCanGuessPlayerLocalEvent Namespace Virial.Events.Player public class PlayerCanGuessPlayerLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerCanGuessPlayerLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerCanGuessPlayerLocalEvent(Player, Player, bool) public PlayerCanGuessPlayerLocalEvent(Player guesser, Player target, bool canGuess = true) Parameters guesser Player target Player canGuess bool Properties CanGuess public bool CanGuess { get; set; } Property Value bool Guesser public Player Guesser { get; } Property Value Player Target public Player Target { get; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerCheckCanKillLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerCheckCanKillLocalEvent.html",
    "title": "Class PlayerCheckCanKillLocalEvent | Virial",
    "summary": "Class PlayerCheckCanKillLocalEvent Namespace Virial.Events.Player キルできる相手かどうか調べます。 public class PlayerCheckCanKillLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerCheckCanKillLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerCheckCanKillLocalEvent(Player, Player) public PlayerCheckCanKillLocalEvent(Player player, Player target) Parameters player Player target Player Properties CanKill public bool CanKill { get; } Property Value bool Target public Player Target { get; } Property Value Player Methods SetAsCanKillForcedly() 基本的な規則を無視してキルできる相手に設定します。 public void SetAsCanKillForcedly() SetAsCannotKillBasically() 基本的にキルできない相手に設定します。 public void SetAsCannotKillBasically() SetAsCannotKillForcedly() 他の規則を無視してキルできない相手に設定します。 public void SetAsCannotKillForcedly()"
  },
  "api/Virial.Events.Player.PlayerCheckKilledEvent.html": {
    "href": "api/Virial.Events.Player.PlayerCheckKilledEvent.html",
    "title": "Class PlayerCheckKilledEvent | Virial",
    "summary": "Class PlayerCheckKilledEvent Namespace Virial.Events.Player このイベントはキラーのクライアント上でのみ発火します。 計算のために必要な値はあらかじめ共有しておく必要があり、値の更新がある場合は更新も共有する必要があります。 public class PlayerCheckKilledEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerCheckKilledEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EventDetail public CommunicableTextTag? EventDetail { get; } Property Value CommunicableTextTag IsMeetingKill public bool IsMeetingKill { get; } Property Value bool Killer public Player Killer { get; } Property Value Player PlayerState public CommunicableTextTag PlayerState { get; } Property Value CommunicableTextTag Result public KillResult Result { get; set; } Property Value KillResult"
  },
  "api/Virial.Events.Player.PlayerCheckPlayFootSoundEvent.html": {
    "href": "api/Virial.Events.Player.PlayerCheckPlayFootSoundEvent.html",
    "title": "Class PlayerCheckPlayFootSoundEvent | Virial",
    "summary": "Class PlayerCheckPlayFootSoundEvent Namespace Virial.Events.Player 足跡を再生しようとするときに発火します。足跡の再生を拒否できます。 public class PlayerCheckPlayFootSoundEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerCheckPlayFootSoundEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks v3.2.0で追加。 Properties PlayFootSound public bool PlayFootSound { get; set; } Property Value bool"
  },
  "api/Virial.Events.Player.PlayerCheckRoleInfoVisibilityLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerCheckRoleInfoVisibilityLocalEvent.html",
    "title": "Class PlayerCheckRoleInfoVisibilityLocalEvent | Virial",
    "summary": "Class PlayerCheckRoleInfoVisibilityLocalEvent Namespace Virial.Events.Player public class PlayerCheckRoleInfoVisibilityLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerCheckRoleInfoVisibilityLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerCheckRoleInfoVisibilityLocalEvent(Player) public PlayerCheckRoleInfoVisibilityLocalEvent(Player player) Parameters player Player Properties CanSeeAll public bool CanSeeAll { get; set; } Property Value bool CanSeeRole public bool CanSeeRole { get; set; } Property Value bool CanSeeTask public bool CanSeeTask { get; set; } Property Value bool"
  },
  "api/Virial.Events.Player.PlayerCheckWinEvent.html": {
    "href": "api/Virial.Events.Player.PlayerCheckWinEvent.html",
    "title": "Class PlayerCheckWinEvent | Virial",
    "summary": "Class PlayerCheckWinEvent Namespace Virial.Events.Player プレイヤーが勝利しているかどうか判定します。 このイベントはホストでのみ実行されます。Localを指定すると意図せぬ挙動をする恐れがあります。 public class PlayerCheckWinEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerCheckWinEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GameEnd public GameEnd GameEnd { get; } Property Value GameEnd IsWin public bool IsWin { get; set; } Property Value bool LastWinners public BitMask<Player> LastWinners { get; } Property Value BitMask<Player> Methods SetWinIf(bool) public void SetWinIf(bool win) Parameters win bool"
  },
  "api/Virial.Events.Player.PlayerDecorateNameEvent.html": {
    "href": "api/Virial.Events.Player.PlayerDecorateNameEvent.html",
    "title": "Class PlayerDecorateNameEvent | Virial",
    "summary": "Class PlayerDecorateNameEvent Namespace Virial.Events.Player public class PlayerDecorateNameEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerDecorateNameEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Color public Color? Color { get; set; } Property Value Color? Name public string Name { get; set; } Property Value string"
  },
  "api/Virial.Events.Player.PlayerDieEvent.html": {
    "href": "api/Virial.Events.Player.PlayerDieEvent.html",
    "title": "Class PlayerDieEvent | Virial",
    "summary": "Class PlayerDieEvent Namespace Virial.Events.Player public class PlayerDieEvent : PlayerDieOrDisconnectEvent, Event Inheritance object AbstractPlayerEvent PlayerDieOrDisconnectEvent PlayerDieEvent Implements Event Derived PlayerExiledEvent PlayerExtraExiledEvent PlayerMurderedEvent Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerDieOrDisconnectEvent.html": {
    "href": "api/Virial.Events.Player.PlayerDieOrDisconnectEvent.html",
    "title": "Class PlayerDieOrDisconnectEvent | Virial",
    "summary": "Class PlayerDieOrDisconnectEvent Namespace Virial.Events.Player public class PlayerDieOrDisconnectEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerDieOrDisconnectEvent Implements Event Derived PlayerDieEvent PlayerDisconnectEvent Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerDisconnectEvent.html": {
    "href": "api/Virial.Events.Player.PlayerDisconnectEvent.html",
    "title": "Class PlayerDisconnectEvent | Virial",
    "summary": "Class PlayerDisconnectEvent Namespace Virial.Events.Player プレイヤーが切断したときに呼び出されます。 public class PlayerDisconnectEvent : PlayerDieOrDisconnectEvent, Event Inheritance object AbstractPlayerEvent PlayerDieOrDisconnectEvent PlayerDisconnectEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerDoGameActionEvent.html": {
    "href": "api/Virial.Events.Player.PlayerDoGameActionEvent.html",
    "title": "Class PlayerDoGameActionEvent | Virial",
    "summary": "Class PlayerDoGameActionEvent Namespace Virial.Events.Player public class PlayerDoGameActionEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerDoGameActionEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerDoGameActionEvent(Player, GameActionType, Vector2) public PlayerDoGameActionEvent(Player player, GameActionType actionType, Vector2 position) Parameters player Player actionType GameActionType position Vector2 Properties ActionType public GameActionType ActionType { get; } Property Value GameActionType Position public Vector2 Position { get; } Property Value Vector2"
  },
  "api/Virial.Events.Player.PlayerExiledEvent.html": {
    "href": "api/Virial.Events.Player.PlayerExiledEvent.html",
    "title": "Class PlayerExiledEvent | Virial",
    "summary": "Class PlayerExiledEvent Namespace Virial.Events.Player プレイヤーの追放時に呼び出されます。 このとき、追加追放者を設定することができます。 public class PlayerExiledEvent : PlayerDieEvent, Event Inheritance object AbstractPlayerEvent PlayerDieOrDisconnectEvent PlayerDieEvent PlayerExiledEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerExtraExiledEvent.html": {
    "href": "api/Virial.Events.Player.PlayerExtraExiledEvent.html",
    "title": "Class PlayerExtraExiledEvent | Virial",
    "summary": "Class PlayerExtraExiledEvent Namespace Virial.Events.Player public class PlayerExtraExiledEvent : PlayerDieEvent, Event Inheritance object AbstractPlayerEvent PlayerDieOrDisconnectEvent PlayerDieEvent PlayerExtraExiledEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dead public Player Dead { get; } Property Value Player Murderer public Player? Murderer { get; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerFixVoteHostEvent.html": {
    "href": "api/Virial.Events.Player.PlayerFixVoteHostEvent.html",
    "title": "Class PlayerFixVoteHostEvent | Virial",
    "summary": "Class PlayerFixVoteHostEvent Namespace Virial.Events.Player public class PlayerFixVoteHostEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerFixVoteHostEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DidVote public bool DidVote { get; set; } Property Value bool Vote public int Vote { get; set; } Property Value int VoteTo public Player? VoteTo { get; set; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerGuardEvent.html": {
    "href": "api/Virial.Events.Player.PlayerGuardEvent.html",
    "title": "Class PlayerGuardEvent | Virial",
    "summary": "Class PlayerGuardEvent Namespace Virial.Events.Player public class PlayerGuardEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerGuardEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Murderer public Player Murderer { get; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerKillPlayerEvent.html": {
    "href": "api/Virial.Events.Player.PlayerKillPlayerEvent.html",
    "title": "Class PlayerKillPlayerEvent | Virial",
    "summary": "Class PlayerKillPlayerEvent Namespace Virial.Events.Player public class PlayerKillPlayerEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerKillPlayerEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dead public Player Dead { get; } Property Value Player Murderer public Player Murderer { get; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerModifierRemoveEvent.html": {
    "href": "api/Virial.Events.Player.PlayerModifierRemoveEvent.html",
    "title": "Class PlayerModifierRemoveEvent | Virial",
    "summary": "Class PlayerModifierRemoveEvent Namespace Virial.Events.Player public class PlayerModifierRemoveEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerModifierRemoveEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Modifier public RuntimeModifier Modifier { get; } Property Value RuntimeModifier"
  },
  "api/Virial.Events.Player.PlayerModifierSetEvent.html": {
    "href": "api/Virial.Events.Player.PlayerModifierSetEvent.html",
    "title": "Class PlayerModifierSetEvent | Virial",
    "summary": "Class PlayerModifierSetEvent Namespace Virial.Events.Player モディファイアが追加された直後に呼び出されます。 public class PlayerModifierSetEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerModifierSetEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Modifier public RuntimeModifier Modifier { get; } Property Value RuntimeModifier"
  },
  "api/Virial.Events.Player.PlayerMurderedEvent.html": {
    "href": "api/Virial.Events.Player.PlayerMurderedEvent.html",
    "title": "Class PlayerMurderedEvent | Virial",
    "summary": "Class PlayerMurderedEvent Namespace Virial.Events.Player public class PlayerMurderedEvent : PlayerDieEvent, Event Inheritance object AbstractPlayerEvent PlayerDieOrDisconnectEvent PlayerDieEvent PlayerMurderedEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dead public Player Dead { get; } Property Value Player Murderer public Player Murderer { get; } Property Value Player WithBlink public bool WithBlink { get; } Property Value bool"
  },
  "api/Virial.Events.Player.PlayerOutfitChangeEvent.html": {
    "href": "api/Virial.Events.Player.PlayerOutfitChangeEvent.html",
    "title": "Class PlayerOutfitChangeEvent | Virial",
    "summary": "Class PlayerOutfitChangeEvent Namespace Virial.Events.Player public class PlayerOutfitChangeEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerOutfitChangeEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerOutfitChangeEvent(Player, OutfitCandidate) public PlayerOutfitChangeEvent(Player player, OutfitCandidate outfit) Parameters player Player outfit OutfitCandidate Properties Outfit public OutfitCandidate Outfit { get; } Property Value OutfitCandidate"
  },
  "api/Virial.Events.Player.PlayerReviveEvent.html": {
    "href": "api/Virial.Events.Player.PlayerReviveEvent.html",
    "title": "Class PlayerReviveEvent | Virial",
    "summary": "Class PlayerReviveEvent Namespace Virial.Events.Player public class PlayerReviveEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerReviveEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Healer public Player? Healer { get; } Property Value Player Revived public Player Revived { get; } Property Value Player"
  },
  "api/Virial.Events.Player.PlayerRoleSetEvent.html": {
    "href": "api/Virial.Events.Player.PlayerRoleSetEvent.html",
    "title": "Class PlayerRoleSetEvent | Virial",
    "summary": "Class PlayerRoleSetEvent Namespace Virial.Events.Player public class PlayerRoleSetEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerRoleSetEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Role public RuntimeRole Role { get; } Property Value RuntimeRole"
  },
  "api/Virial.Events.Player.PlayerSabotageTaskAddLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerSabotageTaskAddLocalEvent.html",
    "title": "Class PlayerSabotageTaskAddLocalEvent | Virial",
    "summary": "Class PlayerSabotageTaskAddLocalEvent Namespace Virial.Events.Player public class PlayerSabotageTaskAddLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerSabotageTaskAddLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerTaskCompleteEvent.html": {
    "href": "api/Virial.Events.Player.PlayerTaskCompleteEvent.html",
    "title": "Class PlayerTaskCompleteEvent | Virial",
    "summary": "Class PlayerTaskCompleteEvent Namespace Virial.Events.Player public class PlayerTaskCompleteEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerTaskCompleteEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerTaskCompleteLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerTaskCompleteLocalEvent.html",
    "title": "Class PlayerTaskCompleteLocalEvent | Virial",
    "summary": "Class PlayerTaskCompleteLocalEvent Namespace Virial.Events.Player public class PlayerTaskCompleteLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerTaskCompleteLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerTaskRemoveLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerTaskRemoveLocalEvent.html",
    "title": "Class PlayerTaskRemoveLocalEvent | Virial",
    "summary": "Class PlayerTaskRemoveLocalEvent Namespace Virial.Events.Player public class PlayerTaskRemoveLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerTaskRemoveLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerTaskUpdateEvent.html": {
    "href": "api/Virial.Events.Player.PlayerTaskUpdateEvent.html",
    "title": "Class PlayerTaskUpdateEvent | Virial",
    "summary": "Class PlayerTaskUpdateEvent Namespace Virial.Events.Player public class PlayerTaskUpdateEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerTaskUpdateEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerTasksTrySetLocalEvent.Task.html": {
    "href": "api/Virial.Events.Player.PlayerTasksTrySetLocalEvent.Task.html",
    "title": "Class PlayerTasksTrySetLocalEvent.Task | Virial",
    "summary": "Class PlayerTasksTrySetLocalEvent.Task Namespace Virial.Events.Player public class PlayerTasksTrySetLocalEvent.Task Inheritance object PlayerTasksTrySetLocalEvent.Task Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerTasksTrySetLocalEvent.html": {
    "href": "api/Virial.Events.Player.PlayerTasksTrySetLocalEvent.html",
    "title": "Class PlayerTasksTrySetLocalEvent | Virial",
    "summary": "Class PlayerTasksTrySetLocalEvent Namespace Virial.Events.Player public class PlayerTasksTrySetLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerTasksTrySetLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ExtraQuota public int ExtraQuota { get; } Property Value int Tasks 追加するタスクです。 このリストは自由に編集することができます。 public List<PlayerTasksTrySetLocalEvent.Task> Tasks { get; } Property Value List<PlayerTasksTrySetLocalEvent.Task> Methods AddExtraQuota(int) public int AddExtraQuota(int extraQuota) Parameters extraQuota int Returns int"
  },
  "api/Virial.Events.Player.PlayerTryVanillaKillLocalEventAbstractPlayerEvent.html": {
    "href": "api/Virial.Events.Player.PlayerTryVanillaKillLocalEventAbstractPlayerEvent.html",
    "title": "Class PlayerTryVanillaKillLocalEventAbstractPlayerEvent | Virial",
    "summary": "Class PlayerTryVanillaKillLocalEventAbstractPlayerEvent Namespace Virial.Events.Player public class PlayerTryVanillaKillLocalEventAbstractPlayerEvent : AbstractPlayerEvent, Event, ICancelableEvent Inheritance object AbstractPlayerEvent PlayerTryVanillaKillLocalEventAbstractPlayerEvent Implements Event ICancelableEvent Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsCanceled public bool IsCanceled { get; } Property Value bool ResetCooldown public bool ResetCooldown { get; } Property Value bool Target public Player Target { get; } Property Value Player Methods Cancel(bool) public void Cancel(bool resetCooldown = false) Parameters resetCooldown bool"
  },
  "api/Virial.Events.Player.PlayerVentEnterEvent.html": {
    "href": "api/Virial.Events.Player.PlayerVentEnterEvent.html",
    "title": "Class PlayerVentEnterEvent | Virial",
    "summary": "Class PlayerVentEnterEvent Namespace Virial.Events.Player public class PlayerVentEnterEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerVentEnterEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.PlayerVentExitEvent.html": {
    "href": "api/Virial.Events.Player.PlayerVentExitEvent.html",
    "title": "Class PlayerVentExitEvent | Virial",
    "summary": "Class PlayerVentExitEvent Namespace Virial.Events.Player public class PlayerVentExitEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent PlayerVentExitEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Virial.Events.Player.ResetKillCooldownLocalEvent.html": {
    "href": "api/Virial.Events.Player.ResetKillCooldownLocalEvent.html",
    "title": "Class ResetKillCooldownLocalEvent | Virial",
    "summary": "Class ResetKillCooldownLocalEvent Namespace Virial.Events.Player public class ResetKillCooldownLocalEvent : AbstractPlayerEvent, Event Inheritance object AbstractPlayerEvent ResetKillCooldownLocalEvent Implements Event Inherited Members AbstractPlayerEvent.Player object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FixedCooldown public float? FixedCooldown { get; } Property Value float? UseDefaultCooldown public bool UseDefaultCooldown { get; } Property Value bool Methods SetFixedCooldown(float) public void SetFixedCooldown(float cooldown) Parameters cooldown float"
  },
  "api/Virial.Events.Player.html": {
    "href": "api/Virial.Events.Player.html",
    "title": "Namespace Virial.Events.Player | Virial",
    "summary": "Namespace Virial.Events.Player Classes AbstractPlayerEvent プレイヤーの関するイベントを表します。 IBindPlayerを実装する作用素では、OnlyMyPlayer属性を付すと自身のプレイヤ―に関するイベントに限って発火させられます。 PlayerAlphaUpdateEvent プレイヤーの透明度が更新されるときに発火します。 PlayerBeginMinigameByConsoleLocalEvent プレイヤーがミニゲームコンソールを使用して開くときに呼び出されます。 PlayerBlockWinEvent PlayerCanGuessPlayerLocalEvent PlayerCheckCanKillLocalEvent キルできる相手かどうか調べます。 PlayerCheckKilledEvent このイベントはキラーのクライアント上でのみ発火します。 計算のために必要な値はあらかじめ共有しておく必要があり、値の更新がある場合は更新も共有する必要があります。 PlayerCheckPlayFootSoundEvent 足跡を再生しようとするときに発火します。足跡の再生を拒否できます。 PlayerCheckRoleInfoVisibilityLocalEvent PlayerCheckWinEvent プレイヤーが勝利しているかどうか判定します。 このイベントはホストでのみ実行されます。Localを指定すると意図せぬ挙動をする恐れがあります。 PlayerDecorateNameEvent PlayerDieEvent PlayerDieOrDisconnectEvent PlayerDisconnectEvent プレイヤーが切断したときに呼び出されます。 PlayerDoGameActionEvent PlayerExiledEvent プレイヤーの追放時に呼び出されます。 このとき、追加追放者を設定することができます。 PlayerExtraExiledEvent PlayerFixVoteHostEvent PlayerGuardEvent PlayerKillPlayerEvent PlayerModifierRemoveEvent PlayerModifierSetEvent モディファイアが追加された直後に呼び出されます。 PlayerMurderedEvent PlayerOutfitChangeEvent PlayerReviveEvent PlayerRoleSetEvent PlayerSabotageTaskAddLocalEvent PlayerTaskCompleteEvent PlayerTaskCompleteLocalEvent PlayerTaskRemoveLocalEvent PlayerTaskUpdateEvent PlayerTasksTrySetLocalEvent PlayerTasksTrySetLocalEvent.Task PlayerTryVanillaKillLocalEventAbstractPlayerEvent PlayerVentEnterEvent PlayerVentExitEvent ResetKillCooldownLocalEvent"
  },
  "api/Virial.Events.html": {
    "href": "api/Virial.Events.html",
    "title": "Namespace Virial.Events | Virial",
    "summary": "Namespace Virial.Events Interfaces Event ICancelableEvent"
  },
  "api/Virial.FlexibleLifespan.html": {
    "href": "api/Virial.FlexibleLifespan.html",
    "title": "Class FlexibleLifespan | Virial",
    "summary": "Class FlexibleLifespan Namespace Virial 注入された寿命オブジェクトの寿命が尽きるか、Release操作によってキルできます。 public class FlexibleLifespan : DependentLifespan, INestedLifespan, ILifespan, IReleasable Inheritance object DependentLifespan FlexibleLifespan Implements INestedLifespan ILifespan IReleasable Inherited Members DependentLifespan.Bind(ILifespan) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsDeadObject 寿命の尽きたオブジェクトはtrueを返します。 public bool IsDeadObject { get; } Property Value bool Methods Release() public void Release()"
  },
  "api/Virial.FunctionalLifespan.html": {
    "href": "api/Virial.FunctionalLifespan.html",
    "title": "Class FunctionalLifespan | Virial",
    "summary": "Class FunctionalLifespan Namespace Virial 関数によって定義される寿命付きオブジェクトです。 public class FunctionalLifespan : ILifespan Inheritance object FunctionalLifespan Implements ILifespan Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FunctionalLifespan(Func<bool>) 生存している間はtrueを返す関数から作られる寿命付きオブジェクトを生成します。 public FunctionalLifespan(Func<bool> predicate) Parameters predicate Func<bool> 生存している間はtrueを返す関数。 Properties IsDeadObject 一度寿命が尽きたオブジェクトは復活しません。 public bool IsDeadObject { get; } Property Value bool Methods GetTimeLifespan(float) 指定の時間だけ生存する寿命オブジェクトを生成します。 public static ILifespan GetTimeLifespan(float duration) Parameters duration float Returns ILifespan"
  },
  "api/Virial.Game.AbstractPlayerAbility.html": {
    "href": "api/Virial.Game.AbstractPlayerAbility.html",
    "title": "Class AbstractPlayerAbility | Virial",
    "summary": "Class AbstractPlayerAbility Namespace Virial.Game public abstract class AbstractPlayerAbility : DependentLifespan, INestedLifespan, IPlayerAbility, IBindPlayer, IGameOperator, ILifespan Inheritance object DependentLifespan AbstractPlayerAbility Implements INestedLifespan IPlayerAbility IBindPlayer IGameOperator ILifespan Inherited Members DependentLifespan.IsDeadObject DependentLifespan.Bind(ILifespan) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Constructors AbstractPlayerAbility(Player) public AbstractPlayerAbility(Player player) Parameters player Player Properties AmOwner 自身が所有者であることを表します。 public bool AmOwner { get; } Property Value bool MyPlayer このEntityを所有するプレイヤーを表します。 所有者は途中で変更しないでください。 public Player MyPlayer { get; } Property Value Player"
  },
  "api/Virial.Game.AbstractPlayerUsurpableAbility.html": {
    "href": "api/Virial.Game.AbstractPlayerUsurpableAbility.html",
    "title": "Class AbstractPlayerUsurpableAbility | Virial",
    "summary": "Class AbstractPlayerUsurpableAbility Namespace Virial.Game public abstract class AbstractPlayerUsurpableAbility : DependentLifespan, INestedLifespan, IUsurpableAbility, IPlayerAbility, IBindPlayer, IGameOperator, ILifespan Inheritance object DependentLifespan AbstractPlayerUsurpableAbility Implements INestedLifespan IUsurpableAbility IPlayerAbility IBindPlayer IGameOperator ILifespan Inherited Members DependentLifespan.IsDeadObject DependentLifespan.Bind(ILifespan) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Constructors AbstractPlayerUsurpableAbility(Player, bool) public AbstractPlayerUsurpableAbility(Player player, bool isUsurped) Parameters player Player isUsurped bool Properties AmOwner 自身が所有者であることを表します。 public bool AmOwner { get; } Property Value bool IsUsurped public bool IsUsurped { get; } Property Value bool MyPlayer このEntityを所有するプレイヤーを表します。 所有者は途中で変更しないでください。 public Player MyPlayer { get; } Property Value Player Methods Usurp() public bool Usurp() Returns bool"
  },
  "api/Virial.Game.ArchivedColor.html": {
    "href": "api/Virial.Game.ArchivedColor.html",
    "title": "Class ArchivedColor | Virial",
    "summary": "Class ArchivedColor Namespace Virial.Game public record ArchivedColor : IEquatable<ArchivedColor> Inheritance object ArchivedColor Implements IEquatable<ArchivedColor> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArchivedColor(Color, Color, Color) public ArchivedColor(Color MainColor, Color ShadowColor, Color VisorColor) Parameters MainColor Color ShadowColor Color VisorColor Color Properties MainColor public Color MainColor { get; init; } Property Value Color ShadowColor public Color ShadowColor { get; init; } Property Value Color VisorColor public Color VisorColor { get; init; } Property Value Color"
  },
  "api/Virial.Game.EndState.html": {
    "href": "api/Virial.Game.EndState.html",
    "title": "Class EndState | Virial",
    "summary": "Class EndState Namespace Virial.Game public class EndState Inheritance object EndState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EndState(BitMask<Player>, GameEnd, GameEndReason, GameEnd, GameEndReason, BitMask<ExtraWin>) public EndState(BitMask<Player> winners, GameEnd endCondition, GameEndReason reason, GameEnd originalEndCondition, GameEndReason originalReason, BitMask<ExtraWin> extraWins) Parameters winners BitMask<Player> endCondition GameEnd reason GameEndReason originalEndCondition GameEnd originalReason GameEndReason extraWins BitMask<ExtraWin> Properties EndCondition public GameEnd EndCondition { get; } Property Value GameEnd EndReason public GameEndReason EndReason { get; } Property Value GameEndReason ExtraWins public BitMask<ExtraWin> ExtraWins { get; } Property Value BitMask<ExtraWin> OriginalEndCondition public GameEnd OriginalEndCondition { get; } Property Value GameEnd OriginalEndReason public GameEndReason OriginalEndReason { get; } Property Value GameEndReason Winners public BitMask<Player> Winners { get; } Property Value BitMask<Player>"
  },
  "api/Virial.Game.ExtraWin.html": {
    "href": "api/Virial.Game.ExtraWin.html",
    "title": "Class ExtraWin | Virial",
    "summary": "Class ExtraWin Namespace Virial.Game public sealed class ExtraWin Inheritance object ExtraWin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties DisplayText public TextComponent DisplayText { get; } Property Value TextComponent Methods TryGet(byte, out ExtraWin) public static bool TryGet(byte id, out ExtraWin extraWin) Parameters id byte extraWin ExtraWin Returns bool"
  },
  "api/Virial.Game.ExtraWinCheckPhase.html": {
    "href": "api/Virial.Game.ExtraWinCheckPhase.html",
    "title": "Enum ExtraWinCheckPhase | Virial",
    "summary": "Enum ExtraWinCheckPhase Namespace Virial.Game public enum ExtraWinCheckPhase Fields DancerPhase = 0 GrudgePhase = 0 LoversPhase = 2 MadmatePhase = 0 ObsessionPhase = 1 Phase0 = 0 Phase1 = 1 Phase2 = 2 Phase3 = 3 PhaseMax = 4 ScarletPhase = 1 TrilemmaPhase = 2"
  },
  "api/Virial.Game.Game.html": {
    "href": "api/Virial.Game.Game.html",
    "title": "Interface Game | Virial",
    "summary": "Interface Game Namespace Virial.Game 現在プレイ中のゲームを表します。 public interface Game : IModuleContainer, ILifespan, IArchivedGame Inherited Members IModuleContainer.GetModule<T>() ILifespan.IsDeadObject ILifespan.IsAliveObject IArchivedGame.ArchivedEvents IArchivedGame.GetColor(byte) IArchivedGame.MapId Properties KillButtonLikeHandler KillButtonLikeHandler KillButtonLikeHandler { get; } Property Value KillButtonLikeHandler LocalPlayer 自身が操作するプレイヤー。 即ちこのプレイヤーのAmOwnerがtrueであることを意味します。 Player LocalPlayer { get; } Property Value Player Methods GetAllOrderedPlayers() IReadOnlyList<Player> GetAllOrderedPlayers() Returns IReadOnlyList<Player> GetAllPlayers() ゲーム中の全プレイヤーを取得します。 IEnumerable<Player> GetAllPlayers() Returns IEnumerable<Player> ゲーム中の全プレイヤー GetPlayer(byte) プレイヤーを取得します。 Player? GetPlayer(byte playerId) Parameters playerId byte プレイヤーのID Returns Player IDが一致するプレイヤー 存在しない場合はnull RequestGameEnd(GameEnd, BitMask<Player>) ゲーム終了のトリガーをホストに依頼します。 終了理由はSpecialとして扱われます。 void RequestGameEnd(GameEnd gameEnd, BitMask<Player> additionalWinners) Parameters gameEnd GameEnd additionalWinners BitMask<Player> TriggerGameEnd(GameEnd, GameEndReason, EditableBitMask<Player>?) ゲーム終了をトリガーします。 この操作はホストのみ有効です。 void TriggerGameEnd(GameEnd gameEnd, GameEndReason reason, EditableBitMask<Player>? additionalWinners = null) Parameters gameEnd GameEnd reason GameEndReason additionalWinners EditableBitMask<Player>"
  },
  "api/Virial.Game.GameActionType.html": {
    "href": "api/Virial.Game.GameActionType.html",
    "title": "Class GameActionType | Virial",
    "summary": "Class GameActionType Namespace Virial.Game public class GameActionType Inheritance object GameActionType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameActionType(string, DefinedAssignable?, bool, bool, bool, bool) public GameActionType(string id, DefinedAssignable? relatedRole, bool isPlacementAction = false, bool isEquippingAction = false, bool isPhysicalAction = false, bool isCleanDeadBodyAction = false) Parameters id string relatedRole DefinedAssignable isPlacementAction bool isEquippingAction bool isPhysicalAction bool isCleanDeadBodyAction bool Properties Id public string Id { get; } Property Value string IsCleanDeadBodyAction public bool IsCleanDeadBodyAction { get; } Property Value bool IsEquippingAction public bool IsEquippingAction { get; } Property Value bool IsFrequentAction public bool IsFrequentAction { get; } Property Value bool IsPhysicalAction public bool IsPhysicalAction { get; } Property Value bool IsPlacementAction public bool IsPlacementAction { get; } Property Value bool RelatedRole public DefinedAssignable? RelatedRole { get; } Property Value DefinedAssignable Methods TryGetActionType(string, out GameActionType) public static bool TryGetActionType(string id, out GameActionType gameActionType) Parameters id string gameActionType GameActionType Returns bool"
  },
  "api/Virial.Game.GameActionTypes.html": {
    "href": "api/Virial.Game.GameActionTypes.html",
    "title": "Class GameActionTypes | Virial",
    "summary": "Class GameActionTypes Namespace Virial.Game public static class GameActionTypes Inheritance object GameActionTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BerserkerTransformingAction public static GameActionType BerserkerTransformingAction { get; } Property Value GameActionType BuskerRevivingAction public static GameActionType BuskerRevivingAction { get; } Property Value GameActionType CannonMarkPlacementAction public static GameActionType CannonMarkPlacementAction { get; } Property Value GameActionType CleanCorpseAction public static GameActionType CleanCorpseAction { get; } Property Value GameActionType ClogInvokingGhostAction public static GameActionType ClogInvokingGhostAction { get; } Property Value GameActionType DecoyPlacementAction public static GameActionType DecoyPlacementAction { get; } Property Value GameActionType DrillAction public static GameActionType DrillAction { get; } Property Value GameActionType EatCorpseAction public static GameActionType EatCorpseAction { get; } Property Value GameActionType EvilTrapPlacementAction public static GameActionType EvilTrapPlacementAction { get; } Property Value GameActionType HadarAppearingAction public static GameActionType HadarAppearingAction { get; } Property Value GameActionType HadarDisappearingAction public static GameActionType HadarDisappearingAction { get; } Property Value GameActionType HallucinationAction public static GameActionType HallucinationAction { get; } Property Value GameActionType HookshotAction public static GameActionType HookshotAction { get; } Property Value GameActionType LanternPlacementAction public static GameActionType LanternPlacementAction { get; } Property Value GameActionType NecromancerRevivingAction public static GameActionType NecromancerRevivingAction { get; } Property Value GameActionType NiceTrapPlacementAction public static GameActionType NiceTrapPlacementAction { get; } Property Value GameActionType NightmarePlacementAction public static GameActionType NightmarePlacementAction { get; } Property Value GameActionType RaiderEquippingAction public static GameActionType RaiderEquippingAction { get; } Property Value GameActionType RaiderThrowingAction public static GameActionType RaiderThrowingAction { get; } Property Value GameActionType SniperEquippingAction public static GameActionType SniperEquippingAction { get; } Property Value GameActionType ThuriferActivateAction public static GameActionType ThuriferActivateAction { get; } Property Value GameActionType ThuriferImputeAction public static GameActionType ThuriferImputeAction { get; } Property Value GameActionType UbiquitousInvokeDroneAction public static GameActionType UbiquitousInvokeDroneAction { get; } Property Value GameActionType WhammyPlacementAction public static GameActionType WhammyPlacementAction { get; } Property Value GameActionType"
  },
  "api/Virial.Game.GameEnd.html": {
    "href": "api/Virial.Game.GameEnd.html",
    "title": "Class GameEnd | Virial",
    "summary": "Class GameEnd Namespace Virial.Game ゲーム終了を表します。 CreateTeam(string, Color, TeamRevealType) public sealed class GameEnd Inheritance object GameEnd Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties AllowWin public bool AllowWin { get; } Property Value bool DisplayText public TextComponent DisplayText { get; } Property Value TextComponent Priority public int Priority { get; } Property Value int Methods TryGet(byte, out GameEnd) public static bool TryGet(byte id, out GameEnd gameEnd) Parameters id byte gameEnd GameEnd Returns bool"
  },
  "api/Virial.Game.GameEndReason.html": {
    "href": "api/Virial.Game.GameEndReason.html",
    "title": "Enum GameEndReason | Virial",
    "summary": "Enum GameEndReason Namespace Virial.Game public enum GameEndReason Fields Sabotage = 4 サボタージュによるゲーム終了です。 Situation = 1 人数都合によるゲーム終了です。 ゲーム終了が無視されるケースがあるため、終了条件を満たしているならば常時ゲーム終了を要求する必要があります。 Special = 3 特殊な条件によるゲーム終了です。 SpecialSituation = 2 人数都合と同様、追放中はゲーム終了を要求しないシチュエーション都合のゲーム終了です。 ゲーム終了が無視されるケースがあるため、終了条件を満たしているならば常時ゲーム終了を要求する必要があります。 Task = 0 タスク完遂によるゲーム終了です。"
  },
  "api/Virial.Game.GameEntityExtension.html": {
    "href": "api/Virial.Game.GameEntityExtension.html",
    "title": "Class GameEntityExtension | Virial",
    "summary": "Class GameEntityExtension Namespace Virial.Game public static class GameEntityExtension Inheritance object GameEntityExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Register<Entity>(Entity, ILifespan) Entityを現在のゲームに追加します。 public static Entity Register<Entity>(this Entity gameEntity, ILifespan lifespan) where Entity : IGameOperator Parameters gameEntity Entity lifespan ILifespan Returns Entity Type Parameters Entity"
  },
  "api/Virial.Game.GameModeDefinition.html": {
    "href": "api/Virial.Game.GameModeDefinition.html",
    "title": "Class GameModeDefinition | Virial",
    "summary": "Class GameModeDefinition Namespace Virial.Game public abstract class GameModeDefinition : IBit32 Inheritance object GameModeDefinition Implements IBit32 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AsBit public abstract uint AsBit { get; } Property Value uint Operators implicit operator uint(GameModeDefinition) public static implicit operator uint(GameModeDefinition gamemode) Parameters gamemode GameModeDefinition Returns uint"
  },
  "api/Virial.Game.GameModes.html": {
    "href": "api/Virial.Game.GameModes.html",
    "title": "Class GameModes | Virial",
    "summary": "Class GameModes Namespace Virial.Game public static class GameModes Inheritance object GameModes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllGameModes public static IEnumerable<GameModeDefinition> AllGameModes { get; } Property Value IEnumerable<GameModeDefinition> FreePlay public static GameModeDefinition FreePlay { get; } Property Value GameModeDefinition Standard public static GameModeDefinition Standard { get; } Property Value GameModeDefinition Methods GetGameMode(int) public static GameModeDefinition GetGameMode(int id) Parameters id int Returns GameModeDefinition"
  },
  "api/Virial.Game.GameStatsCategory.html": {
    "href": "api/Virial.Game.GameStatsCategory.html",
    "title": "Enum GameStatsCategory | Virial",
    "summary": "Enum GameStatsCategory Namespace Virial.Game public enum GameStatsCategory Fields Death = 1 Game = 2 Kill = 0 Perks = 4 Roles = 3"
  },
  "api/Virial.Game.GameStatsEntry.html": {
    "href": "api/Virial.Game.GameStatsEntry.html",
    "title": "Interface GameStatsEntry | Virial",
    "summary": "Interface GameStatsEntry Namespace Virial.Game public interface GameStatsEntry Extension Methods NebulaAPI.Progress(GameStatsEntry, int) Properties Category GameStatsCategory Category { get; } Property Value GameStatsCategory DisplayName TextComponent DisplayName { get; } Property Value TextComponent Id string Id { get; } Property Value string Progress int Progress { get; } Property Value int RelatedAssignable DefinedAssignable? RelatedAssignable { get; } Property Value DefinedAssignable"
  },
  "api/Virial.Game.IArchivedEvent.html": {
    "href": "api/Virial.Game.IArchivedEvent.html",
    "title": "Interface IArchivedEvent | Virial",
    "summary": "Interface IArchivedEvent Namespace Virial.Game public interface IArchivedEvent Properties EventVariation IArchivedEventVariation EventVariation { get; } Property Value IArchivedEventVariation Position Tuple<byte, Vector2>[] Position { get; } Property Value Tuple<byte, Vector2>[] RelatedTag CommunicableTextTag? RelatedTag { get; } Property Value CommunicableTextTag SourceId byte? SourceId { get; } Property Value byte? TargetIdMask int TargetIdMask { get; } Property Value int Time float Time { get; } Property Value float"
  },
  "api/Virial.Game.IArchivedEventVariation.html": {
    "href": "api/Virial.Game.IArchivedEventVariation.html",
    "title": "Interface IArchivedEventVariation | Virial",
    "summary": "Interface IArchivedEventVariation Namespace Virial.Game public interface IArchivedEventVariation Properties CanCombine bool CanCombine { get; } Property Value bool EventIcon Image? EventIcon { get; } Property Value Image Id int Id { get; } Property Value int InteractionIcon Image? InteractionIcon { get; } Property Value Image ShowPlayerPosition bool ShowPlayerPosition { get; } Property Value bool"
  },
  "api/Virial.Game.IArchivedGame.html": {
    "href": "api/Virial.Game.IArchivedGame.html",
    "title": "Interface IArchivedGame | Virial",
    "summary": "Interface IArchivedGame Namespace Virial.Game public interface IArchivedGame Properties ArchivedEvents IArchivedEvent[] ArchivedEvents { get; } Property Value IArchivedEvent[] MapId byte MapId { get; } Property Value byte Methods GetAllPlayers() IEnumerable<IArchivedPlayer> GetAllPlayers() Returns IEnumerable<IArchivedPlayer> GetColor(byte) ArchivedColor GetColor(byte colorId) Parameters colorId byte Returns ArchivedColor GetPlayer(byte) IArchivedPlayer? GetPlayer(byte playerId) Parameters playerId byte Returns IArchivedPlayer"
  },
  "api/Virial.Game.IArchivedPlayer.html": {
    "href": "api/Virial.Game.IArchivedPlayer.html",
    "title": "Interface IArchivedPlayer | Virial",
    "summary": "Interface IArchivedPlayer Namespace Virial.Game public interface IArchivedPlayer Properties DefaultOutfit OutfitDefinition DefaultOutfit { get; } Property Value OutfitDefinition PlayerId byte PlayerId { get; } Property Value byte PlayerName string PlayerName { get; } Property Value string"
  },
  "api/Virial.Game.IBindPlayer.html": {
    "href": "api/Virial.Game.IBindPlayer.html",
    "title": "Interface IBindPlayer | Virial",
    "summary": "Interface IBindPlayer Namespace Virial.Game プレイヤーに紐づけられたEntityを表します。 public interface IBindPlayer Properties AmOwner 自身が所有者であることを表します。 bool AmOwner { get; } Property Value bool MyPlayer このEntityを所有するプレイヤーを表します。 所有者は途中で変更しないでください。 Player MyPlayer { get; } Property Value Player"
  },
  "api/Virial.Game.IGameModeFreePlay.html": {
    "href": "api/Virial.Game.IGameModeFreePlay.html",
    "title": "Interface IGameModeFreePlay | Virial",
    "summary": "Interface IGameModeFreePlay Namespace Virial.Game フリープレイモードのゲームで生成されるモジュールです。 public interface IGameModeFreePlay : IGameModeModule, IModuleContainer, IModule Inherited Members IGameModeModule.AllowSpecialGameEnd IModuleContainer.GetModule<T>()"
  },
  "api/Virial.Game.IGameModeModule.html": {
    "href": "api/Virial.Game.IGameModeModule.html",
    "title": "Interface IGameModeModule | Virial",
    "summary": "Interface IGameModeModule Namespace Virial.Game public interface IGameModeModule : IModuleContainer, IModule Inherited Members IModuleContainer.GetModule<T>() Properties AllowSpecialGameEnd bool AllowSpecialGameEnd { get; } Property Value bool"
  },
  "api/Virial.Game.IGameModeStandard.html": {
    "href": "api/Virial.Game.IGameModeStandard.html",
    "title": "Interface IGameModeStandard | Virial",
    "summary": "Interface IGameModeStandard Namespace Virial.Game 標準モードのゲームで生成されるモジュールです。 public interface IGameModeStandard : IGameModeModule, IModuleContainer, IModule Inherited Members IGameModeModule.AllowSpecialGameEnd IModuleContainer.GetModule<T>()"
  },
  "api/Virial.Game.IGameObject.html": {
    "href": "api/Virial.Game.IGameObject.html",
    "title": "Interface IGameObject | Virial",
    "summary": "Interface IGameObject Namespace Virial.Game public interface IGameObject Properties Position Vector2 Position { get; } Property Value Vector2"
  },
  "api/Virial.Game.IGameOperator.html": {
    "href": "api/Virial.Game.IGameOperator.html",
    "title": "Interface IGameOperator | Virial",
    "summary": "Interface IGameOperator Namespace Virial.Game ゲームに作用するEntityを表します。 public interface IGameOperator Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Methods OnReleased() 紐づけられたLifespanの寿命が尽きたときに呼び出されます。この後Entityは削除されます。 void OnReleased()"
  },
  "api/Virial.Game.IMapObjectSpawner.html": {
    "href": "api/Virial.Game.IMapObjectSpawner.html",
    "title": "Interface IMapObjectSpawner | Virial",
    "summary": "Interface IMapObjectSpawner Namespace Virial.Game public interface IMapObjectSpawner : IModule Methods Spawn(int, float, string, string?, MapObjectType, MapObjectCondition[]?) 指定の個数だけマップオブジェクトを生成する先を提案させます。 提案のたびに状態が変化します。不必要な提案をさせないでください。 Vector2[] Spawn(int num, float distance, string reason, string? objectConstructor, MapObjectType type, MapObjectCondition[]? conditions = null) Parameters num int distance float reason string objectConstructor string type MapObjectType conditions MapObjectCondition[] Returns Vector2[] Spawn(int, string) 同期のためのSpawnメソッド void Spawn(int id, string reason) Parameters id int reason string"
  },
  "api/Virial.Game.IPlayerAbility.html": {
    "href": "api/Virial.Game.IPlayerAbility.html",
    "title": "Interface IPlayerAbility | Virial",
    "summary": "Interface IPlayerAbility Namespace Virial.Game public interface IPlayerAbility : IBindPlayer, IGameOperator, ILifespan Inherited Members IBindPlayer.MyPlayer IBindPlayer.AmOwner IGameOperator.OnReleased() ILifespan.IsDeadObject ILifespan.IsAliveObject Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Properties AbilityArguments int[] AbilityArguments { get; } Property Value int[] BlockCallingEmergencyMeeting bool BlockCallingEmergencyMeeting { get; } Property Value bool BlockUsingUtility bool BlockUsingUtility { get; } Property Value bool EyesightIgnoreWalls bool EyesightIgnoreWalls { get; } Property Value bool HideKillButton bool HideKillButton { get; } Property Value bool IgnoreBlackout bool IgnoreBlackout { get; } Property Value bool KillIgnoreTeam bool KillIgnoreTeam { get; } Property Value bool SubAbilities IEnumerable<IPlayerAbility> SubAbilities { get; } Property Value IEnumerable<IPlayerAbility>"
  },
  "api/Virial.Game.IPlayerAttribute.html": {
    "href": "api/Virial.Game.IPlayerAttribute.html",
    "title": "Interface IPlayerAttribute | Virial",
    "summary": "Interface IPlayerAttribute Namespace Virial.Game public interface IPlayerAttribute Properties CategorizedAttribute 分類上の属性を取得します。 IPlayerAttribute CategorizedAttribute { get; } Property Value IPlayerAttribute Image この属性のアイコンを指定します。 Image Image { get; } Property Value Image Methods CanCognize(Player) プレイヤーが属性を認識できるかどうか調べます。 bool CanCognize(Player player) Parameters player Player Returns bool"
  },
  "api/Virial.Game.IPlayerlike.html": {
    "href": "api/Virial.Game.IPlayerlike.html",
    "title": "Interface IPlayerlike | Virial",
    "summary": "Interface IPlayerlike Namespace Virial.Game public interface IPlayerlike : IGameObject Inherited Members IGameObject.Position Properties RealPlayer Player? RealPlayer { get; } Property Value Player VisualPlayer Player? VisualPlayer { get; } Property Value Player"
  },
  "api/Virial.Game.IUsurpableAbility.html": {
    "href": "api/Virial.Game.IUsurpableAbility.html",
    "title": "Interface IUsurpableAbility | Virial",
    "summary": "Interface IUsurpableAbility Namespace Virial.Game public interface IUsurpableAbility : IPlayerAbility, IBindPlayer, IGameOperator, ILifespan Inherited Members IPlayerAbility.AbilityArguments IPlayerAbility.HideKillButton IPlayerAbility.KillIgnoreTeam IPlayerAbility.EyesightIgnoreWalls IPlayerAbility.IgnoreBlackout IPlayerAbility.BlockCallingEmergencyMeeting IPlayerAbility.BlockUsingUtility IPlayerAbility.SubAbilities IBindPlayer.MyPlayer IBindPlayer.AmOwner IGameOperator.OnReleased() ILifespan.IsDeadObject ILifespan.IsAliveObject Extension Methods GameEntityExtension.Register<Entity>(Entity, ILifespan) Properties IsUsurped bool IsUsurped { get; } Property Value bool Methods Usurp() bool Usurp() Returns bool"
  },
  "api/Virial.Game.KillButtonLikeHandler.html": {
    "href": "api/Virial.Game.KillButtonLikeHandler.html",
    "title": "Interface KillButtonLikeHandler | Virial",
    "summary": "Interface KillButtonLikeHandler Namespace Virial.Game キルボタンに類する対象を管理します。 public interface KillButtonLikeHandler Methods Register(IKillButtonLike) キルボタンに類するボタンを登録します。 void Register(IKillButtonLike killButtonLike) Parameters killButtonLike IKillButtonLike SetCooldown(float) キルクールダウンを変更します。イベントは発火しません。 void SetCooldown(float cooldown) Parameters cooldown float StartCooldown() キルクールダウンを開始します。このとき、キルクールダウンを最終的に決定するイベントを発火させます。 void StartCooldown()"
  },
  "api/Virial.Game.KillCondition.html": {
    "href": "api/Virial.Game.KillCondition.html",
    "title": "Enum KillCondition | Virial",
    "summary": "Enum KillCondition Namespace Virial.Game キルはホストが処理します。 キルのリクエストから実際のキルの遂行までにタイムラグがあるため、この間に生死の状態に変化が起きている場合があります。 実際のキルを遂行するか否かを決定する際に条件を課します。 [Flags] public enum KillCondition Fields BothAlive = KillerAlive | TargetAlive KillerAlive = 1 NoCondition = 0 TargetAlive = 2"
  },
  "api/Virial.Game.KillParameter.html": {
    "href": "api/Virial.Game.KillParameter.html",
    "title": "Enum KillParameter | Virial",
    "summary": "Enum KillParameter Namespace Virial.Game [Flags] public enum KillParameter Fields MeetingKill = WithOverlay | WithAssigningGhostRole | WithKillSEWidely NormalKill = WithBlink | RemoteKill RemoteKill = WithOverlay | WithAssigningGhostRole | WithDeadBody WithAssigningGhostRole = 4 WithBlink = 1 WithDeadBody = 16 WithKillSEWidely = 8 WithOverlay = 2"
  },
  "api/Virial.Game.KillResult.html": {
    "href": "api/Virial.Game.KillResult.html",
    "title": "Enum KillResult | Virial",
    "summary": "Enum KillResult Namespace Virial.Game public enum KillResult Fields Guard = 1 Kill = 0 ObviousGuard = 2 Rejected = 3"
  },
  "api/Virial.Game.MapObjectCondition.html": {
    "href": "api/Virial.Game.MapObjectCondition.html",
    "title": "Class MapObjectCondition | Virial",
    "summary": "Class MapObjectCondition Namespace Virial.Game public record MapObjectCondition : IEquatable<MapObjectCondition> Inheritance object MapObjectCondition Implements IEquatable<MapObjectCondition> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MapObjectCondition(string, float) public MapObjectCondition(string Tag, float Distance) Parameters Tag string Distance float Properties Distance public float Distance { get; init; } Property Value float Tag public string Tag { get; init; } Property Value string"
  },
  "api/Virial.Game.MapObjectType.html": {
    "href": "api/Virial.Game.MapObjectType.html",
    "title": "Enum MapObjectType | Virial",
    "summary": "Enum MapObjectType Namespace Virial.Game [Flags] public enum MapObjectType Fields Reachable = 2 SmallInCorner = 1 SmallOrTabletopOutOfSight = 4"
  },
  "api/Virial.Game.NebulaGameEnds.html": {
    "href": "api/Virial.Game.NebulaGameEnds.html",
    "title": "Class NebulaGameEnds | Virial",
    "summary": "Class NebulaGameEnds Namespace Virial.Game public static class NebulaGameEnds Inheritance object NebulaGameEnds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ArsonistGameEnd アーソニスト勝利。 public static readonly Cache<GameEnd> ArsonistGameEnd Field Value Cache<GameEnd> AvengerGameEnd アヴェンジャー勝利。 public static readonly Cache<GameEnd> AvengerGameEnd Field Value Cache<GameEnd> CrewmateGameEnd クルーメイト勝利。 public static readonly Cache<GameEnd> CrewmateGameEnd Field Value Cache<GameEnd> DancerGameEnd ダンサー勝利。 public static readonly Cache<GameEnd> DancerGameEnd Field Value Cache<GameEnd> GamblerGameEnd ギャンブラー勝利。 public static readonly Cache<GameEnd> GamblerGameEnd Field Value Cache<GameEnd> ImpostorGameEnd インポスター勝利。 public static readonly Cache<GameEnd> ImpostorGameEnd Field Value Cache<GameEnd> JackalGameEnd ジャッカル勝利。 public static readonly Cache<GameEnd> JackalGameEnd Field Value Cache<GameEnd> JesterGameEnd ジェスター勝利。 public static readonly Cache<GameEnd> JesterGameEnd Field Value Cache<GameEnd> LoversGameEnd ラバーズ勝利。 public static readonly Cache<GameEnd> LoversGameEnd Field Value Cache<GameEnd> NoGameEnd 無効なゲーム。 public static readonly Cache<GameEnd> NoGameEnd Field Value Cache<GameEnd> PaparazzoGameEnd パパラッチ勝利。 public static readonly Cache<GameEnd> PaparazzoGameEnd Field Value Cache<GameEnd> ScarletGameEnd スカーレット勝利。 public static readonly Cache<GameEnd> ScarletGameEnd Field Value Cache<GameEnd> SpectreGameEnd 妖狐勝利。 public static readonly Cache<GameEnd> SpectreGameEnd Field Value Cache<GameEnd> TrilemmaGameEnd トリレンマ単独勝利。 public static readonly Cache<GameEnd> TrilemmaGameEnd Field Value Cache<GameEnd> VultureGameEnd ヴァルチャー勝利。 public static readonly Cache<GameEnd> VultureGameEnd Field Value Cache<GameEnd>"
  },
  "api/Virial.Game.Outfit.html": {
    "href": "api/Virial.Game.Outfit.html",
    "title": "Class Outfit | Virial",
    "summary": "Class Outfit Namespace Virial.Game public class Outfit Inheritance object Outfit Inherited Members object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false."
  },
  "api/Virial.Game.OutfitCandidate.html": {
    "href": "api/Virial.Game.OutfitCandidate.html",
    "title": "Class OutfitCandidate | Virial",
    "summary": "Class OutfitCandidate Namespace Virial.Game public class OutfitCandidate Inheritance object OutfitCandidate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OutfitCandidate(OutfitDefinition, string, int, bool) public OutfitCandidate(OutfitDefinition definition, string tag, int priority, bool selfAware) Parameters definition OutfitDefinition tag string priority int selfAware bool Properties Outfit public OutfitDefinition Outfit { get; } Property Value OutfitDefinition Priority public int Priority { get; } Property Value int SelfAware public bool SelfAware { get; } Property Value bool Tag public string Tag { get; } Property Value string"
  },
  "api/Virial.Game.OutfitDefinition.OutfitId.html": {
    "href": "api/Virial.Game.OutfitDefinition.OutfitId.html",
    "title": "Class OutfitDefinition.OutfitId | Virial",
    "summary": "Class OutfitDefinition.OutfitId Namespace Virial.Game public record OutfitDefinition.OutfitId : IEquatable<OutfitDefinition.OutfitId> Inheritance object OutfitDefinition.OutfitId Implements IEquatable<OutfitDefinition.OutfitId> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OutfitId(int, int) public OutfitId(int ownerId, int outfitId) Parameters ownerId int outfitId int Properties outfitId public int outfitId { get; init; } Property Value int ownerId public int ownerId { get; init; } Property Value int Methods PlayersDefault(int) public static OutfitDefinition.OutfitId PlayersDefault(int playerId) Parameters playerId int Returns OutfitDefinition.OutfitId"
  },
  "api/Virial.Game.OutfitDefinition.html": {
    "href": "api/Virial.Game.OutfitDefinition.html",
    "title": "Class OutfitDefinition | Virial",
    "summary": "Class OutfitDefinition Namespace Virial.Game public class OutfitDefinition Inheritance object OutfitDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HatArgument public string? HatArgument { get; } Property Value string Id public OutfitDefinition.OutfitId Id { get; } Property Value OutfitDefinition.OutfitId OutfitTags public OutfitTag[] OutfitTags { get; } Property Value OutfitTag[] VisorArgument public string? VisorArgument { get; } Property Value string"
  },
  "api/Virial.Game.OutfitTag.html": {
    "href": "api/Virial.Game.OutfitTag.html",
    "title": "Class OutfitTag | Virial",
    "summary": "Class OutfitTag Namespace Virial.Game public record OutfitTag : IEquatable<OutfitTag> Inheritance object OutfitTag Implements IEquatable<OutfitTag> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DisplayName public string DisplayName { get; } Property Value string Id public int Id { get; } Property Value int TagImage public Image TagImage { get; } Property Value Image Methods GetAllTags() public static IEnumerable<OutfitTag> GetAllTags() Returns IEnumerable<OutfitTag> GetTagById(int) public static OutfitTag GetTagById(int id) Parameters id int Returns OutfitTag"
  },
  "api/Virial.Game.Player.ExtraDeadInfo.html": {
    "href": "api/Virial.Game.Player.ExtraDeadInfo.html",
    "title": "Class Player.ExtraDeadInfo | Virial",
    "summary": "Class Player.ExtraDeadInfo Namespace Virial.Game public abstract record Player.ExtraDeadInfo : IEquatable<Player.ExtraDeadInfo> Inheritance object Player.ExtraDeadInfo Implements IEquatable<Player.ExtraDeadInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExtraDeadInfo(CommunicableTextTag) protected ExtraDeadInfo(CommunicableTextTag State) Parameters State CommunicableTextTag Properties State public CommunicableTextTag State { get; init; } Property Value CommunicableTextTag Methods ToStateText() public abstract string ToStateText() Returns string"
  },
  "api/Virial.Game.Player.html": {
    "href": "api/Virial.Game.Player.html",
    "title": "Interface Player | Virial",
    "summary": "Interface Player Namespace Virial.Game public interface Player : IModuleContainer, ICommandExecutor, IPermissionHolder, IArchivedPlayer, IPlayerlike, IGameObject Inherited Members IModuleContainer.GetModule<T>() IPermissionHolder.Test(Permission) IArchivedPlayer.PlayerName IPlayerlike.RealPlayer IPlayerlike.VisualPlayer IGameObject.Position Properties AllAbilities 全ての能力を返します。 IEnumerable<IPlayerAbility> AllAbilities { get; } Property Value IEnumerable<IPlayerAbility> AllOrderedPlayers 全プレイヤーをPlayerIdの順で取得します。 public static IReadOnlyList<Player> AllOrderedPlayers { get; } Property Value IReadOnlyList<Player> AllPlayers 全プレイヤーを取得します。 public static IEnumerable<Player> AllPlayers { get; } Property Value IEnumerable<Player> AllowToShowKillButtonByAbilities 能力がキルボタンの表示を許可しているかを返します。 bool AllowToShowKillButtonByAbilities { get; } Property Value bool AmHost 自身がこのゲームのホストである場合、Trueを返します。 bool AmHost { get; } Property Value bool AmOwner 自身がこのプレイヤーの本来の操作主である場合、Trueを返します。 bool AmOwner { get; } Property Value bool AttemptedGhostAssignment 幽霊役職を割り当て済みの場合、trueを返します。 bool AttemptedGhostAssignment { get; } Property Value bool CanMove 梯子を使うなどの理由で操作不能な状態になっていない場合、Trueを返します。 bool CanMove { get; } Property Value bool CurrentDiving PlayerDiving? CurrentDiving { get; } Property Value PlayerDiving CurrentOutfit プレイヤーの現在の見た目を取得します。 OutfitDefinition CurrentOutfit { get; } Property Value OutfitDefinition DeathTime 死亡時刻をゲーム開始からの経過時間で返します。 float? DeathTime { get; } Property Value float? DefaultOutfit プレイヤーの本来の見た目を取得します。 OutfitDefinition DefaultOutfit { get; } Property Value OutfitDefinition EyesightIgnoreWalls 視界が壁を無視する場合、trueを返します。 [Obsolete(\"役職の振る舞いはIPlayerAbilityに移動しています。このプロパティは将来的な廃止が見込まれています。\")] bool EyesightIgnoreWalls { get; } Property Value bool GhostRole 現在割り当てられている幽霊役職です。 RuntimeGhostRole? GhostRole { get; } Property Value RuntimeGhostRole HoldingAnyDeadBody bool HoldingAnyDeadBody { get; } Property Value bool HoldingAnyPlayer bool HoldingAnyPlayer { get; } Property Value bool HoldingDeadBody いま掴んでいる死体を返します。 Player? HoldingDeadBody { get; } Property Value Player HoldingPlayer いま掴んでいるプレイヤーを返します。 Player? HoldingPlayer { get; } Property Value Player IsBlown 吹き飛ばされているとき、Trueを返します。 bool IsBlown { get; } Property Value bool IsCrewmate クルーメイト陣営の場合、trueを返します。マッドメイトであってもtrueを返します。 bool IsCrewmate { get; } Property Value bool IsDead 死亡しているとき、Trueを返します。 bool IsDead { get; } Property Value bool IsDisconnected 切断されているとき、Trueを返します。切断されている場合は死亡しているものとして扱われます。 bool IsDisconnected { get; } Property Value bool IsDived ダイブしているとき、Trueを返します。 bool IsDived { get; } Property Value bool IsImpostor インポスター陣営の場合、trueを返します。 bool IsImpostor { get; } Property Value bool IsInvisible プレイヤーが不可視なとき、Trueを返します。 ローカルのプレイヤーから見た可視性を表します。 bool IsInvisible { get; } Property Value bool Remarks v3.1.0で追加。 IsMadmate マッドメイトの場合、trueを返します。 bool IsMadmate { get; } Property Value bool IsTeleporting テレポート中、Trueを返します。 bool IsTeleporting { get; } Property Value bool IsTrueCrewmate クルー陣営かつマッドメイトでないクルーメイトであればtrueを返します。 IsCrewmate && !IsMadmateと等価です。 bool IsTrueCrewmate { get; } Property Value bool LocalPlayer 自身が操作するプレイヤーを取得します。 public static Player? LocalPlayer { get; } Property Value Player Modifiers 現在割り当てられているモディファイアです。 IEnumerable<RuntimeModifier> Modifiers { get; } Property Value IEnumerable<RuntimeModifier> MyKiller 自身をキルした相手を返します。 Player? MyKiller { get; } Property Value Player Name プレイヤーの名前です。 string Name { get; } Property Value string PlayerId ゲーム内でプレイヤーを識別するIDです。１ゲームの中で変わることはありません。 byte PlayerId { get; } Property Value byte PlayerState プレイヤーの現在の状態を表すタグです。 CommunicableTextTag PlayerState { get; } Property Value CommunicableTextTag PlayerStateExtraInfo プレイヤーの死因についての詳細です。死因とPlayerStateが一致しない場合は無視すべきです。 Player.ExtraDeadInfo? PlayerStateExtraInfo { get; set; } Property Value Player.ExtraDeadInfo Role 現在割り当てられている役職です。 RuntimeRole Role { get; } Property Value RuntimeRole ShowKillButton キルボタンを表示すべきか否かを取得します。 bool ShowKillButton { get; } Property Value bool Tasks プレイヤーのタスク進捗を取得します。 PlayerTasks Tasks { get; } Property Value PlayerTasks TeamKillCooldown 陣営の基本的なキルクールダウンです。 float TeamKillCooldown { get; } Property Value float TruePosition プレイヤーの足元の座標を返します。 Vector2 TruePosition { get; } Property Value Vector2 WillDie 死が確定しているとき、Trueを返します。 死亡していても、Trueを返さないときがあります。IsDeadと併用して使用する必要があります。 bool WillDie { get; } Property Value bool Methods AddModifier(DefinedModifier, int[]?) モディファイアを追加します。 void AddModifier(DefinedModifier modifier, int[]? arguments = null) Parameters modifier DefinedModifier 追加するモディファイア。 arguments int[] モディファイアのパラメータ。 Remarks v3.1.0で追加。 AllAssigned() 現在割り当てられている役職実体を全て返します。 IEnumerable<RuntimeAssignable> AllAssigned() Returns IEnumerable<RuntimeAssignable> CanKill(Player) 役職の関係性でキルできるかどうかをチェックします。 bool CanKill(Player player) Parameters player Player Returns bool GainAttribute(IPlayerAttribute, float, bool, int, string?) アトリビュートを付与します。 このAPIはRPCを送信します。 void GainAttribute(IPlayerAttribute attribute, float duration, bool canPassMeeting, int priority, string? duplicateTag = null) Parameters attribute IPlayerAttribute 付与するアトリビュート duration float 効果時間 canPassMeeting bool 会議を超えて効果が持続する場合、true priority int 優先度 duplicateTag string 重複チェック用タグ GainAttribute(IPlayerAttribute, float, float, bool, int, string?) 係数付きアトリビュートを付与します。 void GainAttribute(IPlayerAttribute attribute, float duration, float ratio, bool canPassMeeting, int priority, string? duplicateTag = null) Parameters attribute IPlayerAttribute 付与するアトリビュート。 duration float 効果時間。 ratio float 係数。 canPassMeeting bool 会議を超えて効果が持続する場合、true。 priority int 優先度。 duplicateTag string 重複チェック用タグ。 Remarks v2.0.1.0で追加。 GainSizeAttribute(Vector2, float, bool, int, string?) サイズアトリビュートを付与します。 このAPIはRPCを送信します。 void GainSizeAttribute(Vector2 size, float duration, bool canPassMeeting, int priority, string? duplicateTag = null) Parameters size Vector2 プレイヤーの大きさ。 duration float 効果時間。 canPassMeeting bool 会議を超えて効果が持続する場合、true。 priority int 優先度。 duplicateTag string 重複チェック用タグ。 Remarks v2.0.1.0で追加。 GainSpeedAttribute(float, float, bool, int, string?) 加減速アトリビュートを付与します。 このAPIはRPCを送信します。 void GainSpeedAttribute(float speedRate, float duration, bool canPassMeeting, int priority, string? duplicateTag = null) Parameters speedRate float 加減速の倍率。 duration float 効果時間。 canPassMeeting bool 会議を超えて効果が持続するかどうか。 priority int 優先度。 duplicateTag string 重複チェック用タグ。 Remarks v2.0.1.0でGainAttributeから名前変更。 GetAttributes() 現在有効化されているアトリビュートを列挙します。 IEnumerable<(IPlayerAttribute attribute, float percentage)> GetAttributes() Returns IEnumerable<(IPlayerAttribute attribute, float percentage)> GetModifiers<Modifier>() 指定したモディファイアをすべて取得します。 IEnumerable<Modifier> GetModifiers<Modifier>() where Modifier : class, RuntimeModifier Returns IEnumerable<Modifier> モディファイア Type Parameters Modifier モディファイアの型。 GetOutfit(int) プレイヤーの見た目を取得します。 OutfitDefinition GetOutfit(int maxPriority) Parameters maxPriority int 見た目の優先度の最大値 Returns OutfitDefinition GetPlayer(byte) プレイヤーを取得します。 public static Player? GetPlayer(byte playerId) Parameters playerId byte プレイヤーID Returns Player HasAttribute(IPlayerAttribute) アトリビュートを獲得しているかどうか調べます。 bool HasAttribute(IPlayerAttribute attribute) Parameters attribute IPlayerAttribute 調べる対象のアトリビュート。 Returns bool HoldDeadBody(Player?) 死体を掴みます。 void HoldDeadBody(Player? deadBody) Parameters deadBody Player HoldPlayer(Player?) プレイヤーを掴みます。 このAPIはRPCを送信します。 void HoldPlayer(Player? player) Parameters player Player MurderPlayer(Player, CommunicableTextTag, CommunicableTextTag?, KillParameter, Action<KillResult>?) プレイヤーをキルします。会議中の場合はkillParamsの死体を残す設定は無視され、強制的に死体を残さないキルを起こします。 このAPIはRPCを送信します。 void MurderPlayer(Player player, CommunicableTextTag playerState, CommunicableTextTag? eventDetail, KillParameter killParams, Action<KillResult>? callBack = null) Parameters player Player キル対象のプレイヤー。 playerState CommunicableTextTag キル後のプレイヤー状態。 eventDetail CommunicableTextTag キルイベントの詳細。 killParams KillParameter キルのパラメータ。 callBack Action<KillResult> キル時に呼び出されるコールバック。 MurderPlayer(Player, CommunicableTextTag, CommunicableTextTag?, KillParameter, KillCondition, Action<KillResult>?) プレイヤーをキルします。会議中の場合はkillParamsの死体を残す設定は無視され、強制的に死体を残さないキルを起こします。 このAPIはRPCを送信します。 void MurderPlayer(Player player, CommunicableTextTag playerState, CommunicableTextTag? eventDetail, KillParameter killParams, KillCondition killCondition, Action<KillResult>? callBack = null) Parameters player Player キル対象のプレイヤー。 playerState CommunicableTextTag キル後のプレイヤー状態。 eventDetail CommunicableTextTag キルイベントの詳細。 killParams KillParameter キルのパラメータ。 killCondition KillCondition キルが通る条件。 callBack Action<KillResult> キル時に呼び出されるコールバック。 ReleaseDeadBody() 掴んでいる死体を放します。 このAPIはRPCを送信します。 void ReleaseDeadBody() ReleaseHoldingPlayer() 掴んでいるプレイヤーを放します。 このAPIはRPCを送信します。 void ReleaseHoldingPlayer() RemoveModifier(DefinedModifier) モディファイアを削除します。 該当するモディファイアをすべて削除します。 void RemoveModifier(DefinedModifier modifier) Parameters modifier DefinedModifier 削除するモディファイア。 Remarks v3.1.0で追加。 RemoveModifierLocal(RuntimeModifier) 自身の視点でのみモディファイアを削除します。 同一のモディファイアを複数所持しうる場合に使用してください。 全クライアントでこのAPIを同様に呼び出す必要があります。 void RemoveModifierLocal(RuntimeModifier modifier) Parameters modifier RuntimeModifier 削除するモディファイア。 Remarks v3.1.0で追加。 Revive(Player?, Vector2, bool, bool) 復活します。 このAPIはRPCを送信します。 void Revive(Player? healer, Vector2 position, bool eraseDeadBody, bool recordEvent = true) Parameters healer Player 復活者。 position Vector2 復活位置。 eraseDeadBody bool 死体を消去したうえで復活する場合、true。 recordEvent bool 復活イベントをゲーム履歴に残す場合、true。 SetGhostRole(DefinedGhostRole, int[]?) 幽霊役職を変更します。 このAPIはRPCを送信します。 void SetGhostRole(DefinedGhostRole role, int[]? arguments = null) Parameters role DefinedGhostRole 変更する幽霊役職。 arguments int[] 幽霊役職のパラメータ。 Remarks v3.1.0で追加。 SetRole(DefinedRole, int[]?) 役職を変更します。 このAPIはRPCを送信します。 void SetRole(DefinedRole role, int[]? arguments = null) Parameters role DefinedRole 変更する役職。 arguments int[] 役職のパラメータ。 Remarks v3.1.0で追加。 Suicide(CommunicableTextTag, CommunicableTextTag?, KillParameter, Action<KillResult>?) 自殺します。 このAPIはRPCを送信します。 void Suicide(CommunicableTextTag playerState, CommunicableTextTag? eventDetail, KillParameter killParams, Action<KillResult>? callBack = null) Parameters playerState CommunicableTextTag 自殺後のプレイヤー状態。 eventDetail CommunicableTextTag 自殺イベントの詳細。 killParams KillParameter キルのパラメータ。 callBack Action<KillResult> 自殺時に呼び出されるコールバック。 TryGetAbility<Ability>(out Ability) 能力を取得します。 bool TryGetAbility<Ability>(out Ability ability) where Ability : class, IPlayerAbility Parameters ability Ability Returns bool Type Parameters Ability TryGetModifier<Modifier>(out Modifier) 指定したモディファイアを取得します。 bool TryGetModifier<Modifier>(out Modifier modifier) where Modifier : class, RuntimeModifier Parameters modifier Modifier モディファイアが割り当てられている場合、割り当てられているモディファイア。 Returns bool モディファイアが割り当てられている場合、true。 Type Parameters Modifier モディファイアの型。"
  },
  "api/Virial.Game.PlayerAttributes.html": {
    "href": "api/Virial.Game.PlayerAttributes.html",
    "title": "Class PlayerAttributes | Virial",
    "summary": "Class PlayerAttributes Namespace Virial.Game public static class PlayerAttributes Inheritance object PlayerAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Accel 加速効果を表します。速度倍率のパラメータがあります。 public static IPlayerAttribute Accel { get; } Property Value IPlayerAttribute BuskerEffect Buskerの偽装死を隠蔽する効果を表します。効果は偽装死に限らず適用されます。 public static IPlayerAttribute BuskerEffect { get; } Property Value IPlayerAttribute CooldownSpeed クールダウンの進行速度上昇効果を表します。 public static IPlayerAttribute CooldownSpeed { get; } Property Value IPlayerAttribute CurseOfBloody Bloodyの血の足跡効果を表します。 public static IPlayerAttribute CurseOfBloody { get; } Property Value IPlayerAttribute Decel 減速効果を表します。速度倍率のパラメータがあります。 public static IPlayerAttribute Decel { get; } Property Value IPlayerAttribute Drunk 速度反転効果を表します。速度倍率のパラメータがあります。 public static IPlayerAttribute Drunk { get; } Property Value IPlayerAttribute Eyesight 視野拡大/縮小効果を表します。 public static IPlayerAttribute Eyesight { get; } Property Value IPlayerAttribute FlipX 左右反転効果を表します。 public static IPlayerAttribute FlipX { get; } Property Value IPlayerAttribute FlipXY 左右上下反転効果を表します。実際の効果は180度回転です。 public static IPlayerAttribute FlipXY { get; } Property Value IPlayerAttribute FlipY 上下反転効果を表します。 public static IPlayerAttribute FlipY { get; } Property Value IPlayerAttribute Footprint パーク「痕跡」の足跡効果を表します。 public static IPlayerAttribute Footprint { get; } Property Value IPlayerAttribute InternalInvisible 即座に変化する透明化効果を表します。 ドリルの演出で使用しています。 public static IPlayerAttribute InternalInvisible { get; } Property Value IPlayerAttribute Invisible 透明化効果を表します。 public static IPlayerAttribute Invisible { get; } Property Value IPlayerAttribute InvisibleElseImpostor Effacerのインポスターにだけ見える透明化効果を表します。 public static IPlayerAttribute InvisibleElseImpostor { get; } Property Value IPlayerAttribute Isolation Alienの情報端末からの無縁化効果を表します。 public static IPlayerAttribute Isolation { get; } Property Value IPlayerAttribute Roughening モザイク効果を表します。 public static IPlayerAttribute Roughening { get; } Property Value IPlayerAttribute ScreenSize 画面拡大/縮小効果を表します。 public static IPlayerAttribute ScreenSize { get; } Property Value IPlayerAttribute Size サイズ変更効果を表します。サイズ倍率のパラメータがあります。 public static IPlayerAttribute Size { get; } Property Value IPlayerAttribute Thurifer Thuriferの感染状態を表します。 public static IPlayerAttribute Thurifer { get; } Property Value IPlayerAttribute"
  },
  "api/Virial.Game.PlayerDiving.html": {
    "href": "api/Virial.Game.PlayerDiving.html",
    "title": "Class PlayerDiving | Virial",
    "summary": "Class PlayerDiving Namespace Virial.Game public record PlayerDiving : IEquatable<PlayerDiving> Inheritance object PlayerDiving Implements IEquatable<PlayerDiving> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerDiving() public PlayerDiving()"
  },
  "api/Virial.Game.PlayerTasks.html": {
    "href": "api/Virial.Game.PlayerTasks.html",
    "title": "Interface PlayerTasks | Virial",
    "summary": "Interface PlayerTasks Namespace Virial.Game public interface PlayerTasks : IModule Properties CurrentCompleted 今所持しているうちでクリア済みのタスクの数です。 int CurrentCompleted { get; } Property Value int CurrentTasks 今所持しているタスクの数です。 int CurrentTasks { get; } Property Value int HasExecutableTasks 実行可能なタスクを持ちうる場合Trueが返ります。 bool HasExecutableTasks { get; } Property Value bool IsAchievedQuota タスクノルマをすべてクリアしている場合Trueが返ります。 bool IsAchievedQuota { get; } Property Value bool IsCompletedCurrentTasks 今所持しているタスクをすべてクリアしている場合Trueが返ります。 bool IsCompletedCurrentTasks { get; } Property Value bool IsCompletedTotalTasks 割り当てられてきたタスクすべてをクリアしている場合Trueが返ります。 bool IsCompletedTotalTasks { get; } Property Value bool IsCrewmateTask タスクがクルーメイトのタスクとして割り当てられている場合Trueが返ります。 bool IsCrewmateTask { get; } Property Value bool Quota 対象プレイヤーに割り当てられたタスクノルマです。 int Quota { get; } Property Value int TotalCompleted 対象プレイヤーがこれまでにクリアしてきたタスクの数です。 int TotalCompleted { get; } Property Value int TotalTasks 対象プレイヤーがこれまでに割り当てられてきた全タスクの数です。 int TotalTasks { get; } Property Value int"
  },
  "api/Virial.Game.html": {
    "href": "api/Virial.Game.html",
    "title": "Namespace Virial.Game | Virial",
    "summary": "Namespace Virial.Game Classes AbstractPlayerAbility AbstractPlayerUsurpableAbility ArchivedColor EndState ExtraWin GameActionType GameActionTypes GameEnd ゲーム終了を表します。 CreateTeam(string, Color, TeamRevealType) GameEntityExtension GameModeDefinition GameModes MapObjectCondition NebulaGameEnds Outfit OutfitCandidate OutfitDefinition OutfitDefinition.OutfitId OutfitTag Player.ExtraDeadInfo PlayerAttributes PlayerDiving Interfaces Game 現在プレイ中のゲームを表します。 GameStatsEntry IArchivedEvent IArchivedEventVariation IArchivedGame IArchivedPlayer IBindPlayer プレイヤーに紐づけられたEntityを表します。 IGameModeFreePlay フリープレイモードのゲームで生成されるモジュールです。 IGameModeModule IGameModeStandard 標準モードのゲームで生成されるモジュールです。 IGameObject IGameOperator ゲームに作用するEntityを表します。 IMapObjectSpawner IPlayerAbility IPlayerAttribute IPlayerlike IUsurpableAbility KillButtonLikeHandler キルボタンに類する対象を管理します。 Player PlayerTasks Enums ExtraWinCheckPhase GameEndReason GameStatsCategory KillCondition キルはホストが処理します。 キルのリクエストから実際のキルの遂行までにタイムラグがあるため、この間に生死の状態に変化が起きている場合があります。 実際のキルを遂行するか否かを決定する際に条件を課します。 KillParameter KillResult MapObjectType"
  },
  "api/Virial.Helpers.ArrayHelper.html": {
    "href": "api/Virial.Helpers.ArrayHelper.html",
    "title": "Class ArrayHelper | Virial",
    "summary": "Class ArrayHelper Namespace Virial.Helpers public static class ArrayHelper Inheritance object ArrayHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Selection(int, int, int) public static int[] Selection(int min, int max, int step = 1) Parameters min int max int step int Returns int[] Selection(float, float, float) public static float[] Selection(float min, float max, float step) Parameters min float max float step float Returns float[]"
  },
  "api/Virial.Helpers.CoroutineHelper.html": {
    "href": "api/Virial.Helpers.CoroutineHelper.html",
    "title": "Class CoroutineHelper | Virial",
    "summary": "Class CoroutineHelper Namespace Virial.Helpers public static class CoroutineHelper Inheritance object CoroutineHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HighSpeedEnumerator(IEnumerator) public static IEnumerator HighSpeedEnumerator(this IEnumerator enumerator) Parameters enumerator IEnumerator Returns IEnumerator WaitAll(IEnumerable<IEnumerator?>) public static IEnumerator WaitAll(this IEnumerable<IEnumerator?> enumerators) Parameters enumerators IEnumerable<IEnumerator> Returns IEnumerator"
  },
  "api/Virial.Helpers.EnumerableHelper.html": {
    "href": "api/Virial.Helpers.EnumerableHelper.html",
    "title": "Class EnumerableHelper | Virial",
    "summary": "Class EnumerableHelper Namespace Virial.Helpers public static class EnumerableHelper Inheritance object EnumerableHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Delimit<T>(IEnumerable<T>, T) public static IEnumerable<T> Delimit<T>(this IEnumerable<T> enumerable, T delimiter) Parameters enumerable IEnumerable<T> delimiter T Returns IEnumerable<T> Type Parameters T FindIndex<T>(IReadOnlyList<T>, Func<T, bool>) public static int FindIndex<T>(this IReadOnlyList<T> list, Func<T, bool> predicate) Parameters list IReadOnlyList<T> predicate Func<T, bool> Returns int Type Parameters T Find<T>(IEnumerable<T>, Func<T, bool>, out T) public static bool Find<T>(this IEnumerable<T> enumerable, Func<T, bool> predicate, out T found) Parameters enumerable IEnumerable<T> predicate Func<T, bool> found T Returns bool Type Parameters T RemoveFirst<T>(List<T>, Predicate<T>) リストの先頭から調べ、最初に発見した要素を1つ削除します。 RemoveAllとは後続に条件に適うものがあっても削除されない点が異なります。 public static T? RemoveFirst<T>(this List<T> list, Predicate<T> predicate) Parameters list List<T> predicate Predicate<T> Returns T Type Parameters T Smooth<T>(IEnumerable<IEnumerable<T>>) public static IEnumerable<T> Smooth<T>(this IEnumerable<IEnumerable<T>> enumerable) Parameters enumerable IEnumerable<IEnumerable<T>> Returns IEnumerable<T> Type Parameters T"
  },
  "api/Virial.Helpers.TextHelper.html": {
    "href": "api/Virial.Helpers.TextHelper.html",
    "title": "Class TextHelper | Virial",
    "summary": "Class TextHelper Namespace Virial.Helpers public static class TextHelper Inheritance object TextHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WithComparison(TextComponent, string) public static TextComponent WithComparison(this TextComponent inner, string textForCompare) Parameters inner TextComponent textForCompare string Returns TextComponent"
  },
  "api/Virial.Helpers.html": {
    "href": "api/Virial.Helpers.html",
    "title": "Namespace Virial.Helpers | Virial",
    "summary": "Namespace Virial.Helpers Classes ArrayHelper CoroutineHelper EnumerableHelper TextHelper"
  },
  "api/Virial.IBit32.html": {
    "href": "api/Virial.IBit32.html",
    "title": "Interface IBit32 | Virial",
    "summary": "Interface IBit32 Namespace Virial public interface IBit32 Properties AsBit uint AsBit { get; } Property Value uint"
  },
  "api/Virial.IBit64.html": {
    "href": "api/Virial.IBit64.html",
    "title": "Interface IBit64 | Virial",
    "summary": "Interface IBit64 Namespace Virial public interface IBit64 Properties AsBitLong ulong AsBitLong { get; } Property Value ulong"
  },
  "api/Virial.ILifespan.html": {
    "href": "api/Virial.ILifespan.html",
    "title": "Interface ILifespan | Virial",
    "summary": "Interface ILifespan Namespace Virial 寿命オブジェクトを表します。 public interface ILifespan Properties IsAliveObject 存命中のオブジェクトはtrueを返します。 bool IsAliveObject { get; } Property Value bool IsDeadObject 寿命の尽きたオブジェクトはtrueを返します。 bool IsDeadObject { get; } Property Value bool"
  },
  "api/Virial.IModuleFactory.html": {
    "href": "api/Virial.IModuleFactory.html",
    "title": "Interface IModuleFactory | Virial",
    "summary": "Interface IModuleFactory Namespace Virial public interface IModuleFactory Methods AbilityButton(ILifespan) 能力ボタンを生成します。 ModAbilityButton AbilityButton(ILifespan lifespan) Parameters lifespan ILifespan 寿命。 Returns ModAbilityButton AbilityButton(ILifespan, bool, bool, int, bool) 能力ボタンを生成します。 ModAbilityButton AbilityButton(ILifespan lifespan, bool isLeftSideButton = false, bool isArrangedAsKillButton = false, int priority = 0, bool alwaysShow = false) Parameters lifespan ILifespan 寿命。 isLeftSideButton bool 画面の左側に表示する場合、true。 isArrangedAsKillButton bool キルボタンの位置に配置する場合、true。 priority int ボタン配置の優先度 alwaysShow bool 常に表示する場合、true。 Returns ModAbilityButton AbilityButton(ILifespan, Player, bool, bool, VirtualKeyInput, string?, float, string, Image, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, bool) プレイヤーの移動可能性と生死を考慮した標準的な能力ボタンを生成します。 ボタンの可用性と可視性には追加の条件を設けられます。 ModAbilityButton AbilityButton(ILifespan lifespan, Player player, bool isArrangedAsKillButton, bool isLeftSideButton, VirtualKeyInput input, string? inputHelp, float cooldown, string label, Image image, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, bool asGhostButton = false) Parameters lifespan ILifespan player Player isArrangedAsKillButton bool isLeftSideButton bool input VirtualKeyInput inputHelp string cooldown float label string image Image availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> asGhostButton bool Returns ModAbilityButton AbilityButton(ILifespan, Player, VirtualKeyInput, float, string, Image, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, bool) ModAbilityButton AbilityButton(ILifespan lifespan, Player player, VirtualKeyInput input, float cooldown, string label, Image image, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, bool asGhostButton = false) Parameters lifespan ILifespan player Player input VirtualKeyInput cooldown float label string image Image availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> asGhostButton bool Returns ModAbilityButton AbilityButton(ILifespan, Player, VirtualKeyInput, string?, float, string, Image, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, bool) ModAbilityButton AbilityButton(ILifespan lifespan, Player player, VirtualKeyInput input, string? inputHelp, float cooldown, string label, Image image, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, bool asGhostButton = false) Parameters lifespan ILifespan player Player input VirtualKeyInput inputHelp string cooldown float label string image Image availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> asGhostButton bool Returns ModAbilityButton EffectButton(ILifespan, Player, VirtualKeyInput, float, float, string, Image, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, bool, bool) ModAbilityButton EffectButton(ILifespan lifespan, Player player, VirtualKeyInput input, float cooldown, float duration, string label, Image image, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, bool asGhostButton = false, bool isToggleEffect = false) Parameters lifespan ILifespan player Player input VirtualKeyInput cooldown float duration float label string image Image availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> asGhostButton bool isToggleEffect bool Returns ModAbilityButton EffectButton(ILifespan, Player, VirtualKeyInput, string?, float, float, string, Image, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, bool, bool) ModAbilityButton EffectButton(ILifespan lifespan, Player player, VirtualKeyInput input, string? inputHelp, float cooldown, float duration, string label, Image image, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, bool asGhostButton = false, bool isToggleEffect = false) Parameters lifespan ILifespan player Player input VirtualKeyInput inputHelp string cooldown float duration float label string image Image availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> asGhostButton bool isToggleEffect bool Returns ModAbilityButton InteractButton(ILifespan, Player, ObjectTracker<Player>, VirtualKeyInput, string?, float, string, Image, Action<Player, ModAbilityButton>, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, bool) ModAbilityButton InteractButton(ILifespan lifespan, Player player, ObjectTracker<Player> tracker, VirtualKeyInput input, string? inputHelp, float cooldown, string label, Image image, Action<Player, ModAbilityButton> onClick, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, bool asGhostButton = false) Parameters lifespan ILifespan player Player tracker ObjectTracker<Player> input VirtualKeyInput inputHelp string cooldown float label string image Image onClick Action<Player, ModAbilityButton> availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> asGhostButton bool Returns ModAbilityButton KillButton(ILifespan, Player, bool, VirtualKeyInput, float, string, LabelType, Image?, Action<Player, ModAbilityButton>, Func<Player, bool>?, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?) ModAbilityButton KillButton(ILifespan lifespan, Player player, bool arrangeAsKillButton, VirtualKeyInput input, float cooldown, string label, ModAbilityButton.LabelType labelType, Image? image, Action<Player, ModAbilityButton> onKill, Func<Player, bool>? filter = null, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null) Parameters lifespan ILifespan player Player arrangeAsKillButton bool input VirtualKeyInput cooldown float label string labelType ModAbilityButton.LabelType image Image onKill Action<Player, ModAbilityButton> filter Func<Player, bool> availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> Returns ModAbilityButton KillButton(ILifespan, Player, bool, VirtualKeyInput, string?, float, string, LabelType, Image?, Action<Player, ModAbilityButton>, Func<Player, bool>?, Func<ModAbilityButton, bool>?, Func<ModAbilityButton, bool>?, Func<Player, bool>?) ModAbilityButton KillButton(ILifespan lifespan, Player player, bool arrangeAsKillButton, VirtualKeyInput input, string? inputHelp, float cooldown, string label, ModAbilityButton.LabelType labelType, Image? image, Action<Player, ModAbilityButton> onKill, Func<Player, bool>? filter = null, Func<ModAbilityButton, bool>? availability = null, Func<ModAbilityButton, bool>? visibility = null, Func<Player, bool>? filterHeavier = null) Parameters lifespan ILifespan player Player arrangeAsKillButton bool input VirtualKeyInput inputHelp string cooldown float label string labelType ModAbilityButton.LabelType image Image onKill Action<Player, ModAbilityButton> filter Func<Player, bool> availability Func<ModAbilityButton, bool> visibility Func<ModAbilityButton, bool> filterHeavier Func<Player, bool> Returns ModAbilityButton KillTracker(ILifespan, Player, Func<Player, bool>?, Func<Player, bool>?) キル対象を選択するトラッカーを返します。 キル可能なプレイヤーのみ選択できます。 ObjectTracker<Player> KillTracker(ILifespan lifespan, Player player, Func<Player, bool>? filter = null, Func<Player, bool>? filterHeavier = null) Parameters lifespan ILifespan 寿命。 player Player 追跡者。通常、自分自身を指定します。 filter Func<Player, bool> さらにプレイヤーを限定するフィルタ。 filterHeavier Func<Player, bool> さらにプレイヤーを限定するフィルタ。コストの高い計算をここに記述してください。 Returns ObjectTracker<Player> PlayerTracker(ILifespan, Player, Func<Player, bool>?, Func<Player, bool>?) ObjectTracker<Player> PlayerTracker(ILifespan lifespan, Player player, Func<Player, bool>? filter = null, Func<Player, bool>? filterHeavier = null) Parameters lifespan ILifespan player Player filter Func<Player, bool> filterHeavier Func<Player, bool> Returns ObjectTracker<Player> Timer(ILifespan, float) タイマーを生成します。 GameTimer Timer(ILifespan lifespan, float max) Parameters lifespan ILifespan max float Returns GameTimer"
  },
  "api/Virial.INestedLifespan.html": {
    "href": "api/Virial.INestedLifespan.html",
    "title": "Interface INestedLifespan | Virial",
    "summary": "Interface INestedLifespan Namespace Virial 入れ子状になった寿命オブジェクトを表します。 public interface INestedLifespan : ILifespan Inherited Members ILifespan.IsDeadObject ILifespan.IsAliveObject Methods Bind(ILifespan) bool Bind(ILifespan lifespan) Parameters lifespan ILifespan Returns bool"
  },
  "api/Virial.IReleasable.html": {
    "href": "api/Virial.IReleasable.html",
    "title": "Interface IReleasable | Virial",
    "summary": "Interface IReleasable Namespace Virial 任意のタイミングで解放できるオブジェクトを表します。 能動的に寿命が切れる寿命オブジェクトが実装すべきインターフェースです。 public interface IReleasable Methods Release() void Release()"
  },
  "api/Virial.Media.Anchor.html": {
    "href": "api/Virial.Media.Anchor.html",
    "title": "Class Anchor | Virial",
    "summary": "Class Anchor Namespace Virial.Media 画面の基準点を表します。 生成されたスクリーン上の点と空間上の点は同じ位置にくるように重ね合わせられます。 public record Anchor : IEquatable<Anchor> Inheritance object Anchor Implements IEquatable<Anchor> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Anchor(Vector2, Vector3) 画面の基準点を表します。 生成されたスクリーン上の点と空間上の点は同じ位置にくるように重ね合わせられます。 public Anchor(Vector2 pivot, Vector3 anchoredPosition) Parameters pivot Vector2 重ね合わせるスクリーン上の点 anchoredPosition Vector3 重ね合わせられる空間上の点 Properties anchoredPosition 重ね合わせられる空間上の点 public Vector3 anchoredPosition { get; init; } Property Value Vector3 pivot 重ね合わせるスクリーン上の点 public Vector2 pivot { get; init; } Property Value Vector2 Methods At(Vector2) public static Anchor At(Vector2 pivot) Parameters pivot Vector2 Returns Anchor"
  },
  "api/Virial.Media.GUI.html": {
    "href": "api/Virial.Media.GUI.html",
    "title": "Interface GUI | Virial",
    "summary": "Interface GUI Namespace Virial.Media GUI上に表示する各種オブジェクトの定義や関連するオブジェクトを生成できます。 public interface GUI Properties EmptyWidget 何も表示しないウィジェットです。 GUIWidget EmptyWidget { get; } Property Value GUIWidget Methods Arrange(GUIAlignment, IEnumerable<GUIWidget?>, int) ウィジットを指定の個数ずつ縦方向に伸ばしながら配置します。 GUIWidget Arrange(GUIAlignment alignment, IEnumerable<GUIWidget?> inner, int perLine) Parameters alignment GUIAlignment inner IEnumerable<GUIWidget> perLine int Returns GUIWidget BoldTextComponent(TextComponent) TextComponent BoldTextComponent(TextComponent component) Parameters component TextComponent Returns TextComponent Button(GUIAlignment, TextAttribute, TextComponent, GUIClickableAction, GUIClickableAction?, GUIClickableAction?, GUIClickableAction?, Color?, Color?, float?) テキストを表示するボタンです。 GUIWidget Button(GUIAlignment alignment, TextAttribute attribute, TextComponent text, GUIClickableAction onClick, GUIClickableAction? onMouseOver = null, GUIClickableAction? onMouseOut = null, GUIClickableAction? onRightClick = null, Color? color = null, Color? selectedColor = null, float? margin = null) Parameters alignment GUIAlignment ウィジェットの配置位置 attribute TextAttribute テキストの属性 text TextComponent テキストを表すコンポーネント onClick GUIClickableAction クリックされた際に実行するアクション onMouseOver GUIClickableAction カーソルが触れた際に実行するアクション onMouseOut GUIClickableAction カーソルが離れた際に実行するアクション onRightClick GUIClickableAction 右クリックされた際に実行するアクション color Color? ボタンの色 selectedColor Color? カーソルが重なっている時のボタンの色 margin float? Returns GUIWidget 生成されたウィジェット定義 ButtonGrouped(GUIWidget) GUIWidget ButtonGrouped(GUIWidget inner) Parameters inner GUIWidget Returns GUIWidget ColorTextComponent(Color, TextComponent) 色付きテキストのコンポーネントを生成します。 TextComponent ColorTextComponent(Color color, TextComponent component) Parameters color Color テキスト色 component TextComponent テキストコンポーネント Returns TextComponent 色付きのテキストコンポーネント FunctionalTextComponent(Func<string>) TextComponent FunctionalTextComponent(Func<string> supplier) Parameters supplier Func<string> Returns TextComponent FunctionalTextComponent(Func<string>, string) TextComponent FunctionalTextComponent(Func<string> supplier, string textForCompare) Parameters supplier Func<string> textForCompare string Returns TextComponent GenerateAttribute(AttributeParams, Color, FontSize, Size) テキスト属性を生成します。 同じ属性を何度も生成すると非効率的です。テキスト属性は不変ですので、再利用できるテキスト属性は積極的に再利用を心がけてください。 TextAttribute GenerateAttribute(AttributeParams attribute, Color color, FontSize fontSize, Size size) Parameters attribute AttributeParams 属性のパラメータ color Color テキスト色 fontSize FontSize フォントサイズ size Size 文字列の占有する大きさの上限 Returns TextAttribute GetAttribute(AttributeAsset) 識別子からテキスト属性を取得します。 Nebulaで用いられているテキスト属性をそのまま借用できます。 GenerateAttributeメソッドで同等のテキスト属性を生成することもできますが、このメソッドから取得できるテキスト属性はキャッシュされており、メモリを過剰に逼迫しません。 TextAttribute GetAttribute(AttributeAsset attribute) Parameters attribute AttributeAsset 属性の識別子 Returns TextAttribute テキスト属性 GetAttribute(AttributeParams) パラメータからテキスト属性を取得します。 GenerateAttributeメソッドで同等のテキスト属性を生成することもできますが、このメソッドから取得できるテキスト属性はキャッシュされており、メモリを過剰に逼迫しません。 TextAttribute GetAttribute(AttributeParams attribute) Parameters attribute AttributeParams 属性のパラメータ Returns TextAttribute テキスト属性 GetFont(FontAsset) フォントを取得します。 Font GetFont(FontAsset font) Parameters font FontAsset フォントの識別子 Returns Font フォント HideOverlay() オーバーレイを隠します。 void HideOverlay() HideOverlayIf(GUIClickable?) 指定のGUIClickableと紐づけられたオーバーレイが表示中の場合、隠します。 void HideOverlayIf(GUIClickable? clickable) Parameters clickable GUIClickable HorizontalHolder(GUIAlignment, IEnumerable<GUIWidget?>, float?) 横方向にウィジェットを並べます。 GUIWidget HorizontalHolder(GUIAlignment alignment, IEnumerable<GUIWidget?> innerReference, float? fixedHeight = null) Parameters alignment GUIAlignment ウィジェットの配置位置 innerReference IEnumerable<GUIWidget> 並べるウィジェット GUIScreen.SetWidgetの呼び出し時に評価されます fixedHeight float? ウィジェットの固定長 nullの場合はフレキシブルに高さを設定します Returns GUIWidget 生成されたウィジェット定義 HorizontalHolder(GUIAlignment, float, params GUIWidget?[]) 横方向にウィジェットを並べます。 呼び出しを簡素化するためのオーバーロードです。 GUIWidget HorizontalHolder(GUIAlignment alignment, float fixedHeight, params GUIWidget?[] inner) Parameters alignment GUIAlignment ウィジェットの配置位置 fixedHeight float ウィジェットの固定長 nullの場合はフレキシブルに高さを設定します inner GUIWidget[] 並べるウィジェット Returns GUIWidget 生成されたウィジェット定義 HorizontalHolder(GUIAlignment, params GUIWidget?[]) 横方向にウィジェットを並べます。 呼び出しを簡素化するためのオーバーロードです。 GUIWidget HorizontalHolder(GUIAlignment alignment, params GUIWidget?[] inner) Parameters alignment GUIAlignment ウィジェットの配置位置 inner GUIWidget[] 並べるウィジェット Returns GUIWidget 生成されたウィジェット定義 HorizontalMargin(float) 余白を表すウィジェットです。 Marginの呼び出しを簡素化するための冗長なメソッドです。 GUIWidget HorizontalMargin(float margin) Parameters margin float 横方向の余白 Returns GUIWidget 生成されたウィジェット定義 Image(GUIAlignment, Image, FuzzySize, GUIClickableAction?, GUIWidgetSupplier?) 画像を表示するウィジェットです。 GUIWidget Image(GUIAlignment alignment, Image image, FuzzySize size, GUIClickableAction? onClick = null, GUIWidgetSupplier? overlay = null) Parameters alignment GUIAlignment 画像の表示位置 image Image 画像 size FuzzySize 表示する大きさ onClick GUIClickableAction overlay GUIWidgetSupplier Returns GUIWidget 生成されたウィジェット定義 ItalicTextComponent(TextComponent) TextComponent ItalicTextComponent(TextComponent component) Parameters component TextComponent Returns TextComponent LocalizedButton(GUIAlignment, TextAttribute, string, GUIClickableAction, GUIClickableAction?, GUIClickableAction?, GUIClickableAction?, Color?, Color?, float?) 翻訳テキストを表示するボタンです。 Buttonメソッドの呼び出しを簡素化した冗長なメソッドです。 GUIWidget LocalizedButton(GUIAlignment alignment, TextAttribute attribute, string translationKey, GUIClickableAction onClick, GUIClickableAction? onMouseOver = null, GUIClickableAction? onMouseOut = null, GUIClickableAction? onRightClick = null, Color? color = null, Color? selectedColor = null, float? margin = null) Parameters alignment GUIAlignment ウィジェットの配置位置 attribute TextAttribute テキストの属性 translationKey string 翻訳キー onClick GUIClickableAction クリックされた際に実行するアクション onMouseOver GUIClickableAction カーソルが触れた際に実行するアクション onMouseOut GUIClickableAction カーソルが離れた際に実行するアクション onRightClick GUIClickableAction 右クリックされた際に実行するアクション color Color? ボタンの色 selectedColor Color? カーソルが重なっている時のボタンの色 margin float? Returns GUIWidget 生成されたウィジェット定義 LocalizedText(GUIAlignment, TextAttribute, string) 翻訳キーに対応する文字列のウィジェットです。 Textメソッドの呼び出しを簡素化した冗長なメソッドです。 GUIWidget LocalizedText(GUIAlignment alignment, TextAttribute attribute, string translationKey) Parameters alignment GUIAlignment ウィジェットの配置位置 attribute TextAttribute テキストの属性 translationKey string 翻訳キー Returns GUIWidget 生成されたウィジェット定義 LocalizedTextComponent(string) 翻訳テキストのコンポーネントを生成します。 TextComponent LocalizedTextComponent(string translationKey) Parameters translationKey string 翻訳キー Returns TextComponent Margin(FuzzySize) 余白を表すウィジェットです。見た目を整えるために使用します。 GUIWidget Margin(FuzzySize margin) Parameters margin FuzzySize 余白の大きさ Returns GUIWidget 生成されたウィジェット定義 Masked(GUIWidget) GUIWidget Masked(GUIWidget inner) Parameters inner GUIWidget Returns GUIWidget RawButton(GUIAlignment, TextAttribute, string, GUIClickableAction, GUIClickableAction?, GUIClickableAction?, GUIClickableAction?, Color?, Color?, float?) 生文字列を表示するボタンです。 Buttonメソッドの呼び出しを簡素化した冗長なメソッドです。 GUIWidget RawButton(GUIAlignment alignment, TextAttribute attribute, string rawText, GUIClickableAction onClick, GUIClickableAction? onMouseOver = null, GUIClickableAction? onMouseOut = null, GUIClickableAction? onRightClick = null, Color? color = null, Color? selectedColor = null, float? margin = null) Parameters alignment GUIAlignment ウィジェットの配置位置 attribute TextAttribute テキストの属性 rawText string 表示するテキスト onClick GUIClickableAction クリックされた際に実行するアクション onMouseOver GUIClickableAction カーソルが触れた際に実行するアクション onMouseOut GUIClickableAction カーソルが離れた際に実行するアクション onRightClick GUIClickableAction 右クリックされた際に実行するアクション color Color? ボタンの色 selectedColor Color? カーソルが重なっている時のボタンの色 margin float? Returns GUIWidget 生成されたウィジェット定義 RawText(GUIAlignment, TextAttribute, string) 生文字列のウィジェットです。 Textメソッドの呼び出しを簡素化した冗長なメソッドです。 GUIWidget RawText(GUIAlignment alignment, TextAttribute attribute, string rawText) Parameters alignment GUIAlignment ウィジェットの配置位置 attribute TextAttribute テキストの属性 rawText string 表示する文字列 Returns GUIWidget 生成されたウィジェット定義 RawTextComponent(string) 生文字列のテキストコンポーネントを生成します。 TextComponent RawTextComponent(string rawText) Parameters rawText string 表すテキスト Returns TextComponent テキストコンポーネント ScrollView(GUIAlignment, Size, string?, GUIWidget?, out Artifact<GUIScreen>) スクロールビューです。 GUIWidget ScrollView(GUIAlignment alignment, Size size, string? scrollerTag, GUIWidget? inner, out Artifact<GUIScreen> artifact) Parameters alignment GUIAlignment ビューの配置位置 size Size ビューの大きさ scrollerTag string スクローラー位置を再現するためのタグ inner GUIWidget ビュー内で表示するウィジェット artifact Artifact<GUIScreen> ビュー内に生成されるスクリーンへのアクセサ Returns GUIWidget 生成されたウィジェット定義 ShowOverlay(GUIWidget, GUIClickable?) オーバーレイを表示します。 void ShowOverlay(GUIWidget widget, GUIClickable? clickable = null) Parameters widget GUIWidget clickable GUIClickable SizedTextComponent(float, TextComponent) TextComponent SizedTextComponent(float size, TextComponent component) Parameters size float component TextComponent Returns TextComponent SpinButton(GUIAlignment, Action<bool>) 値の増減に使うことができるボタンです。 GUIWidget SpinButton(GUIAlignment alignment, Action<bool> onClick) Parameters alignment GUIAlignment onClick Action<bool> Returns GUIWidget Text(GUIAlignment, TextAttribute, TextComponent) 文字列のウィジェットです。 GUIWidget Text(GUIAlignment alignment, TextAttribute attribute, TextComponent text) Parameters alignment GUIAlignment ウィジェットの配置位置 attribute TextAttribute テキストの属性 text TextComponent テキストを表すコンポーネント Returns GUIWidget 生成されたウィジェット定義 TextComponent(Color, string) 色付き翻訳テキストコンポーネントを生成します。 呼び出しを簡素化するための冗長なメソッドです。 TextComponent TextComponent(Color color, string transrationKey) Parameters color Color テキスト色 transrationKey string 翻訳キー Returns TextComponent テキストコンポーネント VerticalHolder(GUIAlignment, IEnumerable<GUIWidget?>, float?) 縦方向にウィジェットを並べます。 GUIWidget VerticalHolder(GUIAlignment alignment, IEnumerable<GUIWidget?> innerReference, float? fixedWidth = null) Parameters alignment GUIAlignment ウィジェットの配置位置 innerReference IEnumerable<GUIWidget> 並べるウィジェット GUIScreen.SetWidgetの呼び出し時に評価されます fixedWidth float? ウィジェットの固定幅 nullの場合はフレキシブルに幅を設定します Returns GUIWidget 生成されたウィジェット定義 VerticalHolder(GUIAlignment, float, params GUIWidget?[]) 縦方向にウィジェットを並べます。 呼び出しを簡素化するためのオーバーロードです。 GUIWidget VerticalHolder(GUIAlignment alignment, float fixedWidth, params GUIWidget?[] inner) Parameters alignment GUIAlignment ウィジェットの配置位置 fixedWidth float ウィジェットの固定幅 nullの場合はフレキシブルに幅を設定します inner GUIWidget[] 並べるウィジェット Returns GUIWidget 生成されたウィジェット定義 VerticalHolder(GUIAlignment, params GUIWidget?[]) 縦方向にウィジェットを並べます。 呼び出しを簡素化するためのオーバーロードです。 GUIWidget VerticalHolder(GUIAlignment alignment, params GUIWidget?[] inner) Parameters alignment GUIAlignment ウィジェットの配置位置 inner GUIWidget[] 並べるウィジェット Returns GUIWidget 生成されたウィジェット定義 VerticalMargin(float) 余白を表すウィジェットです。 Marginの呼び出しを簡素化するための冗長なメソッドです。 GUIWidget VerticalMargin(float margin) Parameters margin float 縦方向の余白 Returns GUIWidget 生成されたウィジェット定義"
  },
  "api/Virial.Media.GUIAlignment.html": {
    "href": "api/Virial.Media.GUIAlignment.html",
    "title": "Enum GUIAlignment | Virial",
    "summary": "Enum GUIAlignment Namespace Virial.Media スクリーン上に表示されるオブジェクトの配置位置を指定します。 [Flags] public enum GUIAlignment Fields Bottom = 4 下方に寄せて配置します。 BottomLeft = Left | Bottom 下方左側に寄せて配置します。 BottomRight = Right | Bottom 下方右側に寄せて配置します。 Center = 0 中央に配置します。 Left = 1 左側に寄せて配置します。 Right = 2 右側に寄せて配置します。 Top = 8 上方に寄せて配置します。 TopLeft = Left | Top 上方左側に寄せて配置します。 TopRight = Right | Top 上方右側に寄せて配置します。"
  },
  "api/Virial.Media.GUIClickable.html": {
    "href": "api/Virial.Media.GUIClickable.html",
    "title": "Class GUIClickable | Virial",
    "summary": "Class GUIClickable Namespace Virial.Media GUI上のクリック可能なオブジェクトを表します。 public class GUIClickable Inheritance object GUIClickable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Selectable public IGUISelectable? Selectable { get; } Property Value IGUISelectable"
  },
  "api/Virial.Media.GUIClickableAction.html": {
    "href": "api/Virial.Media.GUIClickableAction.html",
    "title": "Delegate GUIClickableAction | Virial",
    "summary": "Delegate GUIClickableAction Namespace Virial.Media public delegate void GUIClickableAction(GUIClickable clickable) Parameters clickable GUIClickable"
  },
  "api/Virial.Media.GUIScreen.html": {
    "href": "api/Virial.Media.GUIScreen.html",
    "title": "Interface GUIScreen | Virial",
    "summary": "Interface GUIScreen Namespace Virial.Media GUIの画面を表します。 public interface GUIScreen Methods SetWidget(GUIWidget?, out Size) スクリーン上の表示を更新します。 void SetWidget(GUIWidget? Widget, out Size actualSize) Parameters Widget GUIWidget 表示するウィジェット定義 actualSize Size 生成された画面の大きさ"
  },
  "api/Virial.Media.GUIUpdatableText.html": {
    "href": "api/Virial.Media.GUIUpdatableText.html",
    "title": "Interface GUIUpdatableText | Virial",
    "summary": "Interface GUIUpdatableText Namespace Virial.Media 更新可能なテキスト public interface GUIUpdatableText Methods UpdateText(string) void UpdateText(string rawText) Parameters rawText string UpdateText(TextComponent) void UpdateText(TextComponent text) Parameters text TextComponent"
  },
  "api/Virial.Media.GUIWidget.html": {
    "href": "api/Virial.Media.GUIWidget.html",
    "title": "Class GUIWidget | Virial",
    "summary": "Class GUIWidget Namespace Virial.Media GUI上に表示できるオブジェクトの定義を表します。 public abstract class GUIWidget Inheritance object GUIWidget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GUIWidgetHelpers.AsButtonGroup(GUIWidget) GUIWidgetHelpers.Enmask(GUIWidget) GUIWidgetHelpers.Move(GUIWidget, Vector2) GUIWidgetHelpers.WithRoom(GUIWidget, Vector2) Operators implicit operator GUIWidgetSupplier(GUIWidget?) GUIWidgetをSupplierの形式に変換します。 public static implicit operator GUIWidgetSupplier(GUIWidget? widget) Parameters widget GUIWidget Returns GUIWidgetSupplier"
  },
  "api/Virial.Media.GUIWidgetHelpers.html": {
    "href": "api/Virial.Media.GUIWidgetHelpers.html",
    "title": "Class GUIWidgetHelpers | Virial",
    "summary": "Class GUIWidgetHelpers Namespace Virial.Media public static class GUIWidgetHelpers Inheritance object GUIWidgetHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AsButtonGroup(GUIWidget) public static GUIWidget AsButtonGroup(this GUIWidget inner) Parameters inner GUIWidget Returns GUIWidget Enmask(GUIWidget) public static GUIWidget Enmask(this GUIWidget inner) Parameters inner GUIWidget Returns GUIWidget Move(GUIWidget, Vector2) public static GUIWidget Move(this GUIWidget inner, Vector2 diff) Parameters inner GUIWidget diff Vector2 Returns GUIWidget WithRoom(GUIWidget, Vector2) public static GUIWidget WithRoom(this GUIWidget inner, Vector2 margin) Parameters inner GUIWidget margin Vector2 Returns GUIWidget"
  },
  "api/Virial.Media.GUIWidgetSupplier.html": {
    "href": "api/Virial.Media.GUIWidgetSupplier.html",
    "title": "Delegate GUIWidgetSupplier | Virial",
    "summary": "Delegate GUIWidgetSupplier Namespace Virial.Media public delegate GUIWidget GUIWidgetSupplier() Returns GUIWidget"
  },
  "api/Virial.Media.Hint.html": {
    "href": "api/Virial.Media.Hint.html",
    "title": "Interface Hint | Virial",
    "summary": "Interface Hint Namespace Virial.Media public interface Hint Properties GUI GUIWidgetSupplier GUI { get; } Property Value GUIWidgetSupplier"
  },
  "api/Virial.Media.HintOnlyText.html": {
    "href": "api/Virial.Media.HintOnlyText.html",
    "title": "Class HintOnlyText | Virial",
    "summary": "Class HintOnlyText Namespace Virial.Media public class HintOnlyText : Hint Inheritance object HintOnlyText Implements Hint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HintOnlyText(TextComponent, TextComponent) public HintOnlyText(TextComponent title, TextComponent detail) Parameters title TextComponent detail TextComponent"
  },
  "api/Virial.Media.HintWithImage.html": {
    "href": "api/Virial.Media.HintWithImage.html",
    "title": "Class HintWithImage | Virial",
    "summary": "Class HintWithImage Namespace Virial.Media public class HintWithImage : Hint Inheritance object HintWithImage Implements Hint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HintWithImage(Image, TextComponent, TextComponent) public HintWithImage(Image image, TextComponent title, TextComponent detail) Parameters image Image title TextComponent detail TextComponent"
  },
  "api/Virial.Media.IDocument.html": {
    "href": "api/Virial.Media.IDocument.html",
    "title": "Interface IDocument | Virial",
    "summary": "Interface IDocument Namespace Virial.Media public interface IDocument Methods Build(Artifact<GUIScreen>?) クリック操作等によって画面遷移をする場合には、targetを使用することもできます。 GUIWidget? Build(Artifact<GUIScreen>? target) Parameters target Artifact<GUIScreen> Returns GUIWidget"
  },
  "api/Virial.Media.IDocumentWithId.html": {
    "href": "api/Virial.Media.IDocumentWithId.html",
    "title": "Interface IDocumentWithId | Virial",
    "summary": "Interface IDocumentWithId Namespace Virial.Media public interface IDocumentWithId : IDocument Inherited Members IDocument.Build(Artifact<GUIScreen>) Methods OnSetId(string) void OnSetId(string documentId) Parameters documentId string"
  },
  "api/Virial.Media.IGUISelectable.html": {
    "href": "api/Virial.Media.IGUISelectable.html",
    "title": "Interface IGUISelectable | Virial",
    "summary": "Interface IGUISelectable Namespace Virial.Media public interface IGUISelectable Properties IsSelected bool IsSelected { get; } Property Value bool Methods Select() void Select() Unselect() void Unselect()"
  },
  "api/Virial.Media.IManageableAsset.html": {
    "href": "api/Virial.Media.IManageableAsset.html",
    "title": "Interface IManageableAsset | Virial",
    "summary": "Interface IManageableAsset Namespace Virial.Media public interface IManageableAsset Methods LoadAsset() IEnumerator LoadAsset() Returns IEnumerator MarkAsUnloadAsset() void MarkAsUnloadAsset() UnloadAsset() void UnloadAsset()"
  },
  "api/Virial.Media.INebulaResource.html": {
    "href": "api/Virial.Media.INebulaResource.html",
    "title": "Interface INebulaResource | Virial",
    "summary": "Interface INebulaResource Namespace Virial.Media 名前に紐づけられたリソースを取得します。 public interface INebulaResource Methods AsCommand() コマンドとして取得します。 ICommand? AsCommand() Returns ICommand AsCommandToken() コマンドトークンとして取得します。 ICommandToken? AsCommandToken() Returns ICommandToken AsExecutable() 実行可能オブジェクトとして取得します。 IExecutable? AsExecutable() Returns IExecutable AsImage(float) 画像として取得します。 Image? AsImage(float defaultPixsPerUnit = 100) Parameters defaultPixsPerUnit float Returns Image AsMultiImage(int, int, float) 複数枚からなる画像として取得します。 MultiImage? AsMultiImage(int x, int y, float defaultPixsPerUnit = 100) Parameters x int y int defaultPixsPerUnit float Returns MultiImage AsStream() ストリームとして取得します。 Stream? AsStream() Returns Stream AsString() 文字列として取得します。 string? AsString() Returns string"
  },
  "api/Virial.Media.IResourceAllocator.html": {
    "href": "api/Virial.Media.IResourceAllocator.html",
    "title": "Interface IResourceAllocator | Virial",
    "summary": "Interface IResourceAllocator Namespace Virial.Media リソースのアロケータを表します。 public interface IResourceAllocator Methods GetResource(string) アドレスからリソースを取得します。 INebulaResource? GetResource(string name) Parameters name string 名前。 Returns INebulaResource"
  },
  "api/Virial.Media.IVariableNamespaceAllocator.html": {
    "href": "api/Virial.Media.IVariableNamespaceAllocator.html",
    "title": "Interface IVariableNamespaceAllocator | Virial",
    "summary": "Interface IVariableNamespaceAllocator Namespace Virial.Media public interface IVariableNamespaceAllocator : IResourceAllocator Inherited Members IResourceAllocator.GetResource(string) Methods Register(string, IResourceAllocator) void Register(string name, IResourceAllocator allocator) Parameters name string allocator IResourceAllocator"
  },
  "api/Virial.Media.IVariableResourceAllocator.html": {
    "href": "api/Virial.Media.IVariableResourceAllocator.html",
    "title": "Interface IVariableResourceAllocator | Virial",
    "summary": "Interface IVariableResourceAllocator Namespace Virial.Media public interface IVariableResourceAllocator : IResourceAllocator Inherited Members IResourceAllocator.GetResource(string) Methods Register(string, INebulaResource) void Register(string name, INebulaResource resource) Parameters name string resource INebulaResource"
  },
  "api/Virial.Media.Image.html": {
    "href": "api/Virial.Media.Image.html",
    "title": "Interface Image | Virial",
    "summary": "Interface Image Namespace Virial.Media 画像メディアを表します。 public interface Image : IManageableAsset Inherited Members IManageableAsset.UnloadAsset() IManageableAsset.LoadAsset() IManageableAsset.MarkAsUnloadAsset()"
  },
  "api/Virial.Media.Localization.html": {
    "href": "api/Virial.Media.Localization.html",
    "title": "Class Localization | Virial",
    "summary": "Class Localization Namespace Virial.Media public static class Localization Inheritance object Localization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentLanguage public static Translator? CurrentLanguage { get; } Property Value Translator Methods Translate(string) 現在の言語で翻訳されたテキストを返します。 public static string Translate(string key) Parameters key string Returns string"
  },
  "api/Virial.Media.MultiImage.html": {
    "href": "api/Virial.Media.MultiImage.html",
    "title": "Interface MultiImage | Virial",
    "summary": "Interface MultiImage Namespace Virial.Media 複数の画像メディアを表します。 public interface MultiImage : IManageableAsset Inherited Members IManageableAsset.UnloadAsset() IManageableAsset.LoadAsset() IManageableAsset.MarkAsUnloadAsset() Methods AsLoader(int) Image AsLoader(int index) Parameters index int Returns Image"
  },
  "api/Virial.Media.NamespaceAllocator.html": {
    "href": "api/Virial.Media.NamespaceAllocator.html",
    "title": "Class NamespaceAllocator | Virial",
    "summary": "Class NamespaceAllocator Namespace Virial.Media 子空間を持つのみのアロケータ public class NamespaceAllocator : IVariableNamespaceAllocator, IResourceAllocator Inheritance object NamespaceAllocator Implements IVariableNamespaceAllocator IResourceAllocator Derived VariableResourceAllocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetResource(IReadOnlyArray<string>, string) protected virtual INebulaResource? GetResource(IReadOnlyArray<string> namespaceArray, string name) Parameters namespaceArray IReadOnlyArray<string> name string Returns INebulaResource"
  },
  "api/Virial.Media.Translator.html": {
    "href": "api/Virial.Media.Translator.html",
    "title": "Interface Translator | Virial",
    "summary": "Interface Translator Namespace Virial.Media public interface Translator Methods Translate(string) string Translate(string key) Parameters key string Returns string"
  },
  "api/Virial.Media.VariableResourceAllocator.html": {
    "href": "api/Virial.Media.VariableResourceAllocator.html",
    "title": "Class VariableResourceAllocator | Virial",
    "summary": "Class VariableResourceAllocator Namespace Virial.Media public class VariableResourceAllocator : NamespaceAllocator, IVariableNamespaceAllocator, IVariableResourceAllocator, IResourceAllocator Inheritance object NamespaceAllocator VariableResourceAllocator Implements IVariableNamespaceAllocator IVariableResourceAllocator IResourceAllocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetResource(IReadOnlyArray<string>, string) protected override INebulaResource? GetResource(IReadOnlyArray<string> namespaceArray, string name) Parameters namespaceArray IReadOnlyArray<string> name string Returns INebulaResource"
  },
  "api/Virial.Media.html": {
    "href": "api/Virial.Media.html",
    "title": "Namespace Virial.Media | Virial",
    "summary": "Namespace Virial.Media Classes Anchor 画面の基準点を表します。 生成されたスクリーン上の点と空間上の点は同じ位置にくるように重ね合わせられます。 GUIClickable GUI上のクリック可能なオブジェクトを表します。 GUIWidget GUI上に表示できるオブジェクトの定義を表します。 GUIWidgetHelpers HintOnlyText HintWithImage Localization NamespaceAllocator 子空間を持つのみのアロケータ VariableResourceAllocator Interfaces GUI GUI上に表示する各種オブジェクトの定義や関連するオブジェクトを生成できます。 GUIScreen GUIの画面を表します。 GUIUpdatableText 更新可能なテキスト Hint IDocument IDocumentWithId IGUISelectable IManageableAsset INebulaResource 名前に紐づけられたリソースを取得します。 IResourceAllocator リソースのアロケータを表します。 IVariableNamespaceAllocator IVariableResourceAllocator Image 画像メディアを表します。 MultiImage 複数の画像メディアを表します。 Translator Enums GUIAlignment スクリーン上に表示されるオブジェクトの配置位置を指定します。 Delegates GUIClickableAction GUIWidgetSupplier"
  },
  "api/Virial.NebulaAPI.html": {
    "href": "api/Virial.NebulaAPI.html",
    "title": "Class NebulaAPI | Virial",
    "summary": "Class NebulaAPI Namespace Virial public static class NebulaAPI Inheritance object NebulaAPI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties APIVersion public static Version APIVersion { get; } Property Value Version AddonAsset public static IResourceAllocator AddonAsset { get; } Property Value IResourceAllocator Configurations オプションやゲーム内共有変数に関するモジュールです。 public static Configurations Configurations { get; } Property Value Configurations CurrentGame 現在のゲームを取得します。 public static Game? CurrentGame { get; } Property Value Game GUI GUIモジュールです。 public static GUI GUI { get; } Property Value GUI Hasher 不変なハッシュ値を生成するモジュールです。 public static IHasher Hasher { get; } Property Value IHasher InnerslothAsset public static IResourceAllocator InnerslothAsset { get; } Property Value IResourceAllocator Language 翻訳モジュールです。 public static Translator Language { get; } Property Value Translator Modules モジュールを生成するファクトリメソッド群です。 public static IModuleFactory Modules { get; } Property Value IModuleFactory NebulaAsset public static IResourceAllocator NebulaAsset { get; } Property Value IResourceAllocator Preprocessor プリプロセッサを取得します。 プリプロセス終了後はnullが返ります。 public static NebulaPreprocessor? Preprocessor { get; } Property Value NebulaPreprocessor Methods CreateRPCSection(string?) 一括で送信するRPCをまとめるセクションを取得します。 セクション内のRPCは、全クライアントでの同時かつ同順序の実行が保証されます。 public static IDisposable CreateRPCSection(string? label = null) Parameters label string Returns IDisposable RPCセクション。戻り値をusingステートメントで使用すると一括でまとめられるRPCを視覚的に把握しやすくなります。 Remarks v3.1.0で追加。 CreateStatsEntry(string, GameStatsCategory, DefinedAssignable?, TextComponent?, int) public static GameStatsEntry CreateStatsEntry(string id, GameStatsCategory category, DefinedAssignable? assignable = null, TextComponent? displayTitle = null, int innerPriority = 0) Parameters id string category GameStatsCategory assignable DefinedAssignable displayTitle TextComponent innerPriority int Returns GameStatsEntry GetAddon(string) public static IResourceAllocator? GetAddon(string addonId) Parameters addonId string Returns IResourceAllocator GetGhostRole(string) 定義済み幽霊役職を取得します。 public static DefinedGhostRole? GetGhostRole(string internalName) Parameters internalName string Returns DefinedGhostRole GetModifier(string) 定義済みモディファイアを取得します。 public static DefinedModifier? GetModifier(string internalName) Parameters internalName string Returns DefinedModifier GetRole(string) 定義済み役職を取得します。 public static DefinedRole? GetRole(string internalName) Parameters internalName string Returns DefinedRole Get<T>() public static T? Get<T>() where T : class Returns T Type Parameters T IncrementStatsEntry(string, int) public static void IncrementStatsEntry(string entryId, int num = 1) Parameters entryId string num int Progress(GameStatsEntry, int) public static void Progress(this GameStatsEntry entry, int num = 1) Parameters entry GameStatsEntry num int RegisterTip(IDocumentTip) ドキュメント内で表示される要素を追加します。 現在、WinConditionTipのみ使用可能です。 WinConditionTipの場合、勝利条件一覧に表示されます。 public static void RegisterTip(IDocumentTip tip) Parameters tip IDocumentTip RunEvent<E>(E) イベントを実行します。 public static E RunEvent<E>(E ev) where E : class, Event Parameters ev E Returns E Type Parameters E"
  },
  "api/Virial.NonHostPlayerException.html": {
    "href": "api/Virial.NonHostPlayerException.html",
    "title": "Class NonHostPlayerException | Virial",
    "summary": "Class NonHostPlayerException Namespace Virial public class NonHostPlayerException : Exception, ISerializable Inheritance object Exception NonHostPlayerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NonHostPlayerException(string?, Exception?) public NonHostPlayerException(string? message, Exception? innerException = null) Parameters message string innerException Exception"
  },
  "api/Virial.NonOwnerPlayerException.html": {
    "href": "api/Virial.NonOwnerPlayerException.html",
    "title": "Class NonOwnerPlayerException | Virial",
    "summary": "Class NonOwnerPlayerException Namespace Virial public class NonOwnerPlayerException : Exception, ISerializable Inheritance object Exception NonOwnerPlayerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NonOwnerPlayerException(string?, Exception?) public NonOwnerPlayerException(string? message, Exception? innerException = null) Parameters message string innerException Exception"
  },
  "api/Virial.Runtime.NebulaPreprocessor.html": {
    "href": "api/Virial.Runtime.NebulaPreprocessor.html",
    "title": "Interface NebulaPreprocessor | Virial",
    "summary": "Interface NebulaPreprocessor Namespace Virial.Runtime public interface NebulaPreprocessor Properties DIManager DIManager DIManager { get; } Property Value DIManager FinishPreprocess bool FinishPreprocess { get; } Property Value bool Methods CreateEnd(string, Color, int) 新たなゲーム終了を追加します。 GameEnd CreateEnd(string localizedName, Color color, int priority = 32) Parameters localizedName string ゲーム終了の翻訳名。他のゲーム終了と重複しない名前を付けてください。 color Color 色。 priority int 勝利の優先度。この値が大きいほど優先されます。 Returns GameEnd CreateEnd(string, TextComponent, Color, int) 新たなゲーム終了を追加します。 GameEnd CreateEnd(string immutableId, TextComponent displayText, Color color, int priority = 32) Parameters immutableId string ゲーム終了の不変な内部名。他のゲーム終了と重複しない名前を付けてください。 displayText TextComponent ゲーム終了の表示テキスト。 color Color 色。 priority int 勝利の優先度。この値が大きいほど優先されます。 Returns GameEnd CreateExtraWin(string, Color) 新たな追加勝利を追加します。 ExtraWin CreateExtraWin(string localizedName, Color color) Parameters localizedName string 追加勝利の翻訳名。他の追加勝利と重複しない名前を付けてください。 color Color 色。 Returns ExtraWin CreateExtraWin(string, TextComponent, Color) 新たな追加勝利を追加します。 ExtraWin CreateExtraWin(string immutableId, TextComponent displayText, Color color) Parameters immutableId string 追加勝利の不変な内部名。他のゲーム終了と重複しない名前を付けてください。 displayText TextComponent 追加勝利の表示テキスト。 color Color 色。 Returns ExtraWin CreateTeam(string, Color, TeamRevealType) 新たなロールチームを追加します。 RoleTeam CreateTeam(string translationKey, Color color, TeamRevealType revealType) Parameters translationKey string color Color revealType TeamRevealType Returns RoleTeam RegisterAssignable(DefinedAssignable) 新たなプレイヤーアサイナブルを追加します。 役職かモディファイア、幽霊役職である必要があります。 void RegisterAssignable(DefinedAssignable assignable) Parameters assignable DefinedAssignable SchedulePreprocess(PreprocessPhase, Action) void SchedulePreprocess(PreprocessPhase phase, Action process) Parameters phase PreprocessPhase process Action SchedulePreprocess(PreprocessPhase, IEnumerator) void SchedulePreprocess(PreprocessPhase phase, IEnumerator process) Parameters phase PreprocessPhase process IEnumerator SetLoadingText(string) ローディング中のテキストを差し替えます。 IEnumerator SetLoadingText(string text) Parameters text string Returns IEnumerator"
  },
  "api/Virial.Runtime.NebulaRuntime.html": {
    "href": "api/Virial.Runtime.NebulaRuntime.html",
    "title": "Interface NebulaRuntime | Virial",
    "summary": "Interface NebulaRuntime Namespace Virial.Runtime public interface NebulaRuntime"
  },
  "api/Virial.Runtime.html": {
    "href": "api/Virial.Runtime.html",
    "title": "Namespace Virial.Runtime | Virial",
    "summary": "Namespace Virial.Runtime Interfaces NebulaPreprocessor NebulaRuntime"
  },
  "api/Virial.SimpleLifespan.html": {
    "href": "api/Virial.SimpleLifespan.html",
    "title": "Class SimpleLifespan | Virial",
    "summary": "Class SimpleLifespan Namespace Virial ごく単純な寿命オブジェクトを表します。 Release操作によってのみキルできます。 public class SimpleLifespan : ILifespan, IReleasable Inheritance object SimpleLifespan Implements ILifespan IReleasable Derived RuntimeAssignableTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsDeadObject 寿命の尽きたオブジェクトはtrueを返します。 public bool IsDeadObject { get; } Property Value bool Methods OnReleased() 解放されたときに呼び出されます。 一度だけ呼び出されます。 protected virtual void OnReleased() Release() public void Release()"
  },
  "api/Virial.Text.AbstractDocumentTip.html": {
    "href": "api/Virial.Text.AbstractDocumentTip.html",
    "title": "Class AbstractDocumentTip | Virial",
    "summary": "Class AbstractDocumentTip Namespace Virial.Text public abstract class AbstractDocumentTip : IDocumentTip Inheritance object AbstractDocumentTip Implements IDocumentTip Derived AbstractDocumentTitledTip Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbstractDocumentTip(Func<bool>, Func<string>) public AbstractDocumentTip(Func<bool> predicate, Func<string> text) Parameters predicate Func<bool> text Func<string> Properties IsActive このDocumentTipが表示される場合はtrueを返します。 public bool IsActive { get; } Property Value bool Text public string Text { get; } Property Value string"
  },
  "api/Virial.Text.AbstractDocumentTitledTip.html": {
    "href": "api/Virial.Text.AbstractDocumentTitledTip.html",
    "title": "Class AbstractDocumentTitledTip | Virial",
    "summary": "Class AbstractDocumentTitledTip Namespace Virial.Text public abstract class AbstractDocumentTitledTip : AbstractDocumentTip, IDocumentTitledTip, IDocumentTip Inheritance object AbstractDocumentTip AbstractDocumentTitledTip Implements IDocumentTitledTip IDocumentTip Derived WinConditionTip Inherited Members AbstractDocumentTip.IsActive AbstractDocumentTip.Text object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AbstractDocumentTitledTip(Func<bool>, Func<string>, Func<string>) public AbstractDocumentTitledTip(Func<bool> predicate, Func<string> title, Func<string> text) Parameters predicate Func<bool> title Func<string> text Func<string> Properties Title public string Title { get; } Property Value string"
  },
  "api/Virial.Text.AttributeAsset.html": {
    "href": "api/Virial.Text.AttributeAsset.html",
    "title": "Enum AttributeAsset | Virial",
    "summary": "Enum AttributeAsset Namespace Virial.Text public enum AttributeAsset Fields CenteredBold = 3 中揃えの小見出しや注目を浴びるテキスト向けの可変サイズテキスト属性です。 CenteredBoldFixed = 4 中揃えの小見出しやボタン向けの固定サイズテキスト属性です。 DeviceButton = 13 VC Settingsのデバイス設定で使用している横長のボタンです。 DocumentBold = 9 SerializableDocumentのTextStyle\"Bold\"で提供されているテキスト属性です。 DocumentStandard = 8 SerializableDocumentのTextStyle\"Standard\"で提供されているテキスト属性です。 DocumentSubtitle1 = 11 DocumentTitleより小さく、DocumentSubtitle2より大きいテキスト属性です。 DocumentSubtitle2 = 12 DocumentSubtitle1より小さく、DocumentStandardより大きいテキスト属性です。 DocumentTitle = 10 SerializableDocumentのTextStyle\"Title\"で提供されているテキスト属性です。 LeftBoldFixed = 5 左揃えの小見出しやボタン向けの固定サイズテキスト属性です。 MarketplaceBlurb = 26 マーケットプレイスの見出しで使われている固定長テキスト属性です。 MarketplaceCategoryButton = 28 マーケットプレイスでアドオンとコスチュームの切り替えボタンに使われているテキスト属性です。 MarketplaceDeveloper = 25 マーケットプレイスの作者名で使われている固定長テキスト属性です。 MarketplacePublishButton = 27 マーケットプレイスで四角いボタンに使われているテキスト属性です。 MarketplaceTabButton = 29 マーケットプレイスでタブボタンに使用されているテキスト属性です。 MarketplaceTitle = 24 マーケットプレイスのタイトルで使われている固定長テキスト属性です。 MeetingTitle = 30 会議中に表示される称号で使用されているテキスト属性です。 MetaRoleButton = 32 フリープレイの役職選択ボタンで使用されているテキスト属性です。 OblongHeader = 0 タイトル画面の縦長の文字です。実績確認画面のヘッダーなどで使われています。 OptionsButton = 19 オプション値の変更ボタンで使用している固定長テキスト属性です。 OptionsButtonLonger = 21 クールダウンオプションで設定方法を変更するボタンで使用されている固定長テキスト属性です。 OptionsButtonMedium = 20 真偽値オプションで使用されている固定長テキスト属性です。 OptionsFlexible = 22 オプション値やオプション名と同じフォントの可変テキスト属性です。 OptionsGroupTitle = 23 グループ化されたオプションのタイトルで使用される可変長テキスト属性です。 OptionsTitle = 14 オプションの名称の表示で使用している固定長テキスト属性です。 OptionsTitleHalf = 15 オプションの名称の表示で使用している固定長テキスト属性です。 OptionsTitleShortest = 16 オプションの名称の表示で使用している固定長テキスト属性です。 OptionsValue = 17 オプションの値の表示で使用している固定長テキスト属性です。 OptionsValueShorter = 18 オプションの値の表示で使用している固定長テキスト属性です。 OverlayContent = 7 主にオーバーレイ向けの本文用可変サイズテキスト属性です。 OverlayTitle = 6 主にオーバーレイ向けの見出し用可変サイズテキスト属性です。 SmallArrowButton = 34 配役タブの人数設定で使用している小さな矢印のためのテキスト属性です。 SmallWideButton = 33 配役タブの人数設定で使用している横長の小さなテキスト属性です。 StandardLargeWideMasked = 2 ボタン向けの固定サイズテキスト属性です。 Preset読み込み画面の各プリセットのボタンと同じ大きさです。 StandardMediumMasked = 1 ボタン向けの固定サイズテキスト属性です。 Preset読み込み画面のReloadボタン、Save As...ボタンと同じ大きさです。 VersionShower = 31 ロビーでのバージョン表示で使用されているテキスト属性です。"
  },
  "api/Virial.Text.AttributeParams.html": {
    "href": "api/Virial.Text.AttributeParams.html",
    "title": "Enum AttributeParams | Virial",
    "summary": "Enum AttributeParams Namespace Virial.Text [Flags] public enum AttributeParams Fields Oblong = 34 OblongBared = 98 OblongBaredLeft = 82 OblongLeft = 18 Standard = 289 StandardBared = 353 StandardBaredBold = 481 StandardBaredBoldLeft = 465 StandardBaredBoldLeftNonFlexible = 209 StandardBaredBoldNonFlexible = 225 StandardBaredLeft = 337 StandardBaredLeftNonFlexible = 81 StandardBaredNonFlexible = 97 StandardBold = 417 StandardBoldLeft = 401 StandardBoldLeftNonFlexible = 145 StandardBoldNonFlexible = 161 StandardLeft = 273 StandardLeftNonFlexible = 17 StandardNonFlexible = 33"
  },
  "api/Virial.Text.CombinedTextComponent.html": {
    "href": "api/Virial.Text.CombinedTextComponent.html",
    "title": "Class CombinedTextComponent | Virial",
    "summary": "Class CombinedTextComponent Namespace Virial.Text public class CombinedTextComponent : TextComponent Inheritance object CombinedTextComponent Implements TextComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TextHelper.WithComparison(TextComponent, string) TextComponentHelper.Bold(TextComponent) TextComponentHelper.Color(TextComponent, Color) TextComponentHelper.Italic(TextComponent) TextComponentHelper.Size(TextComponent, float) Constructors CombinedTextComponent(params TextComponent[]) public CombinedTextComponent(params TextComponent[] components) Parameters components TextComponent[] Methods GetString() public string GetString() Returns string"
  },
  "api/Virial.Text.CommunicableTextTag.html": {
    "href": "api/Virial.Text.CommunicableTextTag.html",
    "title": "Interface CommunicableTextTag | Virial",
    "summary": "Interface CommunicableTextTag Namespace Virial.Text 翻訳キーに一意的な意味を与えるタグです。 public interface CommunicableTextTag Properties TranslationKey 翻訳キーを取得します。 string TranslationKey { get; } Property Value string"
  },
  "api/Virial.Text.EventDetails.html": {
    "href": "api/Virial.Text.EventDetails.html",
    "title": "Class EventDetails | Virial",
    "summary": "Class EventDetails Namespace Virial.Text 記録されたイベントの概要を説明するタグです。 public static class EventDetails Inheritance object EventDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Accident Buskerによる復活の失敗を表します。 public static CommunicableTextTag Accident { get; } Property Value CommunicableTextTag BaitReport Baitレポートによる会議の開始を表します。 public static CommunicableTextTag BaitReport { get; } Property Value CommunicableTextTag Balloon public static CommunicableTextTag Balloon { get; } Property Value CommunicableTextTag Bubbled public static CommunicableTextTag Bubbled { get; } Property Value CommunicableTextTag Clean Cleanerによる死体消去を表します。 public static CommunicableTextTag Clean { get; } Property Value CommunicableTextTag Disconnect プレイヤーの切断を表します。 public static CommunicableTextTag Disconnect { get; } Property Value CommunicableTextTag Eat Vultureによる死体消去を表します。 public static CommunicableTextTag Eat { get; } Property Value CommunicableTextTag Embroil Provocateurによる巻き込みの発生を表します。 public static CommunicableTextTag Embroil { get; } Property Value CommunicableTextTag EmergencyButton 緊急ボタンによる会議の開始を表します。 public static CommunicableTextTag EmergencyButton { get; } Property Value CommunicableTextTag Exiled 追放の発生を表します。 public static CommunicableTextTag Exiled { get; } Property Value CommunicableTextTag GameEnd ゲームの終了を表します。 public static CommunicableTextTag GameEnd { get; } Property Value CommunicableTextTag GameStart ゲームの開始を表します。 public static CommunicableTextTag GameStart { get; } Property Value CommunicableTextTag Gassed Thuriferの遅延キルを表します。 public static CommunicableTextTag Gassed { get; } Property Value CommunicableTextTag Guess Guesserによる成功した推察の発生を表します。 public static CommunicableTextTag Guess { get; } Property Value CommunicableTextTag Kill キルの発生を表します。 public static CommunicableTextTag Kill { get; } Property Value CommunicableTextTag MeetingEnd 会議の終了を表します。 public static CommunicableTextTag MeetingEnd { get; } Property Value CommunicableTextTag Meteor public static CommunicableTextTag Meteor { get; } Property Value CommunicableTextTag Misfire Sheriffの誤射を表します。 public static CommunicableTextTag Misfire { get; } Property Value CommunicableTextTag Missed Guesserによる推察の失敗やRaiderによるキルを伴わない斧の投擲を表します。 public static CommunicableTextTag Missed { get; } Property Value CommunicableTextTag Report Baitレポートを除く通報による会議の開始を表します。 public static CommunicableTextTag Report { get; } Property Value CommunicableTextTag Revive プレイヤーの復活を表します。 public static CommunicableTextTag Revive { get; } Property Value CommunicableTextTag Trap Evil Trapperのキルトラップの発動を表します。 public static CommunicableTextTag Trap { get; } Property Value CommunicableTextTag"
  },
  "api/Virial.Text.Font.html": {
    "href": "api/Virial.Text.Font.html",
    "title": "Interface Font | Virial",
    "summary": "Interface Font Namespace Virial.Text public interface Font"
  },
  "api/Virial.Text.FontAsset.html": {
    "href": "api/Virial.Text.FontAsset.html",
    "title": "Enum FontAsset | Virial",
    "summary": "Enum FontAsset Namespace Virial.Text public enum FontAsset Fields Barlow = 5 Gothic = 0 GothicMasked = 1 Oblong = 2 OblongMasked = 3 Prespawn = 4"
  },
  "api/Virial.Text.FontSize.html": {
    "href": "api/Virial.Text.FontSize.html",
    "title": "Class FontSize | Virial",
    "summary": "Class FontSize Namespace Virial.Text public class FontSize Inheritance object FontSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FontSize(float, bool) public FontSize(float fontSize, bool allowAutoSizing = true) Parameters fontSize float allowAutoSizing bool FontSize(float, float, float, bool) public FontSize(float fontSize, float fontSizeMin, float fontSizeMax, bool allowAutoSizing = true) Parameters fontSize float fontSizeMin float fontSizeMax float allowAutoSizing bool"
  },
  "api/Virial.Text.FontStyle.html": {
    "href": "api/Virial.Text.FontStyle.html",
    "title": "Enum FontStyle | Virial",
    "summary": "Enum FontStyle Namespace Virial.Text [Flags] public enum FontStyle Fields Bold = 1 Italic = 2 Normal = 0"
  },
  "api/Virial.Text.IDocumentTip.html": {
    "href": "api/Virial.Text.IDocumentTip.html",
    "title": "Interface IDocumentTip | Virial",
    "summary": "Interface IDocumentTip Namespace Virial.Text public interface IDocumentTip Properties IsActive このDocumentTipが表示される場合はtrueを返します。 bool IsActive { get; } Property Value bool Text string Text { get; } Property Value string"
  },
  "api/Virial.Text.IDocumentTitledTip.html": {
    "href": "api/Virial.Text.IDocumentTitledTip.html",
    "title": "Interface IDocumentTitledTip | Virial",
    "summary": "Interface IDocumentTitledTip Namespace Virial.Text public interface IDocumentTitledTip : IDocumentTip Inherited Members IDocumentTip.IsActive IDocumentTip.Text Properties Title string Title { get; } Property Value string"
  },
  "api/Virial.Text.PlayerStates.html": {
    "href": "api/Virial.Text.PlayerStates.html",
    "title": "Class PlayerStates | Virial",
    "summary": "Class PlayerStates Namespace Virial.Text プレイヤーの状態を表すために使用されるタグです。 public static class PlayerStates Inheritance object PlayerStates Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Alive 生存している状態を表します。 public static CommunicableTextTag Alive { get; } Property Value CommunicableTextTag Balloon public static CommunicableTextTag Balloon { get; } Property Value CommunicableTextTag Beaten Raiderの斧によって死亡した状態を表します。 public static CommunicableTextTag Beaten { get; } Property Value CommunicableTextTag Bubbled public static CommunicableTextTag Bubbled { get; } Property Value CommunicableTextTag Dead 特筆すべき死因によらず死亡した状態を表します。 public static CommunicableTextTag Dead { get; } Property Value CommunicableTextTag Embroiled Provocateurの巻き込みによって死亡した状態を表します。 public static CommunicableTextTag Embroiled { get; } Property Value CommunicableTextTag Exiled 追放された状態を表します。 public static CommunicableTextTag Exiled { get; } Property Value CommunicableTextTag Gassed public static CommunicableTextTag Gassed { get; } Property Value CommunicableTextTag Guessed Guesserに推察されて死亡した状態を表します。 public static CommunicableTextTag Guessed { get; } Property Value CommunicableTextTag Lost public static CommunicableTextTag Lost { get; } Property Value CommunicableTextTag Meteor public static CommunicableTextTag Meteor { get; } Property Value CommunicableTextTag Misfired Sheriffが誤射によって死亡した状態を表します。 public static CommunicableTextTag Misfired { get; } Property Value CommunicableTextTag Misguessed Guesserの誤った推察によって自滅した状態を表します。 public static CommunicableTextTag Misguessed { get; } Property Value CommunicableTextTag Pseudocide Buskerが偽装死した状態を表します。今後Buskerは復活する可能性があります。 public static CommunicableTextTag Pseudocide { get; } Property Value CommunicableTextTag Revived 何らかの理由で復活した状態を表します。 public static CommunicableTextTag Revived { get; } Property Value CommunicableTextTag Sniped Sniperによって撃ち抜かれて死亡した状態を表します。 public static CommunicableTextTag Sniped { get; } Property Value CommunicableTextTag Suicide Loversが後追い自殺した状態を表します。 public static CommunicableTextTag Suicide { get; } Property Value CommunicableTextTag Trapped Evil Trapperのキルトラップに引っかかって死亡した状態を表します。 public static CommunicableTextTag Trapped { get; } Property Value CommunicableTextTag"
  },
  "api/Virial.Text.TextAlignment.html": {
    "href": "api/Virial.Text.TextAlignment.html",
    "title": "Enum TextAlignment | Virial",
    "summary": "Enum TextAlignment Namespace Virial.Text public enum TextAlignment Fields Bottom = 1026 BottomLeft = 1025 BottomRight = 1028 Center = 514 Left = 513 Right = 516 Top = 258 TopLeft = 257 TopRight = 260"
  },
  "api/Virial.Text.TextAttribute.html": {
    "href": "api/Virial.Text.TextAttribute.html",
    "title": "Class TextAttribute | Virial",
    "summary": "Class TextAttribute Namespace Virial.Text public class TextAttribute Inheritance object TextAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TextAttribute(TextAlignment, Font, FontStyle, FontSize, Size, Color, bool, float?) public TextAttribute(TextAlignment alignment, Font font, FontStyle style, FontSize fontSize, Size size, Color color, bool isFlexible, float? outlineWidth = null) Parameters alignment TextAlignment font Font style FontStyle fontSize FontSize size Size color Color isFlexible bool outlineWidth float? TextAttribute(TextAttribute) public TextAttribute(TextAttribute original) Parameters original TextAttribute Properties Alignment public TextAlignment Alignment { get; init; } Property Value TextAlignment Color public Color Color { get; init; } Property Value Color Font public Font Font { get; init; } Property Value Font FontSize public FontSize FontSize { get; init; } Property Value FontSize IsFlexible public bool IsFlexible { get; init; } Property Value bool OutlineWidth public float? OutlineWidth { get; init; } Property Value float? Size public Size Size { get; init; } Property Value Size Style public FontStyle Style { get; init; } Property Value FontStyle Wrapping public bool Wrapping { get; init; } Property Value bool Operators implicit operator TextAttribute(AttributeAsset) public static implicit operator TextAttribute(AttributeAsset asset) Parameters asset AttributeAsset Returns TextAttribute implicit operator TextAttribute(AttributeParams) public static implicit operator TextAttribute(AttributeParams param) Parameters param AttributeParams Returns TextAttribute"
  },
  "api/Virial.Text.TextComponent.html": {
    "href": "api/Virial.Text.TextComponent.html",
    "title": "Interface TextComponent | Virial",
    "summary": "Interface TextComponent Namespace Virial.Text public interface TextComponent Extension Methods TextHelper.WithComparison(TextComponent, string) TextComponentHelper.Bold(TextComponent) TextComponentHelper.Color(TextComponent, Color) TextComponentHelper.Italic(TextComponent) TextComponentHelper.Size(TextComponent, float) Properties TextForCompare string TextForCompare { get; } Property Value string Methods GetString() string GetString() Returns string"
  },
  "api/Virial.Text.TextComponentHelper.html": {
    "href": "api/Virial.Text.TextComponentHelper.html",
    "title": "Class TextComponentHelper | Virial",
    "summary": "Class TextComponentHelper Namespace Virial.Text public static class TextComponentHelper Inheritance object TextComponentHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Bold(TextComponent) public static TextComponent Bold(this TextComponent component) Parameters component TextComponent Returns TextComponent Color(TextComponent, Color) public static TextComponent Color(this TextComponent component, Color color) Parameters component TextComponent color Color Returns TextComponent Italic(TextComponent) public static TextComponent Italic(this TextComponent component) Parameters component TextComponent Returns TextComponent Lines(params TextComponent[]) public static TextComponent Lines(params TextComponent[] components) Parameters components TextComponent[] Returns TextComponent Size(TextComponent, float) public static TextComponent Size(this TextComponent component, float size) Parameters component TextComponent size float Returns TextComponent"
  },
  "api/Virial.Text.WinConditionTip.html": {
    "href": "api/Virial.Text.WinConditionTip.html",
    "title": "Class WinConditionTip | Virial",
    "summary": "Class WinConditionTip Namespace Virial.Text public class WinConditionTip : AbstractDocumentTitledTip, IDocumentTitledTip, IDocumentTip Inheritance object AbstractDocumentTip AbstractDocumentTitledTip WinConditionTip Implements IDocumentTitledTip IDocumentTip Inherited Members AbstractDocumentTitledTip.Title AbstractDocumentTip.IsActive AbstractDocumentTip.Text object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WinConditionTip(GameEnd, Func<bool>, Func<string>, Func<string>) public WinConditionTip(GameEnd end, Func<bool> predicate, Func<string> title, Func<string> text) Parameters end GameEnd predicate Func<bool> title Func<string> text Func<string> Properties End public GameEnd End { get; } Property Value GameEnd"
  },
  "api/Virial.Text.html": {
    "href": "api/Virial.Text.html",
    "title": "Namespace Virial.Text | Virial",
    "summary": "Namespace Virial.Text Classes AbstractDocumentTip AbstractDocumentTitledTip CombinedTextComponent EventDetails 記録されたイベントの概要を説明するタグです。 FontSize PlayerStates プレイヤーの状態を表すために使用されるタグです。 TextAttribute TextComponentHelper WinConditionTip Interfaces CommunicableTextTag 翻訳キーに一意的な意味を与えるタグです。 Font IDocumentTip IDocumentTitledTip TextComponent Enums AttributeAsset AttributeParams FontAsset FontStyle TextAlignment"
  },
  "api/Virial.Utilities.Cache-1.html": {
    "href": "api/Virial.Utilities.Cache-1.html",
    "title": "Class Cache<T> | Virial",
    "summary": "Class Cache<T> Namespace Virial.Utilities public class Cache<T> where T : class Type Parameters T Inheritance object Cache<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Cache(Func<T>) public Cache(Func<T> getter) Parameters getter Func<T> Methods Get() public T Get() Returns T Operators implicit operator Cache<T>(Func<T>) public static implicit operator Cache<T>(Func<T> getter) Parameters getter Func<T> Returns Cache<T> implicit operator T(Cache<T>) public static implicit operator T(Cache<T> cache) Parameters cache Cache<T> Returns T"
  },
  "api/Virial.Utilities.ComponentCache-1.html": {
    "href": "api/Virial.Utilities.ComponentCache-1.html",
    "title": "Class ComponentCache<T> | Virial",
    "summary": "Class ComponentCache<T> Namespace Virial.Utilities public class ComponentCache<T> where T : Component Type Parameters T Inheritance object ComponentCache<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ComponentCache(Func<T>) public ComponentCache(Func<T> getter) Parameters getter Func<T> Methods Get() public T Get() Returns T Operators implicit operator ComponentCache<T>(Func<T>) public static implicit operator ComponentCache<T>(Func<T> getter) Parameters getter Func<T> Returns ComponentCache<T>"
  },
  "api/Virial.Utilities.FunctionalGetter-1.html": {
    "href": "api/Virial.Utilities.FunctionalGetter-1.html",
    "title": "Class FunctionalGetter<T> | Virial",
    "summary": "Class FunctionalGetter<T> Namespace Virial.Utilities public class FunctionalGetter<T> : IFunctionalGetProperty<T> Type Parameters T Inheritance object FunctionalGetter<T> Implements IFunctionalGetProperty<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FunctionalGetter(Func<T>) public FunctionalGetter(Func<T> getter) Parameters getter Func<T> Properties Value public T Value { get; } Property Value T"
  },
  "api/Virial.Utilities.FunctionalProperty-1.html": {
    "href": "api/Virial.Utilities.FunctionalProperty-1.html",
    "title": "Class FunctionalProperty<T> | Virial",
    "summary": "Class FunctionalProperty<T> Namespace Virial.Utilities public class FunctionalProperty<T> : IFunctionalProperty<T>, IFunctionalSetProperty<T>, IFunctionalGetProperty<T> Type Parameters T Inheritance object FunctionalProperty<T> Implements IFunctionalProperty<T> IFunctionalSetProperty<T> IFunctionalGetProperty<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FunctionalProperty(Func<T>, Action<T>) public FunctionalProperty(Func<T> getter, Action<T> setter) Parameters getter Func<T> setter Action<T> Properties Value public T Value { get; set; } Property Value T"
  },
  "api/Virial.Utilities.FunctionalSetter-1.html": {
    "href": "api/Virial.Utilities.FunctionalSetter-1.html",
    "title": "Class FunctionalSetter<T> | Virial",
    "summary": "Class FunctionalSetter<T> Namespace Virial.Utilities public class FunctionalSetter<T> : IFunctionalSetProperty<T> Type Parameters T Inheritance object FunctionalSetter<T> Implements IFunctionalSetProperty<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FunctionalSetter(Action<T>) public FunctionalSetter(Action<T> setter) Parameters setter Action<T> Properties Value public T Value { set; } Property Value T"
  },
  "api/Virial.Utilities.IFunctionalGetProperty-1.html": {
    "href": "api/Virial.Utilities.IFunctionalGetProperty-1.html",
    "title": "Interface IFunctionalGetProperty<T> | Virial",
    "summary": "Interface IFunctionalGetProperty<T> Namespace Virial.Utilities public interface IFunctionalGetProperty<T> Type Parameters T Properties Value T Value { get; } Property Value T"
  },
  "api/Virial.Utilities.IFunctionalProperty-1.html": {
    "href": "api/Virial.Utilities.IFunctionalProperty-1.html",
    "title": "Interface IFunctionalProperty<T> | Virial",
    "summary": "Interface IFunctionalProperty<T> Namespace Virial.Utilities public interface IFunctionalProperty<T> : IFunctionalSetProperty<T>, IFunctionalGetProperty<T> Type Parameters T Inherited Members IFunctionalSetProperty<T>.Value"
  },
  "api/Virial.Utilities.IFunctionalSetProperty-1.html": {
    "href": "api/Virial.Utilities.IFunctionalSetProperty-1.html",
    "title": "Interface IFunctionalSetProperty<T> | Virial",
    "summary": "Interface IFunctionalSetProperty<T> Namespace Virial.Utilities public interface IFunctionalSetProperty<T> Type Parameters T Properties Value T Value { set; } Property Value T"
  },
  "api/Virial.Utilities.IHasher.html": {
    "href": "api/Virial.Utilities.IHasher.html",
    "title": "Interface IHasher | Virial",
    "summary": "Interface IHasher Namespace Virial.Utilities public interface IHasher Methods GetIntegerHash(string) int GetIntegerHash(string text) Parameters text string Returns int GetLongHash(string) long GetLongHash(string text) Parameters text string Returns long"
  },
  "api/Virial.Utilities.OrderedList-2.html": {
    "href": "api/Virial.Utilities.OrderedList-2.html",
    "title": "Class OrderedList<T, Key> | Virial",
    "summary": "Class OrderedList<T, Key> Namespace Virial.Utilities public class OrderedList<T, Key> : IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable Type Parameters T Key Inheritance object OrderedList<T, Key> Implements IReadOnlyCollection<T> IEnumerable<T> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods EnumerableHelper.Delimit<T>(IEnumerable<T>, T) EnumerableHelper.Find<T>(IEnumerable<T>, Func<T, bool>, out T) Constructors OrderedList(Func<T, Key>, Func<Key, Key, int>) public OrderedList(Func<T, Key> keySelector, Func<Key, Key, int> keyComparer) Parameters keySelector Func<T, Key> keyComparer Func<Key, Key, int> Properties Count Gets the number of elements in the collection. public int Count { get; } Property Value int The number of elements in the collection. Methods Add(T) public void Add(T item) Parameters item T AscendingList(Func<T, int>) public static OrderedList<T, int> AscendingList(Func<T, int> keySelector) Parameters keySelector Func<T, int> Returns OrderedList<T, int> DescendingList(Func<T, int>) public static OrderedList<T, int> DescendingList(Func<T, int> keySelector) Parameters keySelector Func<T, int> Returns OrderedList<T, int> Remove(T) public bool Remove(T item) Parameters item T Returns bool"
  },
  "api/Virial.Utilities.SerializedDataReader.html": {
    "href": "api/Virial.Utilities.SerializedDataReader.html",
    "title": "Class SerializedDataReader | Virial",
    "summary": "Class SerializedDataReader Namespace Virial.Utilities public class SerializedDataReader : IDisposable Inheritance object SerializedDataReader Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SerializedDataReader(Stream) public SerializedDataReader(Stream stream) Parameters stream Stream Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ReadByte() public byte ReadByte() Returns byte ReadInt32() public int ReadInt32() Returns int ReadSingle() public float ReadSingle() Returns float ReadString() public string ReadString() Returns string"
  },
  "api/Virial.Utilities.SerializedDataWriter.html": {
    "href": "api/Virial.Utilities.SerializedDataWriter.html",
    "title": "Class SerializedDataWriter | Virial",
    "summary": "Class SerializedDataWriter Namespace Virial.Utilities public class SerializedDataWriter Inheritance object SerializedDataWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToData() public byte[] ToData() Returns byte[] Write(byte) public SerializedDataWriter Write(byte val) Parameters val byte Returns SerializedDataWriter Write(int) public SerializedDataWriter Write(int val) Parameters val int Returns SerializedDataWriter Write(float) public SerializedDataWriter Write(float val) Parameters val float Returns SerializedDataWriter Write(string) 文字列を書き込みます。 ReadString()がこれに対応します。 public SerializedDataWriter Write(string str) Parameters str string Returns SerializedDataWriter"
  },
  "api/Virial.Utilities.html": {
    "href": "api/Virial.Utilities.html",
    "title": "Namespace Virial.Utilities | Virial",
    "summary": "Namespace Virial.Utilities Classes Cache<T> ComponentCache<T> FunctionalGetter<T> FunctionalProperty<T> FunctionalSetter<T> OrderedList<T, Key> SerializedDataReader SerializedDataWriter Interfaces IFunctionalGetProperty<T> IFunctionalProperty<T> IFunctionalSetProperty<T> IHasher"
  },
  "api/Virial.VisualProgramming.AbstractExecutableNode.html": {
    "href": "api/Virial.VisualProgramming.AbstractExecutableNode.html",
    "title": "Class AbstractExecutableNode | Virial",
    "summary": "Class AbstractExecutableNode Namespace Virial.VisualProgramming public abstract class AbstractExecutableNode : INode Inheritance object AbstractExecutableNode Implements INode Derived FunctionNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FollowersLength public int FollowersLength { get; } Property Value int InputLength public abstract int InputLength { get; } Property Value int Operation public abstract string Operation { get; } Property Value string OutputLength public abstract int OutputLength { get; } Property Value int Methods CoEvaluate(VPEnvironment) public abstract IEnumerator CoEvaluate(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator CoEvaluateFollower(VPEnvironment, int) protected IEnumerator CoEvaluateFollower(VPEnvironment env, int branch) Parameters env VPEnvironment branch int Returns IEnumerator GetFollowerId(int) public int GetFollowerId(int branch) Parameters branch int Returns int GetInput(int) public abstract IVPCalculable GetInput(int index) Parameters index int Returns IVPCalculable GetOutput(int) public abstract IVPCalculable GetOutput(int index) Parameters index int Returns IVPCalculable SetInput(int, IVPCalculable) public abstract void SetInput(int index, IVPCalculable value) Parameters index int value IVPCalculable"
  },
  "api/Virial.VisualProgramming.EvaluatorFactory.html": {
    "href": "api/Virial.VisualProgramming.EvaluatorFactory.html",
    "title": "Delegate EvaluatorFactory | Virial",
    "summary": "Delegate EvaluatorFactory Namespace Virial.VisualProgramming public delegate IEnumerator EvaluatorFactory(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator"
  },
  "api/Virial.VisualProgramming.Exception.BrokenProgramException.html": {
    "href": "api/Virial.VisualProgramming.Exception.BrokenProgramException.html",
    "title": "Class BrokenProgramException | Virial",
    "summary": "Class BrokenProgramException Namespace Virial.VisualProgramming.Exception public sealed class BrokenProgramException : VPException, ISerializable Inheritance object Exception VPException BrokenProgramException Implements ISerializable Inherited Members VPException.ToString() Exception.GetBaseException() Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Constructors BrokenProgramException(string?) public BrokenProgramException(string? message) Parameters message string"
  },
  "api/Virial.VisualProgramming.Exception.ExecutionPathViolationException.html": {
    "href": "api/Virial.VisualProgramming.Exception.ExecutionPathViolationException.html",
    "title": "Class ExecutionPathViolationException | Virial",
    "summary": "Class ExecutionPathViolationException Namespace Virial.VisualProgramming.Exception public sealed class ExecutionPathViolationException : VPException, ISerializable Inheritance object Exception VPException ExecutionPathViolationException Implements ISerializable Inherited Members VPException.ToString() Exception.GetBaseException() Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite object.Equals(object) object.Equals(object, object) object.GetHashCode() object.ReferenceEquals(object, object) Constructors ExecutionPathViolationException(string?) public ExecutionPathViolationException(string? message) Parameters message string"
  },
  "api/Virial.VisualProgramming.Exception.InterruptionException.html": {
    "href": "api/Virial.VisualProgramming.Exception.InterruptionException.html",
    "title": "Class InterruptionException | Virial",
    "summary": "Class InterruptionException Namespace Virial.VisualProgramming.Exception public class InterruptionException : VPException, ISerializable Inheritance object Exception VPException InterruptionException Implements ISerializable Inherited Members VPException.ToString() Exception.GetBaseException() Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InterruptionException(string?) public InterruptionException(string? message) Parameters message string"
  },
  "api/Virial.VisualProgramming.Exception.VPException.html": {
    "href": "api/Virial.VisualProgramming.Exception.VPException.html",
    "title": "Class VPException | Virial",
    "summary": "Class VPException Namespace Virial.VisualProgramming.Exception public class VPException : Exception, ISerializable Inheritance object Exception VPException Implements ISerializable Derived BrokenProgramException ExecutionPathViolationException InterruptionException Inherited Members Exception.GetBaseException() Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VPException(string) public VPException(string message) Parameters message string Methods ToString() Creates and returns a string representation of the current exception. public override string ToString() Returns string A string representation of the current exception."
  },
  "api/Virial.VisualProgramming.Exception.html": {
    "href": "api/Virial.VisualProgramming.Exception.html",
    "title": "Namespace Virial.VisualProgramming.Exception | Virial",
    "summary": "Namespace Virial.VisualProgramming.Exception Classes BrokenProgramException ExecutionPathViolationException InterruptionException VPException"
  },
  "api/Virial.VisualProgramming.FunctionNode.html": {
    "href": "api/Virial.VisualProgramming.FunctionNode.html",
    "title": "Class FunctionNode | Virial",
    "summary": "Class FunctionNode Namespace Virial.VisualProgramming public class FunctionNode : AbstractExecutableNode, INode Inheritance object AbstractExecutableNode FunctionNode Implements INode Inherited Members AbstractExecutableNode.FollowersLength AbstractExecutableNode.GetFollowerId(int) AbstractExecutableNode.CoEvaluateFollower(VPEnvironment, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FunctionNode(int, int[], int) public FunctionNode(int inputs, int[] outputs, int followers) Parameters inputs int outputs int[] followers int Properties InputLength public override int InputLength { get; } Property Value int Operation public override string Operation { get; } Property Value string OutputLength public override int OutputLength { get; } Property Value int Methods CoEvaluate(VPEnvironment) public override IEnumerator CoEvaluate(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator GetInput(int) public override IVPCalculable GetInput(int index) Parameters index int Returns IVPCalculable GetOutput(int) public override IVPCalculable GetOutput(int index) Parameters index int Returns IVPCalculable SetInput(int, IVPCalculable) public override void SetInput(int index, IVPCalculable value) Parameters index int value IVPCalculable"
  },
  "api/Virial.VisualProgramming.ICircuit.html": {
    "href": "api/Virial.VisualProgramming.ICircuit.html",
    "title": "Interface ICircuit | Virial",
    "summary": "Interface ICircuit Namespace Virial.VisualProgramming public interface ICircuit Properties InputLength int InputLength { get; } Property Value int OutputLength int OutputLength { get; } Property Value int Methods GenerateInstance(IVPNumeric[]) 入力をもとに回路のインスタンスを作成します。 VPEnvironment GenerateInstance(IVPNumeric[] input) Parameters input IVPNumeric[] Returns VPEnvironment GetNode(int) INode GetNode(int id) Parameters id int Returns INode GetOutput(int) 出力を取得します。 IVPCalculable GetOutput(int index) Parameters index int Returns IVPCalculable"
  },
  "api/Virial.VisualProgramming.INode.html": {
    "href": "api/Virial.VisualProgramming.INode.html",
    "title": "Interface INode | Virial",
    "summary": "Interface INode Namespace Virial.VisualProgramming public interface INode Properties FollowersLength int FollowersLength { get; } Property Value int InputLength int InputLength { get; } Property Value int Operation string Operation { get; } Property Value string OutputLength int OutputLength { get; } Property Value int Methods CoEvaluate(VPEnvironment) IEnumerator CoEvaluate(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator GetFollowerId(int) int GetFollowerId(int branch) Parameters branch int Returns int GetInput(int) IVPCalculable GetInput(int index) Parameters index int Returns IVPCalculable GetOutput(int) IVPCalculable GetOutput(int index) Parameters index int Returns IVPCalculable SetInput(int, IVPCalculable) void SetInput(int index, IVPCalculable value) Parameters index int value IVPCalculable"
  },
  "api/Virial.VisualProgramming.INodesCollection.html": {
    "href": "api/Virial.VisualProgramming.INodesCollection.html",
    "title": "Interface INodesCollection | Virial",
    "summary": "Interface INodesCollection Namespace Virial.VisualProgramming public interface INodesCollection Methods TryGetNode(string, out NodeFactory) bool TryGetNode(string operation, out NodeFactory factory) Parameters operation string factory NodeFactory Returns bool"
  },
  "api/Virial.VisualProgramming.IVPCalculable.html": {
    "href": "api/Virial.VisualProgramming.IVPCalculable.html",
    "title": "Interface IVPCalculable | Virial",
    "summary": "Interface IVPCalculable Namespace Virial.VisualProgramming public interface IVPCalculable Properties Id 値のIDを返します。-1を除き、VP回路内で重複しない値です。 int Id { get; } Property Value int -1の場合、IDが割り振られない定数値。0以上の場合、回路内で重複しないID IsContextDependent 計算がコンテキスト依存だった場合はtrueを返すようにしてください。 PrepareIfNeededの実行以前では、値を使用しないでください。 bool IsContextDependent { get; } Property Value bool Methods Get(VPEnvironment) IVPNumeric Get(VPEnvironment env) Parameters env VPEnvironment Returns IVPNumeric PrepareIfNeeded(VPEnvironment) IEnumerator PrepareIfNeeded(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator"
  },
  "api/Virial.VisualProgramming.IVPNumeric.html": {
    "href": "api/Virial.VisualProgramming.IVPNumeric.html",
    "title": "Interface IVPNumeric | Virial",
    "summary": "Interface IVPNumeric Namespace Virial.VisualProgramming public interface IVPNumeric Methods GetBool() bool GetBool() Returns bool GetFloat() float GetFloat() Returns float GetGeneric<T>(out T) bool GetGeneric<T>(out T value) where T : class Parameters value T Returns bool Type Parameters T GetInt() int GetInt() Returns int GetProperty() IVPTypeProperty GetProperty() Returns IVPTypeProperty GetString() string GetString() Returns string SetBool(bool) void SetBool(bool value) Parameters value bool SetFloat(float) void SetFloat(float value) Parameters value float SetGeneric<T>(T) bool SetGeneric<T>(T value) where T : class Parameters value T Returns bool Type Parameters T SetInt(int) void SetInt(int value) Parameters value int SetString(string) void SetString(string value) Parameters value string"
  },
  "api/Virial.VisualProgramming.IVPTypeProperty.html": {
    "href": "api/Virial.VisualProgramming.IVPTypeProperty.html",
    "title": "Interface IVPTypeProperty | Virial",
    "summary": "Interface IVPTypeProperty Namespace Virial.VisualProgramming public interface IVPTypeProperty Properties CanCastToBool bool CanCastToBool { get; } Property Value bool CanCastToFloat bool CanCastToFloat { get; } Property Value bool CanCastToInteger bool CanCastToInteger { get; } Property Value bool CanCastToNumeric bool CanCastToNumeric { get; } Property Value bool CanCastToString bool CanCastToString { get; } Property Value bool Methods CanCastTo<T>() bool CanCastTo<T>() where T : class Returns bool Type Parameters T"
  },
  "api/Virial.VisualProgramming.NodeFactory.html": {
    "href": "api/Virial.VisualProgramming.NodeFactory.html",
    "title": "Class NodeFactory | Virial",
    "summary": "Class NodeFactory Namespace Virial.VisualProgramming public class NodeFactory Inheritance object NodeFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NodeFactory(NodeGenerator, NodeProperty) public NodeFactory(NodeGenerator generator, NodeProperty property) Parameters generator NodeGenerator property NodeProperty Properties Property public NodeProperty Property { get; } Property Value NodeProperty Methods GenerateNode(IReadOnlyList<int>) public INode GenerateNode(IReadOnlyList<int> outputId) Parameters outputId IReadOnlyList<int> Returns INode"
  },
  "api/Virial.VisualProgramming.NodeGenerator.html": {
    "href": "api/Virial.VisualProgramming.NodeGenerator.html",
    "title": "Delegate NodeGenerator | Virial",
    "summary": "Delegate NodeGenerator Namespace Virial.VisualProgramming public delegate INode NodeGenerator(IReadOnlyList<int> outputId) Parameters outputId IReadOnlyList<int> Returns INode"
  },
  "api/Virial.VisualProgramming.NodeProperty.html": {
    "href": "api/Virial.VisualProgramming.NodeProperty.html",
    "title": "Class NodeProperty | Virial",
    "summary": "Class NodeProperty Namespace Virial.VisualProgramming public record NodeProperty : IEquatable<NodeProperty> Inheritance object NodeProperty Implements IEquatable<NodeProperty> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NodeProperty(Func<string>, int, int, Func<int, string>, Func<int, string>, Func<int, VPTypeLimitation>, Func<int, IVPTypeProperty>, int, int) public NodeProperty(Func<string> nodeDesc, int InputLength, int OutputLength, Func<int, string> InputDesc, Func<int, string> OutputDesc, Func<int, VPTypeLimitation> InputLimitation, Func<int, IVPTypeProperty> OutputLimitation, int ExecutionInputLength, int ExecutionOutputLength) Parameters nodeDesc Func<string> InputLength int OutputLength int InputDesc Func<int, string> OutputDesc Func<int, string> InputLimitation Func<int, VPTypeLimitation> OutputLimitation Func<int, IVPTypeProperty> ExecutionInputLength int ExecutionOutputLength int Properties ExecutionInputLength public int ExecutionInputLength { get; init; } Property Value int ExecutionOutputLength public int ExecutionOutputLength { get; init; } Property Value int InputDesc public Func<int, string> InputDesc { get; init; } Property Value Func<int, string> InputLength public int InputLength { get; init; } Property Value int InputLimitation public Func<int, VPTypeLimitation> InputLimitation { get; init; } Property Value Func<int, VPTypeLimitation> OutputDesc public Func<int, string> OutputDesc { get; init; } Property Value Func<int, string> OutputLength public int OutputLength { get; init; } Property Value int OutputLimitation public Func<int, IVPTypeProperty> OutputLimitation { get; init; } Property Value Func<int, IVPTypeProperty> nodeDesc public Func<string> nodeDesc { get; init; } Property Value Func<string>"
  },
  "api/Virial.VisualProgramming.VPBool.html": {
    "href": "api/Virial.VisualProgramming.VPBool.html",
    "title": "Class VPBool | Virial",
    "summary": "Class VPBool Namespace Virial.VisualProgramming public class VPBool : IVPNumeric Inheritance object VPBool Implements IVPNumeric Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPBool(bool) public VPBool(bool value) Parameters value bool Methods GetBool() public bool GetBool() Returns bool GetFloat() public float GetFloat() Returns float GetInt() public int GetInt() Returns int GetString() public string GetString() Returns string SetBool(bool) public void SetBool(bool value) Parameters value bool SetFloat(float) public void SetFloat(float value) Parameters value float SetInt(int) public void SetInt(int value) Parameters value int SetString(string) public void SetString(string value) Parameters value string"
  },
  "api/Virial.VisualProgramming.VPCacheValue.html": {
    "href": "api/Virial.VisualProgramming.VPCacheValue.html",
    "title": "Class VPCacheValue | Virial",
    "summary": "Class VPCacheValue Namespace Virial.VisualProgramming public class VPCacheValue : IVPCalculable Inheritance object VPCacheValue Implements IVPCalculable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPCacheValue(EvaluatorFactory, int) public VPCacheValue(EvaluatorFactory evaluator, int id) Parameters evaluator EvaluatorFactory id int Properties Id 値のIDを返します。-1を除き、VP回路内で重複しない値です。 public int Id { get; } Property Value int -1の場合、IDが割り振られない定数値。0以上の場合、回路内で重複しないID IsContextDependent 計算がコンテキスト依存だった場合はtrueを返すようにしてください。 PrepareIfNeededの実行以前では、値を使用しないでください。 public bool IsContextDependent { get; } Property Value bool Methods Get(VPEnvironment) public IVPNumeric Get(VPEnvironment env) Parameters env VPEnvironment Returns IVPNumeric MarkAsContextDependentValue() public void MarkAsContextDependentValue() PrepareIfNeeded(VPEnvironment) public IEnumerator PrepareIfNeeded(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator Set(VPEnvironment, IVPNumeric, bool) public void Set(VPEnvironment env, IVPNumeric numeric, bool contextDependent) Parameters env VPEnvironment numeric IVPNumeric contextDependent bool"
  },
  "api/Virial.VisualProgramming.VPConstant.html": {
    "href": "api/Virial.VisualProgramming.VPConstant.html",
    "title": "Class VPConstant | Virial",
    "summary": "Class VPConstant Namespace Virial.VisualProgramming public class VPConstant : IVPCalculable Inheritance object VPConstant Implements IVPCalculable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPConstant(IVPNumeric) public VPConstant(IVPNumeric numeric) Parameters numeric IVPNumeric Properties Id 値のIDを返します。-1を除き、VP回路内で重複しない値です。 public int Id { get; } Property Value int -1の場合、IDが割り振られない定数値。0以上の場合、回路内で重複しないID IsContextDependent 計算がコンテキスト依存だった場合はtrueを返すようにしてください。 PrepareIfNeededの実行以前では、値を使用しないでください。 public bool IsContextDependent { get; } Property Value bool Methods Get(VPEnvironment) public IVPNumeric Get(VPEnvironment env) Parameters env VPEnvironment Returns IVPNumeric PrepareIfNeeded(VPEnvironment) public IEnumerator PrepareIfNeeded(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator"
  },
  "api/Virial.VisualProgramming.VPDummyValue.html": {
    "href": "api/Virial.VisualProgramming.VPDummyValue.html",
    "title": "Class VPDummyValue | Virial",
    "summary": "Class VPDummyValue Namespace Virial.VisualProgramming public class VPDummyValue : IVPCalculable Inheritance object VPDummyValue Implements IVPCalculable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPDummyValue(int) public VPDummyValue(int id) Parameters id int Properties Id 値のIDを返します。-1を除き、VP回路内で重複しない値です。 public int Id { get; } Property Value int -1の場合、IDが割り振られない定数値。0以上の場合、回路内で重複しないID IsContextDependent 計算がコンテキスト依存だった場合はtrueを返すようにしてください。 PrepareIfNeededの実行以前では、値を使用しないでください。 public bool IsContextDependent { get; } Property Value bool Methods Get(VPEnvironment) public IVPNumeric Get(VPEnvironment env) Parameters env VPEnvironment Returns IVPNumeric PrepareIfNeeded(VPEnvironment) public IEnumerator PrepareIfNeeded(VPEnvironment env) Parameters env VPEnvironment Returns IEnumerator"
  },
  "api/Virial.VisualProgramming.VPEnvironment.html": {
    "href": "api/Virial.VisualProgramming.VPEnvironment.html",
    "title": "Class VPEnvironment | Virial",
    "summary": "Class VPEnvironment Namespace Virial.VisualProgramming public class VPEnvironment Inheritance object VPEnvironment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPEnvironment(VPEnvironment?, ICircuit) public VPEnvironment(VPEnvironment? parent, ICircuit circuit) Parameters parent VPEnvironment circuit ICircuit Methods GetNode(int) public INode GetNode(int id) Parameters id int Returns INode PushContextIndependentValue(int, IVPNumeric) public void PushContextIndependentValue(int id, IVPNumeric value) Parameters id int value IVPNumeric TryGetValue(int, out IVPNumeric) public bool TryGetValue(int id, out IVPNumeric result) Parameters id int result IVPNumeric Returns bool"
  },
  "api/Virial.VisualProgramming.VPFloat.html": {
    "href": "api/Virial.VisualProgramming.VPFloat.html",
    "title": "Class VPFloat | Virial",
    "summary": "Class VPFloat Namespace Virial.VisualProgramming public class VPFloat : IVPNumeric Inheritance object VPFloat Implements IVPNumeric Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPFloat(float) public VPFloat(float number) Parameters number float Methods GetBool() public bool GetBool() Returns bool GetFloat() public float GetFloat() Returns float GetInt() public int GetInt() Returns int GetString() public string GetString() Returns string SetBool(bool) public void SetBool(bool value) Parameters value bool SetFloat(float) public void SetFloat(float value) Parameters value float SetInt(int) public void SetInt(int value) Parameters value int SetString(string) public void SetString(string value) Parameters value string"
  },
  "api/Virial.VisualProgramming.VPInt.html": {
    "href": "api/Virial.VisualProgramming.VPInt.html",
    "title": "Class VPInt | Virial",
    "summary": "Class VPInt Namespace Virial.VisualProgramming public class VPInt : IVPNumeric Inheritance object VPInt Implements IVPNumeric Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPInt(int) public VPInt(int number) Parameters number int Methods GetBool() public bool GetBool() Returns bool GetFloat() public float GetFloat() Returns float GetInt() public int GetInt() Returns int GetString() public string GetString() Returns string SetBool(bool) public void SetBool(bool value) Parameters value bool SetFloat(float) public void SetFloat(float value) Parameters value float SetInt(int) public void SetInt(int value) Parameters value int SetString(string) public void SetString(string value) Parameters value string"
  },
  "api/Virial.VisualProgramming.VPLimitations.html": {
    "href": "api/Virial.VisualProgramming.VPLimitations.html",
    "title": "Class VPLimitations | Virial",
    "summary": "Class VPLimitations Namespace Virial.VisualProgramming public static class VPLimitations Inheritance object VPLimitations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Numeric public static readonly VPTypeLimitation Numeric Field Value VPTypeLimitation"
  },
  "api/Virial.VisualProgramming.VPString.html": {
    "href": "api/Virial.VisualProgramming.VPString.html",
    "title": "Class VPString | Virial",
    "summary": "Class VPString Namespace Virial.VisualProgramming public class VPString : IVPNumeric Inheritance object VPString Implements IVPNumeric Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VPString(string) public VPString(string value) Parameters value string Methods GetBool() public bool GetBool() Returns bool GetFloat() public float GetFloat() Returns float GetInt() public int GetInt() Returns int GetString() public string GetString() Returns string SetBool(bool) public void SetBool(bool value) Parameters value bool SetFloat(float) public void SetFloat(float value) Parameters value float SetInt(int) public void SetInt(int value) Parameters value int SetString(string) public void SetString(string value) Parameters value string"
  },
  "api/Virial.VisualProgramming.VPTypeLimitation.html": {
    "href": "api/Virial.VisualProgramming.VPTypeLimitation.html",
    "title": "Delegate VPTypeLimitation | Virial",
    "summary": "Delegate VPTypeLimitation Namespace Virial.VisualProgramming public delegate bool VPTypeLimitation(IVPTypeProperty prop) Parameters prop IVPTypeProperty Returns bool"
  },
  "api/Virial.VisualProgramming.VPTypeProperties.html": {
    "href": "api/Virial.VisualProgramming.VPTypeProperties.html",
    "title": "Class VPTypeProperties | Virial",
    "summary": "Class VPTypeProperties Namespace Virial.VisualProgramming public static class VPTypeProperties Inheritance object VPTypeProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Hidden public static readonly IVPTypeProperty Hidden Field Value IVPTypeProperty Number public static readonly IVPTypeProperty Number Field Value IVPTypeProperty String public static readonly IVPTypeProperty String Field Value IVPTypeProperty"
  },
  "api/Virial.VisualProgramming.html": {
    "href": "api/Virial.VisualProgramming.html",
    "title": "Namespace Virial.VisualProgramming | Virial",
    "summary": "Namespace Virial.VisualProgramming Classes AbstractExecutableNode FunctionNode NodeFactory NodeProperty VPBool VPCacheValue VPConstant VPDummyValue VPEnvironment VPFloat VPInt VPLimitations VPString VPTypeProperties Interfaces ICircuit INode INodesCollection IVPCalculable IVPNumeric IVPTypeProperty Delegates EvaluatorFactory NodeGenerator VPTypeLimitation"
  },
  "api/Virial.html": {
    "href": "api/Virial.html",
    "title": "Namespace Virial | Virial",
    "summary": "Namespace Virial Classes BitMasks ビットマスクを生成するAPI群です。 DependentLifespan 他の寿命オブジェクトにキルのタイミングを委ねる寿命オブジェクトです。 委ねる寿命オブジェクトを注入されるまでは少なくとも生存します。 FlexibleLifespan 注入された寿命オブジェクトの寿命が尽きるか、Release操作によってキルできます。 FunctionalLifespan 関数によって定義される寿命付きオブジェクトです。 NebulaAPI NonHostPlayerException NonOwnerPlayerException SimpleLifespan ごく単純な寿命オブジェクトを表します。 Release操作によってのみキルできます。 Structs Color Interfaces BitMask<T> 部分集合を表すマスクです。 EditableBitMask<T> 編集可能なマスクです。 要素を追加する操作が可能です。 IBit32 IBit64 ILifespan 寿命オブジェクトを表します。 IModuleFactory INestedLifespan 入れ子状になった寿命オブジェクトを表します。 IReleasable 任意のタイミングで解放できるオブジェクトを表します。 能動的に寿命が切れる寿命オブジェクトが実装すべきインターフェースです。"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Nebula on the Ship Script API \"Virial\" Document | Virial",
    "summary": "Nebula on the Ship Script API \"Virial\" Document VirialはAmong UsのMod\"Nebula on the Ship\"のスクリプトで使用できるAPIです。 Virial APIを通してスクリプトアドオンの開発者はゲームにアクセスできます。 お問い合わせ ご質問およびご要望は公式Discordサーバーまでお寄せください。 GitHubリポジトリのIssuesは使用していません。"
  },
  "index.html": {
    "href": "index.html",
    "title": "Nebula on the Ship Script API \"Virial\" Documents | Virial",
    "summary": "Nebula on the Ship Script API \"Virial\" Documents VirialはAmong UsのMod\"Nebula on the Ship\"のスクリプトAPIです。 スクリプトアドオンの開発者にゲームにアクセスする手段を提供します。"
  }
}